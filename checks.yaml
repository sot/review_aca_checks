checks:
- context: |+
    my %mm = Ska::Parse_CM_File::MM({file => $mm_file, ret_type => 'hash'}) if ($mm_file);

    # Read maneuver management summary for handy obsid time checks
    my @ps = Ska::Parse_CM_File::PS($ps_file) if ($ps_file);

    # Read mech check file and parse
    my @mc  = Ska::Parse_CM_File::mechcheck($mech_file) if ($mech_file);

    # Read OR file and integrate into %obs
    my %or = Ska::Parse_CM_File::OR($or_file) if ($or_file);

    # Read FIDSEL (fid light) history file and ODB (for fid
    # characteristics) and parse; use fid_time_violation later (when global_warn set up

    my ($fid_time_violation, $error, $fidsel) = Ska::Parse_CM_File::fidsel($fidsel_file, \@bs) ;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    map { warning("$_\n") } @{$error};
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX


    # Now that global_warn exists, if the DOT wasn't made/modified by SAUSAGE
    # throw an error
    if ($dot_touched_by_sausage == 0 ){
        warning("DOT file not modified by SAUSAGE! \n");
    }


  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L237
  id: '000'
  line_number: 237
  project: starcheck
  text: |-
    map { warning("$_\n") } @{$error};
  title: Put out errors recorded before creation of warning function
  type: code
- context: |
    my @mc  = Ska::Parse_CM_File::mechcheck($mech_file) if ($mech_file);

    # Read OR file and integrate into %obs
    my %or = Ska::Parse_CM_File::OR($or_file) if ($or_file);

    # Read FIDSEL (fid light) history file and ODB (for fid
    # characteristics) and parse; use fid_time_violation later (when global_warn set up

    my ($fid_time_violation, $error, $fidsel) = Ska::Parse_CM_File::fidsel($fidsel_file, \@bs) ;
    map { warning("$_\n") } @{$error};


    # Now that global_warn exists, if the DOT wasn't made/modified by SAUSAGE
    # throw an error
    if ($dot_touched_by_sausage == 0 ){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("DOT file not modified by SAUSAGE! \n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }



    Ska::Starcheck::Obsid::setcolors({ red => $red_font_start,
                       blue => $blue_font_start,
                       yellow => $yellow_font_start,
                                       orange => $orange_font_start,
                       });
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L243
  id: '001'
  line_number: 243
  project: starcheck
  severity: red
  text: |-
    warning("DOT file not modified by SAUSAGE! \n");
  title: DOT file not modified by SAUSAGE
  type: process
- context: |2-
                       blue => $blue_font_start,
                       yellow => $yellow_font_start,
                                       orange => $orange_font_start,
                       });

    my %odb = Ska::Parse_CM_File::odb($odb_file);
    Ska::Starcheck::Obsid::set_odb(%odb);


    Ska::Starcheck::Obsid::set_config($config_ref);

    # Read Maneuver error file containing more accurate maneuver errors
    my @manerr;
    if ($manerr_file) {
        @manerr = Ska::Parse_CM_File::man_err($manerr_file);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    } else { warning("Could not find Maneuver Error file in output/ directory\n") };
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX


    # Get an initial dither state from kadi.  Dither states are then built from backstop commands
    # after this time.  If the running loads will be terminated in advance of new commands in the loads
    # in review, and the RUNNING_LOAD_TERMINATION_TIME backstop "pseudo" command is available, that
    # command will be the first command ($bs[0]) and the kadi dither state will be fetched at that time.
    # This is expected and appropriate.
    my $kadi_dither = get_dither_kadi_state($bs[0]->{date});

    # Read DITHER history file and backstop to determine expected dither state
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L264
  id: '002'
  line_number: 264
  project: starcheck
  severity: red
  text: |-
    } else { warning("Could not find Maneuver Error file in output/ directory\n") };
  title: Missing Maneuver Error file
  type: process
- context: |2-

    # Get an initial dither state from kadi.  Dither states are then built from backstop commands
    # after this time.  If the running loads will be terminated in advance of new commands in the loads
    # in review, and the RUNNING_LOAD_TERMINATION_TIME backstop "pseudo" command is available, that
    # command will be the first command ($bs[0]) and the kadi dither state will be fetched at that time.
    # This is expected and appropriate.
    my $kadi_dither = get_dither_kadi_state($bs[0]->{date});

    # Read DITHER history file and backstop to determine expected dither state
    my ($dither_error, $dither) = Ska::Parse_CM_File::dither($dither_file, \@bs, $kadi_dither);

    my ($radmon_time_violation, $radmon) = Ska::Parse_CM_File::radmon($radmon_file, \@bs);

    # if dither history runs into load or kadi mismatch
    if ($dither_error ne ""){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning($dither_error);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }

    # if radmon history runs into load
    if ($radmon_time_violation){
      warning("Radmon History runs into load\n");
    }

    # if fidsel history runs into load
    if ($fid_time_violation){
        warning("Fidsel History runs into load\n");
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L281
  id: '003'
  line_number: 281
  project: starcheck
  severity: red
  text: |-
    warning($dither_error);
  title: Inconsistent dither continuity
  type: process
- context: |-
    # This is expected and appropriate.
    my $kadi_dither = get_dither_kadi_state($bs[0]->{date});

    # Read DITHER history file and backstop to determine expected dither state
    my ($dither_error, $dither) = Ska::Parse_CM_File::dither($dither_file, \@bs, $kadi_dither);

    my ($radmon_time_violation, $radmon) = Ska::Parse_CM_File::radmon($radmon_file, \@bs);

    # if dither history runs into load or kadi mismatch
    if ($dither_error ne ""){
        warning($dither_error);
    }

    # if radmon history runs into load
    if ($radmon_time_violation){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
      warning("Radmon History runs into load\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }

    # if fidsel history runs into load
    if ($fid_time_violation){
        warning("Fidsel History runs into load\n");
    }


    # Read in the failed acquisition stars
    warning("Could not open ACA bad acquisition stars file $bad_acqs_file\n")
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L286
  id: '004'
  line_number: 286
  project: starcheck
  severity: red
  text: |-
    warning("Radmon History runs into load\n");
  title: Radmon history runs into load
  type: process
- context: |2-

    my ($radmon_time_violation, $radmon) = Ska::Parse_CM_File::radmon($radmon_file, \@bs);

    # if dither history runs into load or kadi mismatch
    if ($dither_error ne ""){
        warning($dither_error);
    }

    # if radmon history runs into load
    if ($radmon_time_violation){
      warning("Radmon History runs into load\n");
    }

    # if fidsel history runs into load
    if ($fid_time_violation){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("Fidsel History runs into load\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }


    # Read in the failed acquisition stars
    warning("Could not open ACA bad acquisition stars file $bad_acqs_file\n")
        unless (Ska::Starcheck::Obsid::set_bad_acqs($bad_acqs_file));


    # Read in the troublesome guide stars
    warning("Could not open ACA bad guide star file $bad_gui_file\n")
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L291
  id: '005'
  line_number: 291
  project: starcheck
  severity: red
  text: |-
    warning("Fidsel History runs into load\n");
  title: Fidsel History runs into load
  type: process
- context: |-
    # and the next obsid
    for my $obsid_idx (0 .. ($#obsid_id)){
        $obs{$obsid_id[$obsid_idx]}->{prev} = ( $obsid_idx > 0 ) ? $obs{$obsid_id[$obsid_idx-1]} : undef;
        $obs{$obsid_id[$obsid_idx]}->{next} = ( $obsid_idx < $#obsid_id) ? $obs{$obsid_id[$obsid_idx+1]} : undef;
    }

    # Set the NPM times.  This requires the PREV/NEXT entries
    foreach my $obsid (@obsid_id) {
        $obs{$obsid}->set_npm_times();
    }

    # Check that every Guide summary OFLS ID has a matching OFLS ID in DOT

    foreach my $oflsid (keys %guidesumm){
        unless (defined $obs{$oflsid}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("OFLS ID $oflsid in Guide Summ but not in DOT! \n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
    }

    # Add guide_summary data to MP_STARCAT cmd for each obsid.

    HAS_GUIDE:
    foreach my $oflsid (@obsid_id){
        if (defined $guidesumm{$oflsid}){
            $obs{$oflsid}->add_guide_summ($oflsid, \%guidesumm);
        }
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L387
  id: '006'
  line_number: 387
  project: starcheck
  severity: red
  text: |-
    warning("OFLS ID $oflsid in Guide Summ but not in DOT! \n");
  title: OFLS ID in guide summary but not in DOT
  type: process
- context: |-
    foreach my $oflsid (keys %guidesumm){
        unless (defined $obs{$oflsid}){
        warning("OFLS ID $oflsid in Guide Summ but not in DOT! \n");
        }
    }

    # Add guide_summary data to MP_STARCAT cmd for each obsid.

    HAS_GUIDE:
    foreach my $oflsid (@obsid_id){
        if (defined $guidesumm{$oflsid}){
            $obs{$oflsid}->add_guide_summ($oflsid, \%guidesumm);
        }
        else {
            my $obsid = $obs{$oflsid}->{obsid};
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$obs{$oflsid}->{warn}}, sprintf("No Guide Star Summary for obsid $obsid ($oflsid). \n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

    }

    # Set up for SIM-Z checking
    # Find SIMTSC continuity statement from mech check file
    # and find SIMTRANS statements in backstop

    my @sim_trans = ();
    foreach my $mc (@mc) {
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L400
  id: '007'
  line_number: 400
  project: starcheck
  severity: red
  text: |-
    push @{$obs{$oflsid}->{warn}}, sprintf("No Guide Star Summary for obsid $obsid ($oflsid). \n");
  title: No Guide Summary for obsid
  type: process
- context: |2-
            $obs{$obsid}->{plot_field_file} = "$STARCHECK/star_view_$obs{$obsid}->{obsid}.png";
            $obs{$obsid}->{compass_file} = "$STARCHECK/compass$obs{$obsid}->{obsid}.png";
        }
        $obs{$obsid}->check_monitor_commanding(\@bs, $or{$obsid});
        $obs{$obsid}->set_dynamic_mag_limits();
        $obs{$obsid}->check_dither($dither);
        # Get the args that proseco would want
        $obs{$obsid}->{'proseco_args'} = $obs{$obsid}->proseco_args();
        $obs{$obsid}->set_proseco_probs_and_check_P2();
        $obs{$obsid}->check_star_catalog($or{$obsid}, $par{vehicle});
        $obs{$obsid}->check_sim_position(@sim_trans) unless $par{vehicle};
        $obs{$obsid}->check_momentum_unload(\@bs);
        $obs{$obsid}->check_bright_perigee($radmon);

    # Make sure there is only one star catalog per obsid
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning ("More than one star catalog assigned to Obsid $obsid\n")
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        if ($obs{$obsid}->find_command('MP_STARCAT',2));
    }

    my $final_json = json_obsids();
    open(my $JSON_OUT, "> $STARCHECK/obsids.json")
         or die "Couldn't open $STARCHECK/obsids.json for writing\n";
    print $JSON_OUT $final_json;
    close($JSON_OUT);

    # Produce final report
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L542
  id: 008
  line_number: 542
  project: starcheck
  severity: red
  text: |-
    warning ("More than one star catalog assigned to Obsid $obsid\n")
    if ($obs{$obsid}->find_command('MP_STARCAT',2));
  title: More than one star catalog assigned to Obsid
  type: process
- context: |2-

    # Add info about which bad pixel file is being used:
        if (defined $ACA_badpix_date){
        $out .= "Using ACABadPixel file from $ACA_badpix_date Dark Cal \n";
        $save_hash{run}{badpix} = $ACA_badpix_date;
        }

        $out .= "\n";
    }

    if (@global_warn) {
        $out .= "------------  PROCESSING WARNING  -----------------\n\n";
        $out .= $red_font_start;
        foreach (@global_warn) {
        $out .= $_;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$save_hash{processing_warning}}, $_;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        $out .= qq{${font_stop}\n};
    }


    # Run independent attitude checker
    my $ATT_CHECK_AFTER = '2015:315:00:00:00.000';
    if ((defined $char_file) or ($bs[0]->{time} > date2time($ATT_CHECK_AFTER))){
        $out .= "------------  VERIFY ATTITUDE (SI_ALIGN CHECK)  -----------------\n\n";
        # dynamic aimpoint files are required after 21-Aug-2016
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L607
  id: 009
  line_number: 607
  project: starcheck
  text: |-
    push @{$save_hash{processing_warning}}, $_;
  title: Print all collected warnings to starcheck output
  type: code
- context: |2-
        my $set = 0;

        for my $i (reverse (0 .. $#cmd)) {
            if ($cmd[$i] eq 'COMMAND_SW' and $params[$i] =~ /AOMANUVR/) {
    #        print STDERR "First: $cmd[$i], $time[$i], $date[$i] \n";
            $manv_time = $time[$i];
            $set = 1;
        }
        if ($cmd[$i] eq 'MP_TARGQUAT') {
    #        print STDERR "Second: $cmd[$i], $time[$i], $date[$i] \n";
            if ($set eq 1) {
            $time[$i] = $manv_time;
    #        undef $manv_time;    # Make sure that each TARGQUAT gets a unique AOMANUVR time
                $set = 0;
            } else {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            warning ("Found MP_TARGQUAT at $date[$i] without corresponding AOMANUVR\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
        }
        }
    }


    ##***************************************************************************
    sub set_dot_cmd {
    ##***************************************************************************
        %dot_cmd    = (ATS_MANVR  =>  'MP_TARGQUAT',
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L958
  id: '010'
  line_number: 958
  project: starcheck
  severity: red
  text: |-
    warning ("Found MP_TARGQUAT at $date[$i] without corresponding AOMANUVR\n");
  title: No AOMANVER found for MP_TARGQUAT
  type: process
- context: |2-
                return $1;

            }
            else{
                die "Couldn't parse obsid_index = '$obsid_index' in get_obsid()\n";
            }
            }
        }
        }

        # Couldn't match input command to DOT.  This happens normally for
        # replan/reopen loads.  This command is ignored for subsequent
        # starcheck checking, but a global warning at the top is printed
        # in case this is not expected.

    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("Could not find a match in DOT for $cmd at $date\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX

        return ();
    }


    ##***************************************************************************
    sub get_file {
    ##***************************************************************************
        my $glob = shift;
        my $name = shift;
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L1025
  id: '011'
  line_number: 1025
  project: starcheck
  severity: red
  text: |-
    warning("Could not find a match in DOT for $cmd at $date\n");
  title: Could not find a match in DOT for cmd near date
  type: process
- context: |2-

        return ();
    }


    ##***************************************************************************
    sub get_file {
    ##***************************************************************************
        my $glob = shift;
        my $name = shift;
        my $required = shift;
        my $warning = ($required ? "ERROR" : "WARNING");

        my @files = glob($glob);
        if (@files != 1) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          my $warn = ((@files == 0) ?
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                      "$warning: No $name file matching $glob\n"
                      : "$warning: Found more than one file matching $glob, using none\n");
          warning($warn);
        die "\n" if ($required);
        return undef;
        }
        $input_files{$name}=$files[0];
        print STDERR "Using $name file $files[0]\n";
        return $files[0];
    }
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L1041
  id: '012'
  line_number: 1041
  project: starcheck
  severity: red
  text: |-
    my $warn = ((@files == 0) ?
    "$warning: No $name file matching $glob\n"
    : "$warning: Found more than one file matching $glob, using none\n");
  title: Did not find one file of each required type
  type: process
- context: |2-


    ##***************************************************************************
    sub get_file {
    ##***************************************************************************
        my $glob = shift;
        my $name = shift;
        my $required = shift;
        my $warning = ($required ? "ERROR" : "WARNING");

        my @files = glob($glob);
        if (@files != 1) {
          my $warn = ((@files == 0) ?
                      "$warning: No $name file matching $glob\n"
                      : "$warning: Found more than one file matching $glob, using none\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          warning($warn);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        die "\n" if ($required);
        return undef;
        }
        $input_files{$name}=$files[0];
        print STDERR "Using $name file $files[0]\n";
        return $files[0];
    }


    ##***************************************************************************
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L1044
  id: '013'
  line_number: 1044
  project: starcheck
  text: |-
    warning($warn);
  title: Assign the warnings from '012'
  type: code
- context: |2
                      : "$warning: Found more than one file matching $glob, using none\n");
          warning($warn);
        die "\n" if ($required);
        return undef;
        }
        $input_files{$name}=$files[0];
        print STDERR "Using $name file $files[0]\n";
        return $files[0];
    }


    ##***************************************************************************
    sub warning {
    ##***************************************************************************
        my $text = shift;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @global_warn, $text;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        print STDERR $text;
    }


    ##***************************************************************************
    sub usage
    ##***************************************************************************
    {
      my ( $exit ) = @_;
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L1058
  id: '014'
  line_number: 1058
  project: starcheck
  text: |-
    push @global_warn, $text;
  title: Code for warning method
  type: code
- context: |-
    # Use the following (in order of preference):
    # - Backstop command (this relies on the DOT to associate cmd with star catalog)
    # - Guide summary which provides ofls_id and obsid for each star catalog
    # - OFLS ID from the DOT (as a fail-thru to still get some output)
    ##################################################################################
        my $self = shift;
        my $gs = shift;  # Guide summary
        my $oflsid = $self->{dot_obsid};
        my $gs_obsid;
        my $bs_obsid;
        my $mp_obsid_cmd = find_command($self, "MP_OBSID");
        $gs_obsid = $gs->{$oflsid}{guide_summ_obsid} if defined $gs->{$oflsid};
        $bs_obsid = $mp_obsid_cmd->{ID} if $mp_obsid_cmd;
        $self->{obsid} = $bs_obsid || $gs_obsid || $oflsid;
        if (defined $bs_obsid and defined $gs_obsid and $bs_obsid != $gs_obsid) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, sprintf("Obsid mismatch: guide summary %d != backstop %d\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                          $gs_obsid, $bs_obsid);
        }
    }


    ##################################################################################
    sub print_cmd_params {
    ##################################################################################
        my $self = shift;
        foreach my $cmd (@{$self->{commands}}) {
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L445
  id: '015'
  line_number: 445
  project: starcheck
  text: |-
    push @{$self->{warn}}, sprintf("Obsid mismatch: guide summary %d != backstop %d\n",
    $gs_obsid, $bs_obsid);
  title: Mismatch between obsid in guide summary vs. backstop
  type: process
- context: |2-
            foreach (keys %{$m}) {
                $c->{$_} = $m->{$_};
            }
            # Set the default maneuver error (based on WS Davis data) and cap at 85 arcsec
            $c->{man_err} = (exists $c->{angle}) ? 35 + $c->{angle}/2. : 85;
            $c->{man_err} = 85 if ($c->{man_err} > 85);
            # Now check for consistency between quaternion from MANUEVER summary
            # file and the quat from backstop (MP_TARGQUAT cmd)

            # Get quat from MP_TARGQUAT (backstop) command.
            # Compute 4th component (as only first 3 are uplinked) and renormalize.
            # Intent is to match OBC Target Reference subfunction
            my $q4_obc = sqrt(abs(1.0 - $c->{Q1}**2 - $c->{Q2}**2 - $c->{Q3}**2));
            my $norm = sqrt($c->{Q1}**2 + $c->{Q2}**2 + $c->{Q3}**2 + $q4_obc**2);
            if (abs(1.0 - $norm) > 1e-6){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
               push @{$self->{warn}}, sprintf("Uplink quaternion norm value $norm is too far from 1.0\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            my @c_quat_norm = ($c->{Q1} / $norm,
                               $c->{Q2} / $norm,
                               $c->{Q3} / $norm,
                               $q4_obc / $norm);

            # Get quat from MANEUVER summary file.  This is correct to high precision
            my $q_man = Quat->new($m->{ra}, $m->{dec}, $m->{roll});
            my $q_obc = Quat->new(@c_quat_norm);
            my @q_man = @{$q_man->{q}};
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L560
  id: '016'
  line_number: 560
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("Uplink quaternion norm value $norm is too far from 1.0\n");
  title: Quaternion is not normalized
  type: aca_check
- context: |2-
            if (abs(1.0 - $norm) > 1e-6){
               push @{$self->{warn}}, sprintf("Uplink quaternion norm value $norm is too far from 1.0\n");
            }
            my @c_quat_norm = ($c->{Q1} / $norm,
                               $c->{Q2} / $norm,
                               $c->{Q3} / $norm,
                               $q4_obc / $norm);

            # Get quat from MANEUVER summary file.  This is correct to high precision
            my $q_man = Quat->new($m->{ra}, $m->{dec}, $m->{roll});
            my $q_obc = Quat->new(@c_quat_norm);
            my @q_man = @{$q_man->{q}};
            my $q_diff = $q_man->divide($q_obc);

            if (abs($q_diff->{ra0}*3600) > 1.0 || abs($q_diff->{dec}*3600) > 1.0 || abs($q_diff->{roll0}*3600) > 10.0) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{warn}}, sprintf("Target uplink precision problem for MP_TARGQUAT at $c->{date}\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                               . "   Error is yaw, pitch, roll (arcsec) = %.2f  %.2f  %.2f\n"
                               . "   Use Q1,Q2,Q3,Q4 = %.12f %.12f %.12f %.12f\n",
                               $q_diff->{ra0}*3600, $q_diff->{dec}*3600, $q_diff->{roll0}*3600,
                               $q_man[0], $q_man[1], $q_man[2], $q_man[3]);
            }
            }


        }
        push @{$self->{yellow_warn}}, sprintf("Did not find match in MAN summary for MP_TARGQUAT at $c->{date}\n")
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L574
  id: '017'
  line_number: 574
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("Target uplink precision problem for MP_TARGQUAT at $c->{date}\n"
    . "   Error is yaw, pitch, roll (arcsec) = %.2f  %.2f  %.2f\n"
    . "   Use Q1,Q2,Q3,Q4 = %.12f %.12f %.12f %.12f\n",
    $q_diff->{ra0}*3600, $q_diff->{dec}*3600, $q_diff->{roll0}*3600,
    $q_man[0], $q_man[1], $q_man[2], $q_man[3]);
  title: Target uplink precision problem for MP_TARGQUAT
  type: aca_check
- context: |2-
            my $q_obc = Quat->new(@c_quat_norm);
            my @q_man = @{$q_man->{q}};
            my $q_diff = $q_man->divide($q_obc);

            if (abs($q_diff->{ra0}*3600) > 1.0 || abs($q_diff->{dec}*3600) > 1.0 || abs($q_diff->{roll0}*3600) > 10.0) {
                push @{$self->{warn}}, sprintf("Target uplink precision problem for MP_TARGQUAT at $c->{date}\n"
                               . "   Error is yaw, pitch, roll (arcsec) = %.2f  %.2f  %.2f\n"
                               . "   Use Q1,Q2,Q3,Q4 = %.12f %.12f %.12f %.12f\n",
                               $q_diff->{ra0}*3600, $q_diff->{dec}*3600, $q_diff->{roll0}*3600,
                               $q_man[0], $q_man[1], $q_man[2], $q_man[3]);
            }
            }


        }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{yellow_warn}}, sprintf("Did not find match in MAN summary for MP_TARGQUAT at $c->{date}\n")
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            unless ($found);

        }
    }

    ##################################################################################
    sub set_manerr {
    #
    # Set the maneuver error for each MP_TARGQUAT command within the obsid
    # using the more accurate values from Bill Davis' code
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L584
  id: 018
  line_number: 584
  project: starcheck
  severity: yellow
  text: |-
    push @{$self->{yellow_warn}}, sprintf("Did not find match in MAN summary for MP_TARGQUAT at $c->{date}\n")
    unless ($found);
  title: No match in maneuver summary for MP_TARGQUAT
  type: process
- context: |2-
        while ($c = find_command($self, "MP_TARGQUAT", $n)) {

        foreach my $me (@manerr) {
            # There should be a one-to-one mapping between maneuver segments in the maneuver
            # error file and those in the obsid records.  First, find what *should* be the
            # match.  Then check quaternions to make sure

            if ($self->{obsid} eq $me->{obsid} && $n == $me->{Seg}) {
            if (   abs($me->{finalQ1} - $c->{Q1}) < 1e-7
                   && abs($me->{finalQ2} - $c->{Q2}) < 1e-7
                   && abs($me->{finalQ3} - $c->{Q3}) < 1e-7)
            {
                $c->{man_err} = $me->{MaxErrYZ} + $ACA_MANERR_PAD;
                $c->{man_err_data} = $me; # Save the whole record just in case
            } else {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{yellow_warn}}, sprintf("Mismatch in target quaternion ($c->{date}) and maneuver error file\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            }
        }
        $n++;
        }
    }

    ##################################################################################
    sub set_ps_times{
    # Get the observation start and stop times from the processing summary
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L616
  id: 019
  line_number: 616
  project: starcheck
  severity: yellow
  text: |-
    push @{$self->{yellow_warn}}, sprintf("Mismatch in target quaternion ($c->{date}) and maneuver error file\n");
  title: Mismatch in target quaterion at time and entry in maneuver error file
  type: process
- context: |2-
            my $length = length($obsid);
            if (substr($tmp[0], 5-$length, $length) eq $obsid){
            $or_er_start = $tmp[2];
            $or_er_stop = $tmp[3];
            last;
            }
        }
        if (($ps_line =~ /OBSID\s=\s(\d\d\d\d\d)/) && (scalar(@tmp) >= 8 )) {
            if ( $obsid eq $1 ){
            $or_er_start = $tmp[2];
            $or_er_stop = $tmp[3];
            }
        }
        }
        if (not defined $or_er_start or not defined $or_er_stop){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "Could not find obsid $obsid in processing summary\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            $self->{or_er_start} = undef;
            $self->{or_er_stop} = undef;
        }
        else{
            $self->{or_er_start} = date2time($or_er_start);
            $self->{or_er_stop} = date2time($or_er_stop);
        }


    }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L655
  id: '020'
  line_number: 655
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "Could not find obsid $obsid in processing summary\n";
  title: Could not find obsid in MSCH processing summary (mps/ms*.sum)
  type: process
- context: |2-
        }

        # set the observation stop as the beginning of the next maneuever
        # or, if last obsid in load, use the processing summary or/er observation
        # stop time
        if (defined $self->{next}){
            my $next_manvr = find_command($self->{next}, "MP_TARGQUAT", -1);
            if ((defined $next_manvr) & (defined $next_manvr->{tstart})){
                $obs_tstop  = $next_manvr->{tstart};
            }
            else{
                # if the next obsid doesn't have a maneuver (ACIS undercover or whatever)
                # just use next obsid start time
                my $next_cmd_obsid = find_command($self->{next}, "MP_OBSID", -1);
                if ( (defined $next_cmd_obsid) and ( $self->{obsid} != $next_cmd_obsid->{ID}) ){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}}, "Next obsid has no manvr; using next obs start date for checks (dither, momentum)\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    $obs_tstop = $next_cmd_obsid->{time};
                    $self->{no_following_manvr} = 1;
                }
            }
        }
        else{
            $obs_tstop = $self->{or_er_stop};
        }

        if (not defined $obs_tstart or not defined $obs_tstop){
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L702
  id: '021'
  line_number: 702
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, "Next obsid has no manvr; using next obs start date for checks (dither, momentum)\n";
  title: Next obsid has no manvr, using next obsid start for time checks
  type: process
- context: |2+
                # if the next obsid doesn't have a maneuver (ACIS undercover or whatever)
                # just use next obsid start time
                my $next_cmd_obsid = find_command($self->{next}, "MP_OBSID", -1);
                if ( (defined $next_cmd_obsid) and ( $self->{obsid} != $next_cmd_obsid->{ID}) ){
            push @{$self->{fyi}}, "Next obsid has no manvr; using next obs start date for checks (dither, momentum)\n";
                    $obs_tstop = $next_cmd_obsid->{time};
                    $self->{no_following_manvr} = 1;
                }
            }
        }
        else{
            $obs_tstop = $self->{or_er_stop};
        }

        if (not defined $obs_tstart or not defined $obs_tstop){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "Could not determine obsid start and stop times for checks (dither, momentum)\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        else{
            $self->{obs_tstart} = $obs_tstart;
            $self->{obs_tstop} = $obs_tstop;

        }
    }


  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L713
  id: '022'
  line_number: 713
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "Could not determine obsid start and stop times for checks (dither, momentum)\n";
  title: Could not determine start or stop time(s) for obsid
  type: process
- context: |-
    #############################################################################################
    sub check_dither {
    #############################################################################################
        my $self = shift;

        my $dthr = shift;          # Ref to array of hashes containing dither states

        my $large_dith_thresh = 30;   # Amplitude larger than this requires special checking/handling

        my $obs_beg_pad = 8*60;       # Check dither status at obs start + 8 minutes to allow
                                      # for disabled dither because of mon star commanding
        my $obs_end_pad = 3*60;
        my $manvr;

        unless (defined $dthr){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, "Dither states unavailable. Dither not checked\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          return;
        }

        # set the observation start as the end of the maneuver
        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        unless (defined $obs_tstart){
            push @{$self->{warn}}, "Cannot determine obs start time for dither, not checking.\n";
            return;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L821
  id: '023'
  line_number: 821
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "Dither states unavailable. Dither not checked\n";
  title: Dither states/history unavailable
  type: aca_check
- context: |2-
        my $obs_beg_pad = 8*60;       # Check dither status at obs start + 8 minutes to allow
                                      # for disabled dither because of mon star commanding
        my $obs_end_pad = 3*60;
        my $manvr;

        unless (defined $dthr){
          push @{$self->{warn}}, "Dither states unavailable. Dither not checked\n";
          return;
        }

        # set the observation start as the end of the maneuver
        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        unless (defined $obs_tstart){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "Cannot determine obs start time for dither, not checking.\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            return;
        }

        # Determine guide dither by finding the last dither commanding before
        # the start of observation (+ 8 minutes)
        my $guide_dither;
        foreach my $dither_state (reverse @{$dthr}) {
        if ($obs_tstart + $obs_beg_pad >= $dither_state->{time}) {
                $guide_dither = $dither_state;
                last;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L830
  id: '024'
  line_number: 830
  project: starcheck
  severity: yellow
  text: |-
    push @{$self->{warn}}, "Cannot determine obs start time for dither, not checking.\n";
  title: Cannot determine obs start time for dither checks
  type: process
- context: |2-
        if ($obs_tstart >= $dither_state->{time}) {
                $acq_dither = $dither_state;
                last;
            }
        }


        $self->{dither_acq} = $acq_dither;
        $self->{dither_guide} = $guide_dither;
        $self->{dither_guide}->{ampl_y_max} = $guide_dither->{ampl_y};
        $self->{dither_guide}->{ampl_p_max} = $guide_dither->{ampl_p};

        # Check for standard dither
        if ($guide_dither->{state} eq 'ENAB'){
            if ((not standard_dither($guide_dither)) or not standard_dither($acq_dither)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{yellow_warn}}, "Non-standard dither\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            if (($guide_dither->{ampl_p} != $acq_dither->{ampl_p})
                    or ($guide_dither->{ampl_y} != $acq_dither->{ampl_y})){
                push @{$self->{fyi}}, sprintf("Reviewed with ACQ dither Y=%.1f Z=%.1f \n",
                                              $acq_dither->{ampl_y}, $acq_dither->{ampl_p});
            }
        }

        # Check for large dither.  If large dither present, run the large dither checks and set the obs_end_pad
        if ($guide_dither->{state} eq 'ENAB'){
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L861
  id: '025'
  line_number: 861
  project: starcheck
  severity: info
  text: |-
    push @{$self->{yellow_warn}}, "Non-standard dither\n";
  title: Non-standard dither
  type: aca_check
- context: |2-
        }


        $self->{dither_acq} = $acq_dither;
        $self->{dither_guide} = $guide_dither;
        $self->{dither_guide}->{ampl_y_max} = $guide_dither->{ampl_y};
        $self->{dither_guide}->{ampl_p_max} = $guide_dither->{ampl_p};

        # Check for standard dither
        if ($guide_dither->{state} eq 'ENAB'){
            if ((not standard_dither($guide_dither)) or not standard_dither($acq_dither)){
                push @{$self->{yellow_warn}}, "Non-standard dither\n";
            }
            if (($guide_dither->{ampl_p} != $acq_dither->{ampl_p})
                    or ($guide_dither->{ampl_y} != $acq_dither->{ampl_y})){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{fyi}}, sprintf("Reviewed with ACQ dither Y=%.1f Z=%.1f \n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                              $acq_dither->{ampl_y}, $acq_dither->{ampl_p});
            }
        }

        # Check for large dither.  If large dither present, run the large dither checks and set the obs_end_pad
        if ($guide_dither->{state} eq 'ENAB'){
            if ($guide_dither->{ampl_y} > $large_dith_thresh or $guide_dither->{ampl_p} > $large_dith_thresh){
                $self->large_dither_checks($guide_dither, $dthr);
                # If this is a large dither, set a larger pad at the end, as we expect
                # standard dither parameters to be commanded at 5 minutes before end,
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L865
  id: '026'
  line_number: 865
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, sprintf("Reviewed with ACQ dither Y=%.1f Z=%.1f \n",
    $acq_dither->{ampl_y}, $acq_dither->{ampl_p});
  title: Report acq dither if different from guide
  type: aca_check
- aca_cl_id: ACA-003
  context: |2-
        # Check for large dither.  If large dither present, run the large dither checks and set the obs_end_pad
        if ($guide_dither->{state} eq 'ENAB'){
            if ($guide_dither->{ampl_y} > $large_dith_thresh or $guide_dither->{ampl_p} > $large_dith_thresh){
                $self->large_dither_checks($guide_dither, $dthr);
                # If this is a large dither, set a larger pad at the end, as we expect
                # standard dither parameters to be commanded at 5 minutes before end,
                # which is greater than the 3 minutes used in the "no dither changes
                # during observation check below
                $obs_end_pad = 5.5 * 60;
            }
        }

        # Check for dither changes during the observation
        # ACA-003
        if (not defined $obs_tstop ){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                "Unable to determine obs tstop; could not check for dither changes during obs\n";
        }
        else{
            foreach my $dither (reverse @{$dthr}) {
                if ($dither->{time} < $obs_tstop){
                    $self->{dither_guide}->{ampl_p_max} = max(($dither->{ampl_p}, $self->{dither_guide}->{ampl_p_max}));
                    $self->{dither_guide}->{ampl_y_max} = max(($dither->{ampl_y}, $self->{dither_guide}->{ampl_y_max}));
                }
                if ($dither->{time} > ($obs_tstart + $obs_beg_pad)
                        && $dither->{time} <= $obs_tstop - $obs_end_pad) {
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L885
  id: '027'
  line_number: 885
  project: starcheck
  severity: yellow
  text: |-
    push @{$self->{warn}},
    "Unable to determine obs tstop; could not check for dither changes during obs\n";
  title: Could not determine obs stop for dither checks
  type: process
- context: |2-

        # Check for dither changes during the observation
        # ACA-003
        if (not defined $obs_tstop ){
            push @{$self->{warn}},
                "Unable to determine obs tstop; could not check for dither changes during obs\n";
        }
        else{
            foreach my $dither (reverse @{$dthr}) {
                if ($dither->{time} < $obs_tstop){
                    $self->{dither_guide}->{ampl_p_max} = max(($dither->{ampl_p}, $self->{dither_guide}->{ampl_p_max}));
                    $self->{dither_guide}->{ampl_y_max} = max(($dither->{ampl_y}, $self->{dither_guide}->{ampl_y_max}));
                }
                if ($dither->{time} > ($obs_tstart + $obs_beg_pad)
                        && $dither->{time} <= $obs_tstop - $obs_end_pad) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    push @{$self->{warn}}, "Dither commanding at $dither->{time}.  During observation.\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                }
                if ($dither->{time} < $obs_tstart){
                    last;
                }
            }
        }

        if (($self->{dither_guide}->{ampl_y_max} != $self->{dither_guide}->{ampl_y})
                or ($self->{dither_guide}->{ampl_p_max} != $self->{dither_guide}->{ampl_p})){
            push @{$self->{fyi}}, sprintf("Max Y Z ampl during guide used for checking Y=%.1f Z=%.1f \n",
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L896
  id: 028
  line_number: 896
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "Dither commanding at $dither->{time}.  During observation.\n";
  title: Unexpected dither commanding during observation
  type: aca_check
- context: |2-
                    $self->{dither_guide}->{ampl_p_max} = max(($dither->{ampl_p}, $self->{dither_guide}->{ampl_p_max}));
                    $self->{dither_guide}->{ampl_y_max} = max(($dither->{ampl_y}, $self->{dither_guide}->{ampl_y_max}));
                }
                if ($dither->{time} > ($obs_tstart + $obs_beg_pad)
                        && $dither->{time} <= $obs_tstop - $obs_end_pad) {
                    push @{$self->{warn}}, "Dither commanding at $dither->{time}.  During observation.\n";
                }
                if ($dither->{time} < $obs_tstart){
                    last;
                }
            }
        }

        if (($self->{dither_guide}->{ampl_y_max} != $self->{dither_guide}->{ampl_y})
                or ($self->{dither_guide}->{ampl_p_max} != $self->{dither_guide}->{ampl_p})){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}}, sprintf("Max Y Z ampl during guide used for checking Y=%.1f Z=%.1f \n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                          $self->{dither_guide}->{ampl_y_max} + 0.0,
                                          $self->{dither_guide}->{ampl_p_max} + 0.0);
        }

        # For eng obs, don't have OR to specify dither, so stop before doing vs-OR comparisons
        if ( $self->{obsid} =~ /^\d*$/){
        return if ($self->{obsid} >= $ER_MIN_OBSID);
        }

        # Get the OR value of dither and compare if available
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L906
  id: 029
  line_number: 906
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, sprintf("Max Y Z ampl during guide used for checking Y=%.1f Z=%.1f \n",
    $self->{dither_guide}->{ampl_y_max} + 0.0,
    $self->{dither_guide}->{ampl_p_max} + 0.0);
  title: Report on guide dither amplitude if max dither is unusual
  type: aca_check
- aca_cl_id: ACA-002
  context: |2-
                                          $self->{dither_guide}->{ampl_y_max} + 0.0,
                                          $self->{dither_guide}->{ampl_p_max} + 0.0);
        }

        # For eng obs, don't have OR to specify dither, so stop before doing vs-OR comparisons
        if ( $self->{obsid} =~ /^\d*$/){
        return if ($self->{obsid} >= $ER_MIN_OBSID);
        }

        # Get the OR value of dither and compare if available
        my $bs_val = $guide_dither->{state};
        my $or_val;
        if (defined $self->{DITHER_ON}){
            $or_val = ($self->{DITHER_ON} eq 'ON') ? 'ENAB' : 'DISA';
            # ACA-002
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "Dither mismatch - OR: $or_val != Backstop: $bs_val\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                if ($or_val ne $bs_val);
        }
        else{
            push @{$self->{warn}},
                "Unable to determine dither from OR list\n";
        }

        # If dither is enabled according to the OR, check that parameters match OR vs Backstop
        if ((defined $or_val) and ($or_val eq 'ENAB')){
            my $or_ampl_y = $self->{DITHER_Y_AMP} * 3600;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L922
  id: '030'
  line_number: 922
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "Dither mismatch - OR: $or_val != Backstop: $bs_val\n"
    if ($or_val ne $bs_val);
  title: Mismatch between dither enable status in OR vs. Backstop
  type: aca_check
- context: |2-
        # For eng obs, don't have OR to specify dither, so stop before doing vs-OR comparisons
        if ( $self->{obsid} =~ /^\d*$/){
        return if ($self->{obsid} >= $ER_MIN_OBSID);
        }

        # Get the OR value of dither and compare if available
        my $bs_val = $guide_dither->{state};
        my $or_val;
        if (defined $self->{DITHER_ON}){
            $or_val = ($self->{DITHER_ON} eq 'ON') ? 'ENAB' : 'DISA';
            # ACA-002
            push @{$self->{warn}}, "Dither mismatch - OR: $or_val != Backstop: $bs_val\n"
                if ($or_val ne $bs_val);
        }
        else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                "Unable to determine dither from OR list\n";
        }

        # If dither is enabled according to the OR, check that parameters match OR vs Backstop
        if ((defined $or_val) and ($or_val eq 'ENAB')){
            my $or_ampl_y = $self->{DITHER_Y_AMP} * 3600;
            my $or_ampl_p = $self->{DITHER_Z_AMP} * 3600;
            if ((abs($or_ampl_y - $guide_dither->{ampl_y}) > 0.1
                     or abs($or_ampl_p - $guide_dither->{ampl_p}) > 0.1)){
                my $warn = sprintf("Dither amp. mismatch - OR: (Y %.1f, Z %.1f) "
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L926
  id: '031'
  line_number: 926
  project: starcheck
  severy: red
  text: |-
    push @{$self->{warn}},
    "Unable to determine dither from OR list\n";
  title: Could not determine dither enable status from OR list
  type: process
- context: |2+
            # ACA-002
            push @{$self->{warn}}, "Dither mismatch - OR: $or_val != Backstop: $bs_val\n"
                if ($or_val ne $bs_val);
        }
        else{
            push @{$self->{warn}},
                "Unable to determine dither from OR list\n";
        }

        # If dither is enabled according to the OR, check that parameters match OR vs Backstop
        if ((defined $or_val) and ($or_val eq 'ENAB')){
            my $or_ampl_y = $self->{DITHER_Y_AMP} * 3600;
            my $or_ampl_p = $self->{DITHER_Z_AMP} * 3600;
            if ((abs($or_ampl_y - $guide_dither->{ampl_y}) > 0.1
                     or abs($or_ampl_p - $guide_dither->{ampl_p}) > 0.1)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                my $warn = sprintf("Dither amp. mismatch - OR: (Y %.1f, Z %.1f) "
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                       . "!= Backstop: (Y %.1f, Z %.1f)\n",
                                   $or_ampl_y, $or_ampl_p,
                                   $guide_dither->{ampl_y}, $guide_dither->{ampl_p});
                push @{$self->{warn}}, $warn;
            }
        }
    }


  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L936
  id: '032'
  line_number: 936
  project: starcheck
  severity: red
  text: |-
    my $warn = sprintf("Dither amp. mismatch - OR: (Y %.1f, Z %.1f) "
    . "!= Backstop: (Y %.1f, Z %.1f)\n",
    $or_ampl_y, $or_ampl_p,
    $guide_dither->{ampl_y}, $guide_dither->{ampl_p});
  title: Dither amplitude mismatch OR/Backstop
  type: aca_check
- context: |2-
        else{
            push @{$self->{warn}},
                "Unable to determine dither from OR list\n";
        }

        # If dither is enabled according to the OR, check that parameters match OR vs Backstop
        if ((defined $or_val) and ($or_val eq 'ENAB')){
            my $or_ampl_y = $self->{DITHER_Y_AMP} * 3600;
            my $or_ampl_p = $self->{DITHER_Z_AMP} * 3600;
            if ((abs($or_ampl_y - $guide_dither->{ampl_y}) > 0.1
                     or abs($or_ampl_p - $guide_dither->{ampl_p}) > 0.1)){
                my $warn = sprintf("Dither amp. mismatch - OR: (Y %.1f, Z %.1f) "
                                       . "!= Backstop: (Y %.1f, Z %.1f)\n",
                                   $or_ampl_y, $or_ampl_p,
                                   $guide_dither->{ampl_y}, $guide_dither->{ampl_p});
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{warn}}, $warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
        }
    }



    #############################################################################################
    sub standard_dither{
    #############################################################################################
        my $dthr = shift;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L940
  id: '033'
  line_number: 940
  project: starcheck
  text: |-
    push @{$self->{warn}}, $warn;
  title: Really just part of check '032'
  type: code
- aca_cl_id: ACA-040
  context: |2-

        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        # Now check in backstop commands for :
        #  Dither is disabled (AODSDITH) 1 min prior to the end of the maneuver (EOM)
        #    to the target attitude.
        #  Dither is enabled (AOENDITH) 5 min after EOM
        #  Dither parameters are commanded 5 min before end of observation
        # ACA-040
        # obs_tstart is defined as the tstop of the maneuver to this observation in set_npm_times
        # obs_tstop is defined as the time of the maneuver away or the end of the schedule

        # Is the large dither command enabled 5 minutes after EOM?
        if (abs($dither_state->{time} - $obs_tstart - 300) > $time_tol){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf("Large Dither not enabled 5 min after EOM (%s)\n",
                        time2date($obs_tstart));
        }
        # What's the dither state at EOM?
        my $obs_start_dither;
        foreach my $dither (reverse @{$all_dither}) {
        if ($obs_tstart >= $dither->{time}) {
                $obs_start_dither = $dither;
                last;
            }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1005
  id: '034'
  line_number: 1005
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("Large Dither not enabled 5 min after EOM (%s)\n",
    time2date($obs_tstart));
  title: Large dither not enabled 5 min after EOM
  type: aca_check
- context: |2-
                sprintf("Large Dither not enabled 5 min after EOM (%s)\n",
                        time2date($obs_tstart));
        }
        # What's the dither state at EOM?
        my $obs_start_dither;
        foreach my $dither (reverse @{$all_dither}) {
        if ($obs_tstart >= $dither->{time}) {
                $obs_start_dither = $dither;
                last;
            }
        }

        my $det = (($self->{SI} eq 'HRC-S') or ($self->{SI} eq 'HRC-I')) ? 'hrc' : 'acis';
        # Is dither nominal for detector at EOM
        if ($det ne standard_dither($obs_start_dither)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf("Dither should be detector nominal 1 min before obs start for Large Dither\n");
        }


        # Find the dither state at the end of the observation
        my $obs_stop_dither;
        foreach my $dither (reverse @{$all_dither}) {
        if ($obs_tstop >= $dither->{time}) {
                $obs_stop_dither = $dither;
                last;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1021
  id: '035'
  line_number: 1021
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("Dither should be detector nominal 1 min before obs start for Large Dither\n");
  title: Dither not set to detector nominal value before large dither transition
  type: aca_check
- context: |2-
                sprintf("Dither should be detector nominal 1 min before obs start for Large Dither\n");
        }


        # Find the dither state at the end of the observation
        my $obs_stop_dither;
        foreach my $dither (reverse @{$all_dither}) {
        if ($obs_tstop >= $dither->{time}) {
                $obs_stop_dither = $dither;
                last;
            }
        }
        # Check that the dither state at the end of the observation started 5 minutes before
        # the end (within time_tol) .  obs_tstop appears not corrected by 10s so use 310 instead of 300
        if ((abs($obs_tstop - $obs_stop_dither->{time} - 310) > $time_tol)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf("Last dither state for Large Dither should start 5 minutes before obs end.\n");
        }
        # Check that the dither state at the end of the observation is standard
        if (not standard_dither($obs_stop_dither)){
            push @{$self->{warn}},
                sprintf("Dither parameters not set to standard values before obs end\n");
        }

        # If the number of warnings has not changed during this routine, it passed all checks
        if (scalar(@{$self->{warn}}) == $n_warn){
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1037
  id: '036'
  line_number: 1037
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("Last dither state for Large Dither should start 5 minutes before obs end.\n");
  title: Dither transition not set correctly at end of large dither observation
  type: aca_check
- context: |2
        my $obs_stop_dither;
        foreach my $dither (reverse @{$all_dither}) {
        if ($obs_tstop >= $dither->{time}) {
                $obs_stop_dither = $dither;
                last;
            }
        }
        # Check that the dither state at the end of the observation started 5 minutes before
        # the end (within time_tol) .  obs_tstop appears not corrected by 10s so use 310 instead of 300
        if ((abs($obs_tstop - $obs_stop_dither->{time} - 310) > $time_tol)){
            push @{$self->{warn}},
                sprintf("Last dither state for Large Dither should start 5 minutes before obs end.\n");
        }
        # Check that the dither state at the end of the observation is standard
        if (not standard_dither($obs_stop_dither)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf("Dither parameters not set to standard values before obs end\n");
        }

        # If the number of warnings has not changed during this routine, it passed all checks
        if (scalar(@{$self->{warn}}) == $n_warn){
            push @{$self->{fyi}},
                sprintf("Observation passes 'big dither' checks\n");
        }
    }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1042
  id: '037'
  line_number: 1042
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("Dither parameters not set to standard values before obs end\n");
  title: Dither not set correctly back to standard values after large dither obs
  type: aca_check
- context: |2-
        }
        # Check that the dither state at the end of the observation started 5 minutes before
        # the end (within time_tol) .  obs_tstop appears not corrected by 10s so use 310 instead of 300
        if ((abs($obs_tstop - $obs_stop_dither->{time} - 310) > $time_tol)){
            push @{$self->{warn}},
                sprintf("Last dither state for Large Dither should start 5 minutes before obs end.\n");
        }
        # Check that the dither state at the end of the observation is standard
        if (not standard_dither($obs_stop_dither)){
            push @{$self->{warn}},
                sprintf("Dither parameters not set to standard values before obs end\n");
        }

        # If the number of warnings has not changed during this routine, it passed all checks
        if (scalar(@{$self->{warn}}) == $n_warn){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf("Observation passes 'big dither' checks\n");
        }
    }





    #############################################################################################
    sub check_bright_perigee{
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1048
  id: 038
  line_number: 1048
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}},
    sprintf("Observation passes 'big dither' checks\n");
  title: Observation passes big dither checks
  type: aca_check
- context: |2-



    #############################################################################################
    sub check_bright_perigee{
    #############################################################################################
        my $self = shift;
        my $radmon = shift;
        my $min_n_stars = 3;

        # if this is an OR, just return
        return if (($self->{obsid} =~ /^\d+$/ && $self->{obsid} < $ER_MIN_OBSID));

        # if radmon is undefined, warn and return
        if (not defined $radmon){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, "Perigee bright stars not being checked, no rad zone info available\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }

        # set the observation start as the end of the maneuver
        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        # if observation stop time is undefined, warn and return
        if (not defined $obs_tstop){
            push @{$self->{warn}}, "Perigee bright stars not being checked, no obs tstop available\n";
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1069
  id: 039
  line_number: 1069
  project: starcheck
  severity: warn
  text: |-
    push @{$self->{warn}}, "Perigee bright stars not being checked, no rad zone info available\n";
  title: Rad zone data missing to check perigee observations for bright stars
  type: process
- context: |2-
        # if this is an OR, just return
        return if (($self->{obsid} =~ /^\d+$/ && $self->{obsid} < $ER_MIN_OBSID));

        # if radmon is undefined, warn and return
        if (not defined $radmon){
          push @{$self->{warn}}, "Perigee bright stars not being checked, no rad zone info available\n";
        return;
        }

        # set the observation start as the end of the maneuver
        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        # if observation stop time is undefined, warn and return
        if (not defined $obs_tstop){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "Perigee bright stars not being checked, no obs tstop available\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }

        # is this obsid in perigee?  assume no to start
        my $in_perigee = 0;

        for my $rad (reverse @{$radmon}){
          next if ($rad->{time} > $obs_tstop);
          if ($rad->{state} eq 'DISA'){
            $in_perigee = 1;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1079
  id: '040'
  line_number: 1079
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "Perigee bright stars not being checked, no obs tstop available\n";
  title: Observation stop time not available to run perigee bright star check
  type: process
- context: |2
        my $c = find_command($self, 'MP_STARCAT');
        return if (not defined $c);

        my @mags = ();
        for my $i (1 .. 16){
        if ($c->{"TYPE$i"} =~ /GUI|BOT/){
                my $mag = $c->{"GS_MAG$i"};
                push @mags, $mag;
        }
        }

        # Pass 1 to _guide_count as third arg to use the count_9th mode
        my $bright_count = _guide_count(\@mags, $self->{ccd_temp}, 1);
        if ($bright_count < $min_n_stars){
            if ($self->{special_case_er} == 1){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{fyi}}, "Only $bright_count star(s) brighter than scaled 9th mag. "
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    . "Acceptable for Special Case ER\n";
            }
            else{
                push @{$self->{warn}}, "$bright_count star(s) brighter than scaled 9th mag. "
                    . "Perigee requires at least $min_n_stars\n";
            }

        }
    }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/dd38bf78fb3c0d260a6fc11a50aa4fe011e853df/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1113
  id: '041'
  line_number: 1113
  missing: 1
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, "Only $bright_count star(s) brighter than scaled 9th mag. "
    . "Acceptable for Special Case ER\n";
  title: Has enough bright stars for special case ER
  type: aca_check
- aca_cl_id: ACA-046
  context: |2-

        my $c = find_command($self, 'MP_STARCAT');
        return if (not defined $c);

        my @mags = ();
        for my $i (1 .. 16){
        if ($c->{"TYPE$i"} =~ /GUI|BOT/){
                my $mag = $c->{"GS_MAG$i"};
                push @mags, $mag;
        }
        }

        # Pass 1 to _guide_count as third arg to use the count_9th mode
        my $bright_count = _guide_count(\@mags, $self->{ccd_temp}, 1);
        if ($bright_count < $min_n_stars){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, "$bright_count star(s) brighter than scaled 9th mag. "
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            . "Perigee requires at least $min_n_stars\n";
        }
    }


    #############################################################################################
    sub check_momentum_unload{
    #############################################################################################
        my $self = shift;
        my $backstop = shift;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1112
  id: '042'
  line_number: 1112
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "$bright_count star(s) brighter than scaled 9th mag. "
    . "Perigee requires at least $min_n_stars\n";
  title: Not enough bright stars for perigee observation
  type: aca_check
- context: |2-
        push @{$self->{warn}}, "$bright_count star(s) brighter than scaled 9th mag. "
            . "Perigee requires at least $min_n_stars\n";
        }
    }


    #############################################################################################
    sub check_momentum_unload{
    #############################################################################################
        my $self = shift;
        my $backstop = shift;
        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        if (not defined $obs_tstart or not defined $obs_tstop){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "Momentum Unloads not checked.\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            return;
        }
        for my $entry (@{$backstop}){
            if ((defined $entry->{command}) and (defined $entry->{command}->{TLMSID})){
                if ($entry->{command}->{TLMSID} =~ /AOMUNLGR/){
                    if (($entry->{time} >= $obs_tstart) and ($entry->{time} <= $obs_tstop )){
                        push @{$self->{fyi}}, "Momentum Unload (AOMUNLGR) in NPM at " . $entry->{date} . "\n";
                    }
                }
            }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1127
  id: '043'
  line_number: 1127
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "Momentum Unloads not checked.\n";
  title: Could not check momentum unloads as obs start or stop time undetermined
  type: process
- context: |-
    sub check_momentum_unload{
    #############################################################################################
        my $self = shift;
        my $backstop = shift;
        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        if (not defined $obs_tstart or not defined $obs_tstop){
            push @{$self->{warn}}, "Momentum Unloads not checked.\n";
            return;
        }
        for my $entry (@{$backstop}){
            if ((defined $entry->{command}) and (defined $entry->{command}->{TLMSID})){
                if ($entry->{command}->{TLMSID} =~ /AOMUNLGR/){
                    if (($entry->{time} >= $obs_tstart) and ($entry->{time} <= $obs_tstop )){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @{$self->{fyi}}, "Momentum Unload (AOMUNLGR) in NPM at " . $entry->{date} . "\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                }
            }
        }
    }


    #############################################################################################
    sub check_sim_position {
    #############################################################################################
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1134
  id: '044'
  line_number: 1134
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, "Momentum Unload (AOMUNLGR) in NPM at " . $entry->{date} . "\n";
  title: Momentum unload in normal point mode
  type: aca_check
- context: |2-
                }
            }
        }
    }


    #############################################################################################
    sub check_sim_position {
    #############################################################################################
        my $self = shift;
        my @sim_trans = @_;        # Remaining values are SIMTRANS backstop cmds
        my $manvr;

        return unless (exists $self->{SIM_OFFSET_Z});
        unless ($manvr = find_command($self, "MP_TARGQUAT", -1)) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, "Missing MP_TARGQUAT cmd\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }

        # Set the expected SIM Z position (steps)
        my $sim_z = $Default_SIM_Z{$self->{SI}} + $self->{SIM_OFFSET_Z};

        foreach my $st (reverse @sim_trans) {
        if (not defined $manvr->{tstop}){
            push @{$self->{warn}}, "Maneuver times not defined; SIM checking failed!\n";
        }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1151
  id: '045'
  line_number: 1151
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "Missing MP_TARGQUAT cmd\n";
  title: Missing MP_TARGQUAT cmd
  type: aca_check
- context: |2-
        my $self = shift;
        my @sim_trans = @_;        # Remaining values are SIMTRANS backstop cmds
        my $manvr;

        return unless (exists $self->{SIM_OFFSET_Z});
        unless ($manvr = find_command($self, "MP_TARGQUAT", -1)) {
        push @{$self->{warn}}, "Missing MP_TARGQUAT cmd\n";
        return;
        }

        # Set the expected SIM Z position (steps)
        my $sim_z = $Default_SIM_Z{$self->{SI}} + $self->{SIM_OFFSET_Z};

        foreach my $st (reverse @sim_trans) {
        if (not defined $manvr->{tstop}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "Maneuver times not defined; SIM checking failed!\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        else{
            if ($manvr->{tstop} >= $st->{time}) {
            my %par = Ska::Parse_CM_File::parse_params($st->{params});
            if (abs($par{POS} - $sim_z) > 4) {
    #        print STDERR "Yikes, SIM mismatch!  \n";
    #        print STDERR " self->{obsid} = $self->{obsid}\n";
    #        print STDERR " sim_offset_z = $self->{SIM_OFFSET_Z}   SI = $self->{SI}\n";
    #        print STDERR " st->{POS} = $par{POS}   sim_z = $sim_z   delta = ", $par{POS}-$sim_z,"\n";
                        # ACA-001
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1160
  id: '046'
  line_number: 1160
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "Maneuver times not defined; SIM checking failed!\n";
  title: Maneuver times not defined, SIM checks failed
  type: process
- aca_cl_id: ACA-001
  context: |2-
        my $sim_z = $Default_SIM_Z{$self->{SI}} + $self->{SIM_OFFSET_Z};

        foreach my $st (reverse @sim_trans) {
        if (not defined $manvr->{tstop}){
            push @{$self->{warn}}, "Maneuver times not defined; SIM checking failed!\n";
        }
        else{
            if ($manvr->{tstop} >= $st->{time}) {
            my %par = Ska::Parse_CM_File::parse_params($st->{params});
            if (abs($par{POS} - $sim_z) > 4) {
    #        print STDERR "Yikes, SIM mismatch!  \n";
    #        print STDERR " self->{obsid} = $self->{obsid}\n";
    #        print STDERR " sim_offset_z = $self->{SIM_OFFSET_Z}   SI = $self->{SI}\n";
    #        print STDERR " st->{POS} = $par{POS}   sim_z = $sim_z   delta = ", $par{POS}-$sim_z,"\n";
                        # ACA-001
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{warn}}, "SIM position mismatch:  OR=$sim_z  BACKSTOP=$par{POS}\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            last;
            }
        }
        }
    }

    #############################################################################################
    sub check_star_catalog {
    #############################################################################################
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1171
  id: '047'
  line_number: 1171
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "SIM position mismatch:  OR=$sim_z  BACKSTOP=$par{POS}\n";
  title: OR and Backstop SIM position mismatch
  type: aca_check
- context: |2
        my @warn = ();
        my @orange_warn = ();
        my @yellow_warn = ();

        my $oflsid = $self->{dot_obsid};
        my $obsid = $self->{obsid};

       # Set slew error (arcsec) for this obsid, or 120 if not available
        my $slew_err;
        my $targquat;
        if ($targquat = find_command($self, "MP_TARGQUAT", -1)){
        $slew_err = $targquat->{man_err};
        }
        else{
        # if no target quaternion, warn and continue
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, "No target/maneuver for obsid $obsid ($oflsid). \n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        $slew_err = 120 if not defined $slew_err;

        # ACA-004
        # if no starcat, warn and quit this subroutine
        unless ($c = find_command($self, "MP_STARCAT")) {
        push @{$self->{warn}}, "No star catalog for obsid $obsid ($oflsid). \n";
        return;
        }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1242
  id: 048
  line_number: 1242
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "No target/maneuver for obsid $obsid ($oflsid). \n";
  title: No target/maneuver for obsid
  type: aca_check
- aca_cl_id: ACA-004
  context: |2-
       # Set slew error (arcsec) for this obsid, or 120 if not available
        my $slew_err;
        my $targquat;
        if ($targquat = find_command($self, "MP_TARGQUAT", -1)){
        $slew_err = $targquat->{man_err};
        }
        else{
        # if no target quaternion, warn and continue
          push @{$self->{warn}}, "No target/maneuver for obsid $obsid ($oflsid). \n";
        }
        $slew_err = 120 if not defined $slew_err;

        # ACA-004
        # if no starcat, warn and quit this subroutine
        unless ($c = find_command($self, "MP_STARCAT")) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, "No star catalog for obsid $obsid ($oflsid). \n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }

        my ($dither_acq_y, $dither_acq_z, $dither_guide_y, $dither_guide_z);
        if (defined $self->{dither_acq}){
        $dither_acq_y = $self->{dither_acq}->{ampl_y};
            $dither_acq_z = $self->{dither_acq}->{ampl_p};
        } else {
            push @{$self->{yellow_warn}},
                "Acquisition dither could not be determined, using 20\"x20\" for checking.\n";
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1249
  id: 049
  line_number: 1249
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "No star catalog for obsid $obsid ($oflsid). \n";
  title: No star catalog for obsid
  type: aca_check
- context: |2-
        }
        $slew_err = 120 if not defined $slew_err;

        # ACA-004
        # if no starcat, warn and quit this subroutine
        unless ($c = find_command($self, "MP_STARCAT")) {
        push @{$self->{warn}}, "No star catalog for obsid $obsid ($oflsid). \n";
        return;
        }

        my ($dither_acq_y, $dither_acq_z, $dither_guide_y, $dither_guide_z);
        if (defined $self->{dither_acq}){
        $dither_acq_y = $self->{dither_acq}->{ampl_y};
            $dither_acq_z = $self->{dither_acq}->{ampl_p};
        } else {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{yellow_warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                "Acquisition dither could not be determined, using 20\"x20\" for checking.\n";
        $dither_acq_y = 20.0;
        $dither_acq_z = 20.0;
        }

        if (defined $self->{dither_guide}->{ampl_y_max}){
        $dither_guide_y = $self->{dither_guide}->{ampl_y_max};
            $dither_guide_z = $self->{dither_guide}->{ampl_p_max};
        } else {
            push @{$self->{yellow_warn}},
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1258
  id: '050'
  line_number: 1258
  project: starcheck
  severity: yellow
  text: |-
    push @{$self->{yellow_warn}},
    "Acquisition dither could not be determined, using 20\"x20\" for checking.\n";
  title: Could not determine acq dither
  type: process
- context: |2-
        my ($dither_acq_y, $dither_acq_z, $dither_guide_y, $dither_guide_z);
        if (defined $self->{dither_acq}){
        $dither_acq_y = $self->{dither_acq}->{ampl_y};
            $dither_acq_z = $self->{dither_acq}->{ampl_p};
        } else {
            push @{$self->{yellow_warn}},
                "Acquisition dither could not be determined, using 20\"x20\" for checking.\n";
        $dither_acq_y = 20.0;
        $dither_acq_z = 20.0;
        }

        if (defined $self->{dither_guide}->{ampl_y_max}){
        $dither_guide_y = $self->{dither_guide}->{ampl_y_max};
            $dither_guide_z = $self->{dither_guide}->{ampl_p_max};
        } else {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{yellow_warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                "Guide dither could not be determined, using 20\"x20\" for checking.\n";
        $dither_guide_y = 20.0;
        $dither_guide_z = 20.0;
        }


        # Decrement minimum number of guide stars on ORs if a monitor window is commanded
        $min_guide -= @{$self->{mon}} if $is_science;

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1268
  id: '051'
  line_number: 1268
  project: starcheck
  severity: yellow
  text: |-
    push @{$self->{yellow_warn}},
    "Guide dither could not be determined, using 20\"x20\" for checking.\n";
  title: Could not determine guide dither
  type: process
- aca_cl_id: ACA-007
  context: |2-
            push @{$self->{yellow_warn}},
                "Guide dither could not be determined, using 20\"x20\" for checking.\n";
        $dither_guide_y = 20.0;
        $dither_guide_z = 20.0;
        }


        # Decrement minimum number of guide stars on ORs if a monitor window is commanded
        $min_guide -= @{$self->{mon}} if $is_science;

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
        push @warn,"Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
        # Red warn if fewer than the minimum number of guide stars
        my $n_gui = @{$self->{gui}};
        push @yellow_warn,"Only $n_gui Guide Stars ($min_guide required)\n" if ($n_gui < $min_guide);
        push @warn,"Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
        push @warn,"Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);
        push @warn,"Too many MON\n" if ((@{$self->{mon}} > 1 && $is_science) ||
                                                   (@{$self->{mon}} > 2 && $is_er));
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1283
  id: '052'
  line_number: 1283
  project: starcheck
  severity: red
  text: |-
    push @warn,"Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
  title: Too few fid lights
  type: aca_check
- aca_cl_id: ACA-007
  context: |2
                "Guide dither could not be determined, using 20\"x20\" for checking.\n";
        $dither_guide_y = 20.0;
        $dither_guide_z = 20.0;
        }


        # Decrement minimum number of guide stars on ORs if a monitor window is commanded
        $min_guide -= @{$self->{mon}} if $is_science;

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

        push @warn,"Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
        push @warn,"Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
        # Red warn if fewer than the minimum number of guide stars
        my $n_gui = @{$self->{gui}};
        push @yellow_warn,"Only $n_gui Guide Stars ($min_guide required)\n" if ($n_gui < $min_guide);
        push @warn,"Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
        push @warn,"Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);
        push @warn,"Too many MON\n" if ((@{$self->{mon}} > 1 && $is_science) ||
                                                   (@{$self->{mon}} > 2 && $is_er));
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1284
  id: '053'
  line_number: 1284
  project: starcheck
  severity: red
  text: |-
    push @warn,"Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
    (@{$self->{fid}} > $min_fid && $is_science) ) ;
  title: Too many fid lights
  type: aca_check
- aca_cl_id: ACA-005
  context: |2-
        $dither_guide_z = 20.0;
        }


        # Decrement minimum number of guide stars on ORs if a monitor window is commanded
        $min_guide -= @{$self->{mon}} if $is_science;

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

        push @warn,"Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
        push @warn,"Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        # Red warn if fewer than the minimum number of guide stars
        my $n_gui = @{$self->{gui}};
        push @yellow_warn,"Only $n_gui Guide Stars ($min_guide required)\n" if ($n_gui < $min_guide);
        push @warn,"Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
        push @warn,"Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);
        push @warn,"Too many MON\n" if ((@{$self->{mon}} > 1 && $is_science) ||
                                                   (@{$self->{mon}} > 2 && $is_er));

        # Match positions of fids in star catalog with expected, and verify a one to one
        # correspondance between FIDSEL command and star catalog.
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1286
  id: '054'
  line_number: 1286
  project: starcheck
  severity: red
  text: |-
    push @warn,"Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
  title: Too few acquisition stars
  type: aca_check
- aca_cl_id: ACA-007, ACA-008
  context: |2

        # Decrement minimum number of guide stars on ORs if a monitor window is commanded
        $min_guide -= @{$self->{mon}} if $is_science;

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

        push @warn,"Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
        push @warn,"Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
        push @warn,"Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
        # Red warn if fewer than the minimum number of guide stars
        my $n_gui = @{$self->{gui}};
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @yellow_warn,"Only $n_gui Guide Stars ($min_guide required)\n" if ($n_gui < $min_guide);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
        push @warn,"Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);
        push @warn,"Too many MON\n" if ((@{$self->{mon}} > 1 && $is_science) ||
                                                   (@{$self->{mon}} > 2 && $is_er));

        # Match positions of fids in star catalog with expected, and verify a one to one
        # correspondance between FIDSEL command and star catalog.
        # Skip this for vehicle-only loads since fids will be turned off.
        check_fids($self, $c, \@warn) unless $vehicle;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1289
  id: '055'
  line_number: 1289
  project: starcheck
  severity: yellow
  text: |-
    push @yellow_warn,"Only $n_gui Guide Stars ($min_guide required)\n" if ($n_gui < $min_guide);
  title: Not enough guide stars
  type: aca_check
- aca_cl_id: ACA-006, ACA-007, ACA-008
  context: |2-
        # Decrement minimum number of guide stars on ORs if a monitor window is commanded
        $min_guide -= @{$self->{mon}} if $is_science;

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

        push @warn,"Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
        push @warn,"Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
        push @warn,"Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
        # Red warn if fewer than the minimum number of guide stars
        my $n_gui = @{$self->{gui}};
        push @yellow_warn,"Only $n_gui Guide Stars ($min_guide required)\n" if ($n_gui < $min_guide);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);
        push @warn,"Too many MON\n" if ((@{$self->{mon}} > 1 && $is_science) ||
                                                   (@{$self->{mon}} > 2 && $is_er));

        # Match positions of fids in star catalog with expected, and verify a one to one
        # correspondance between FIDSEL command and star catalog.
        # Skip this for vehicle-only loads since fids will be turned off.
        check_fids($self, $c, \@warn) unless $vehicle;

        # store a list of the fid positions
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1290
  id: '056'
  line_number: 1290
  project: starcheck
  severity: red
  text: |-
    push @warn,"Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
  title: Too many guide + fid
  type: aca_check
- aca_cl_id: ACA-005
  context: |2-
        $min_guide -= @{$self->{mon}} if $is_science;

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

        push @warn,"Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
        push @warn,"Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
        push @warn,"Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
        # Red warn if fewer than the minimum number of guide stars
        my $n_gui = @{$self->{gui}};
        push @yellow_warn,"Only $n_gui Guide Stars ($min_guide required)\n" if ($n_gui < $min_guide);
        push @warn,"Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"Too many MON\n" if ((@{$self->{mon}} > 1 && $is_science) ||
                                                   (@{$self->{mon}} > 2 && $is_er));

        # Match positions of fids in star catalog with expected, and verify a one to one
        # correspondance between FIDSEL command and star catalog.
        # Skip this for vehicle-only loads since fids will be turned off.
        check_fids($self, $c, \@warn) unless $vehicle;

        # store a list of the fid positions
        my @fid_positions = map {{'y' => $c->{"YANG$_"}, 'z' => $c->{"ZANG$_"}}} @{$self->{fid}};
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1291
  id: '057'
  line_number: 1291
  project: starcheck
  severity: red
  text: |-
    push @warn,"Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);
  title: Too many acquisition stars
  type: aca_check
- aca_cl_id: ACA-007
  context: |2

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

        push @warn,"Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
        push @warn,"Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
        push @warn,"Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
        # Red warn if fewer than the minimum number of guide stars
        my $n_gui = @{$self->{gui}};
        push @yellow_warn,"Only $n_gui Guide Stars ($min_guide required)\n" if ($n_gui < $min_guide);
        push @warn,"Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
        push @warn,"Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"Too many MON\n" if ((@{$self->{mon}} > 1 && $is_science) ||
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                                   (@{$self->{mon}} > 2 && $is_er));

        # Match positions of fids in star catalog with expected, and verify a one to one
        # correspondance between FIDSEL command and star catalog.
        # Skip this for vehicle-only loads since fids will be turned off.
        check_fids($self, $c, \@warn) unless $vehicle;

        # store a list of the fid positions
        my @fid_positions = map {{'y' => $c->{"YANG$_"}, 'z' => $c->{"ZANG$_"}}} @{$self->{fid}};
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1292
  id: 058
  line_number: 1292
  project: starcheck
  severity: red
  text: |-
    push @warn,"Too many MON\n" if ((@{$self->{mon}} > 1 && $is_science) ||
    (@{$self->{mon}} > 2 && $is_er));
  title: Too many MON
  type: aca_check
- context: |2-
                # Add zero to get items that look more like float values in the arrays
                push @mags, ($c->{"GS_MAG$i"} eq '---') ? 13.94 : $c->{"GS_MAG$i"} + 0.0;
                push @types, $c->{"TYPE$i"};
            }
        }

        # Run the hot pixel region check on the Python side on FID|GUI|BOT
        my @imposters = check_hot_pix(\@idxs, \@yags, \@zags, \@mags, \@types,
                                       $self->{ccd_temp}, $self->{date}, $dither_guide_y, $dither_guide_z);

        # Assign warnings based on those hot pixel region checks
      IMPOSTER:
        for my $imposter (@imposters){
            # If the check just fails on the Python side write out a warning and move on.
            if ($imposter->{status} == 1){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @warn, sprintf("[%2d] Processing error when checking for hot pixels.\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                    $imposter->{idx});
                next IMPOSTER;
            }
            my $warn = sprintf(
                "[%2d] Imposter mag %.1f centroid offset %.1f row, col (%4d, %4d) star (%4d, %4d)\n",
                $imposter->{idx}, $imposter->{bad2_mag}, $imposter->{offset},
                $imposter->{bad2_row}, $imposter->{bad2_col},
                $imposter->{entry_row}, $imposter->{entry_col});
            if ($imposter->{offset} > 4.0){
                push @warn, $warn;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1326
  id: 059
  line_number: 1326
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf("[%2d] Processing error when checking for hot pixels.\n",
    $imposter->{idx});
  title: Error processing hot pixels
  type: process
- context: |2-
        }

        # Run the hot pixel region check on the Python side on FID|GUI|BOT
        my @imposters = check_hot_pix(\@idxs, \@yags, \@zags, \@mags, \@types,
                                       $self->{ccd_temp}, $self->{date}, $dither_guide_y, $dither_guide_z);

        # Assign warnings based on those hot pixel region checks
      IMPOSTER:
        for my $imposter (@imposters){
            # If the check just fails on the Python side write out a warning and move on.
            if ($imposter->{status} == 1){
                push @warn, sprintf("[%2d] Processing error when checking for hot pixels.\n",
                                    $imposter->{idx});
                next IMPOSTER;
            }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            my $warn = sprintf(
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                "[%2d] Imposter mag %.1f centroid offset %.1f row, col (%4d, %4d) star (%4d, %4d)\n",
                $imposter->{idx}, $imposter->{bad2_mag}, $imposter->{offset},
                $imposter->{bad2_row}, $imposter->{bad2_col},
                $imposter->{entry_row}, $imposter->{entry_col});
            if ($imposter->{offset} > 4.0){
                push @warn, $warn;
            }
            elsif ($imposter->{offset} > 2.5){
                push @orange_warn, $warn;
            }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1330
  id: '060'
  line_number: 1330
  project: starcheck
  text: |-
    my $warn = sprintf(
    "[%2d] Imposter mag %.1f centroid offset %.1f row, col (%4d, %4d) star (%4d, %4d)\n",
    $imposter->{idx}, $imposter->{bad2_mag}, $imposter->{offset},
    $imposter->{bad2_row}, $imposter->{bad2_col},
    $imposter->{entry_row}, $imposter->{entry_col});
  title: Formatting of imposter warning
  type: code
- context: |2-
        # Assign warnings based on those hot pixel region checks
      IMPOSTER:
        for my $imposter (@imposters){
            # If the check just fails on the Python side write out a warning and move on.
            if ($imposter->{status} == 1){
                push @warn, sprintf("[%2d] Processing error when checking for hot pixels.\n",
                                    $imposter->{idx});
                next IMPOSTER;
            }
            my $warn = sprintf(
                "[%2d] Imposter mag %.1f centroid offset %.1f row, col (%4d, %4d) star (%4d, %4d)\n",
                $imposter->{idx}, $imposter->{bad2_mag}, $imposter->{offset},
                $imposter->{bad2_row}, $imposter->{bad2_col},
                $imposter->{entry_row}, $imposter->{entry_col});
            if ($imposter->{offset} > 4.0){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @warn, $warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            elsif ($imposter->{offset} > 2.5){
                push @orange_warn, $warn;
            }
        }

        # Seed smallest maximums and largest minimums for guide star box
        my $max_y = -3000;
        my $min_y = 3000;
        my $max_z = -3000;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1336
  id: '061'
  line_number: 1336
  project: starcheck
  severity: red
  text: |-
    push @warn, $warn;
  title: Star has significant imposter/hot pixel
  type: aca_check
- context: |2-
            # If the check just fails on the Python side write out a warning and move on.
            if ($imposter->{status} == 1){
                push @warn, sprintf("[%2d] Processing error when checking for hot pixels.\n",
                                    $imposter->{idx});
                next IMPOSTER;
            }
            my $warn = sprintf(
                "[%2d] Imposter mag %.1f centroid offset %.1f row, col (%4d, %4d) star (%4d, %4d)\n",
                $imposter->{idx}, $imposter->{bad2_mag}, $imposter->{offset},
                $imposter->{bad2_row}, $imposter->{bad2_col},
                $imposter->{entry_row}, $imposter->{entry_col});
            if ($imposter->{offset} > 4.0){
                push @warn, $warn;
            }
            elsif ($imposter->{offset} > 2.5){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @orange_warn, $warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
        }

        # Seed smallest maximums and largest minimums for guide star box
        my $max_y = -3000;
        my $min_y = 3000;
        my $max_z = -3000;
        my $min_z = 3000;

        foreach my $i (1..16) {
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1339
  id: '062'
  line_number: 1339
  project: starcheck
  severity: orange
  text: |-
    push @orange_warn, $warn;
  title: Star has imposter/hot pixel
  type: aca_check
- aca_cl_id: ACA-042
  context: |2

        # Search error for ACQ is the slew error, for fid, guide or mon it is about 4 arcsec
        my $search_err = ( (defined $type) and ($type =~ /BOT|ACQ/)) ? $slew_err : 4.0;

        # Find position extrema for smallest rectangle check
        if ( $type =~ /BOT|GUI/ ) {
            $max_y = ($max_y > $yag ) ? $max_y : $yag;
            $min_y = ($min_y < $yag ) ? $min_y : $yag;
            $max_z = ($max_z > $zag ) ? $max_z : $zag;
            $min_z = ($min_z < $zag ) ? $min_z : $zag;
        }
        next if ($type eq 'NUL');

           # Warn if star not identified ACA-042
        if ( $type =~ /BOT|GUI|ACQ/ and not defined $c->{"GS_IDENTIFIED$i"}) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf("[%2d] Missing Star. No AGASC star near search center \n", $i);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

        # Warn if ASPQ1 is too large for nominal ACQ or GUI selection
            if (($type =~ /BOT|ACQ|GUI/) and (defined $c->{"GS_ASPQ$i"})){
                if ((($type =~ /BOT|GUI/) and ($c->{"GS_ASPQ$i"} > 20)) or
                        (($type =~ /BOT|ACQ/) && ($c->{"GS_ASPQ$i"} > 40))){
                    push @orange_warn, sprintf "[%2d] Centroid Perturbation Warning.  %s: ASPQ1 = %2d\n",
                }
            }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1373
  id: '063'
  line_number: 1373
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf("[%2d] Missing Star. No AGASC star near search center \n", $i);
  title: No AGASC star near search box center
  type: aca_check
- context: |2-
            $min_y = ($min_y < $yag ) ? $min_y : $yag;
            $max_z = ($max_z > $zag ) ? $max_z : $zag;
            $min_z = ($min_z < $zag ) ? $min_z : $zag;
        }
        next if ($type eq 'NUL');

           # Warn if star not identified ACA-042
        if ( $type =~ /BOT|GUI|ACQ/ and not defined $c->{"GS_IDENTIFIED$i"}) {
            push @warn, sprintf("[%2d] Missing Star. No AGASC star near search center \n", $i);
        }

        # Warn if ASPQ1 is too large for nominal ACQ or GUI selection
            if (($type =~ /BOT|ACQ|GUI/) and (defined $c->{"GS_ASPQ$i"})){
                if ((($type =~ /BOT|GUI/) and ($c->{"GS_ASPQ$i"} > 20)) or
                        (($type =~ /BOT|ACQ/) && ($c->{"GS_ASPQ$i"} > 40))){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    push @orange_warn, sprintf "[%2d] Centroid Perturbation Warning.  %s: ASPQ1 = %2d\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                }
            }

        my $obs_min_cnt = 2;
        my $obs_bad_frac = 0.3;
        # Bad Acquisition Star
        if ($type =~ /BOT|ACQ|GUI/){
        my $n_obs = $bad_acqs{$sid}{n_obs};
            my $n_noids = $bad_acqs{$sid}{n_noids};
            if (defined $db_stats->{acq}){
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1380
  id: '064'
  line_number: 1380
  project: starcheck
  severity: yellow
  text: |-
    push @orange_warn, sprintf "[%2d] Centroid Perturbation Warning.  %s: ASPQ1 = %2d\n",
    }
    }

    my $obs_min_cnt = 2;
  title: Centroid Perturbation warning
  type: aca_check
- context: |2-
                    push @orange_warn, sprintf "[%2d] Centroid Perturbation Warning.  %s: ASPQ1 = %2d\n",
                }
            }

        my $obs_min_cnt = 2;
        my $obs_bad_frac = 0.3;
        # Bad Acquisition Star
        if ($type =~ /BOT|ACQ|GUI/){
        my $n_obs = $bad_acqs{$sid}{n_obs};
            my $n_noids = $bad_acqs{$sid}{n_noids};
            if (defined $db_stats->{acq}){
                $n_obs = $db_stats->{acq};
                $n_noids = $db_stats->{acq_noid};
            }
            if ($n_noids && $n_obs > $obs_min_cnt && $n_noids/$n_obs > $obs_bad_frac){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @yellow_warn, sprintf
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            "[%2d] Bad Acquisition Star. %s has %2d failed out of %2d attempts\n",
            $i, $sid, $n_noids, $n_obs;
            }
        }

        # Bad Guide Star
        if ($type =~ /BOT|GUI/){
            my $n_obs = $bad_gui{$sid}{n_obs};
            my $n_nbad = $bad_gui{$sid}{n_nbad};
            if (defined $db_stats->{gui}){
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1395
  id: '065'
  line_number: 1395
  project: starcheck
  severity: yellow
  text: |-
    push @yellow_warn, sprintf
    "[%2d] Bad Acquisition Star. %s has %2d failed out of %2d attempts\n",
    $i, $sid, $n_noids, $n_obs;
  title: Acquisition star has failed N out of M attempts
  type: aca_check
- context: |2-
                push @yellow_warn, sprintf
            "[%2d] Bad Acquisition Star. %s has %2d failed out of %2d attempts\n",
            $i, $sid, $n_noids, $n_obs;
            }
        }

        # Bad Guide Star
        if ($type =~ /BOT|GUI/){
            my $n_obs = $bad_gui{$sid}{n_obs};
            my $n_nbad = $bad_gui{$sid}{n_nbad};
            if (defined $db_stats->{gui}){
                $n_obs = $db_stats->{gui};
                $n_nbad = $db_stats->{gui_bad};
            }
            if ($n_nbad && $n_obs > $obs_min_cnt && $n_nbad/$n_obs > $obs_bad_frac){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @warn, sprintf
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            "[%2d] Bad Guide Star. %s has bad data %2d of %2d attempts\n",
            $i, $sid, $n_nbad, $n_obs;
            }
        }

        # Bad AGASC ID ACA-031
        push @yellow_warn,sprintf "[%2d] Non-numeric AGASC ID.  %s\n",$i,$sid if ($sid ne '---' && $sid =~ /\D/);
        if (($type =~ /BOT|GUI|ACQ/) and (defined $bad_id{$sid})){
                push @warn, sprintf "[%2d] Bad AGASC ID.  %s\n",$i,$sid;
        }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1410
  id: '066'
  line_number: 1410
  project: starcheck
  severity: yellow
  text: |-
    push @warn, sprintf
    "[%2d] Bad Guide Star. %s has bad data %2d of %2d attempts\n",
    $i, $sid, $n_nbad, $n_obs;
  title: Guide star has had bad data N out of M attempts
  type: aca_check
- aca_cl_id: ACA-031
  context: |2-
        if ($type =~ /BOT|GUI/){
            my $n_obs = $bad_gui{$sid}{n_obs};
            my $n_nbad = $bad_gui{$sid}{n_nbad};
            if (defined $db_stats->{gui}){
                $n_obs = $db_stats->{gui};
                $n_nbad = $db_stats->{gui_bad};
            }
            if ($n_nbad && $n_obs > $obs_min_cnt && $n_nbad/$n_obs > $obs_bad_frac){
                push @warn, sprintf
            "[%2d] Bad Guide Star. %s has bad data %2d of %2d attempts\n",
            $i, $sid, $n_nbad, $n_obs;
            }
        }

        # Bad AGASC ID ACA-031
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @yellow_warn,sprintf "[%2d] Non-numeric AGASC ID.  %s\n",$i,$sid if ($sid ne '---' && $sid =~ /\D/);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        if (($type =~ /BOT|GUI|ACQ/) and (defined $bad_id{$sid})){
                push @warn, sprintf "[%2d] Bad AGASC ID.  %s\n",$i,$sid;
        }
        # Set NOTES variable for marginal or bad star based on AGASC info
        $c->{"GS_NOTES$i"} = '';
        my $note = '';
        my $marginal_note = '';
        if (defined $c->{"GS_CLASS$i"}) {
            $c->{"GS_NOTES$i"} .= 'b' if ($c->{"GS_CLASS$i"} != 0);
            # ignore precision errors in color
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1417
  id: '067'
  line_number: 1417
  project: starcheck
  severity: yellow
  text: |-
    push @yellow_warn,sprintf "[%2d] Non-numeric AGASC ID.  %s\n",$i,$sid if ($sid ne '---' && $sid =~ /\D/);
  title: AGASC ID is non-numeric
  type: aca_check
- aca_cl_id: ACA-031
  context: |2-
            my $n_nbad = $bad_gui{$sid}{n_nbad};
            if (defined $db_stats->{gui}){
                $n_obs = $db_stats->{gui};
                $n_nbad = $db_stats->{gui_bad};
            }
            if ($n_nbad && $n_obs > $obs_min_cnt && $n_nbad/$n_obs > $obs_bad_frac){
                push @warn, sprintf
            "[%2d] Bad Guide Star. %s has bad data %2d of %2d attempts\n",
            $i, $sid, $n_nbad, $n_obs;
            }
        }

        # Bad AGASC ID ACA-031
        push @yellow_warn,sprintf "[%2d] Non-numeric AGASC ID.  %s\n",$i,$sid if ($sid ne '---' && $sid =~ /\D/);
        if (($type =~ /BOT|GUI|ACQ/) and (defined $bad_id{$sid})){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @warn, sprintf "[%2d] Bad AGASC ID.  %s\n",$i,$sid;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        # Set NOTES variable for marginal or bad star based on AGASC info
        $c->{"GS_NOTES$i"} = '';
        my $note = '';
        my $marginal_note = '';
        if (defined $c->{"GS_CLASS$i"}) {
            $c->{"GS_NOTES$i"} .= 'b' if ($c->{"GS_CLASS$i"} != 0);
            # ignore precision errors in color
            my $color = sprintf('%.7f', $c->{"GS_BV$i"});
            $c->{"GS_NOTES$i"} .= 'c' if ($color eq '0.7000000'); # ACA-033
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1419
  id: 068
  line_number: 1419
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf "[%2d] Bad AGASC ID.  %s\n",$i,$sid;
  title: Star is in bad star list
  type: aca_check
- aca_cl_id: ACA-033
  context: |2-
                $c->{"GS_NOTES$i"} .= 'C' if ($color eq '1.5000000');
            $c->{"GS_NOTES$i"} .= 'm' if ($c->{"GS_MAGERR$i"} > 99);
            $c->{"GS_NOTES$i"} .= 'p' if ($c->{"GS_POSERR$i"} > 399);
                # If 0.7 color or bad mag err or bad pos err, format a warning for the star.
                # Color 1.5 stars do not get a text warning and bad class stars are handled
                # separately a few lines lower.
                if ($c->{"GS_NOTES$i"} =~ /[cmp]/){
                    $note = sprintf("B-V = %.3f, Mag_Err = %.2f, Pos_Err = %.2f",
                                    $c->{"GS_BV$i"}, ($c->{"GS_MAGERR$i"})/100, ($c->{"GS_POSERR$i"})/1000);
                    $marginal_note = sprintf("[%2d] Marginal star. %s\n",$i,$note);
                }
                # Assign orange warnings to catalog stars with B-V = 0.7 .
                # Assign yellow warnings to catalog stars with other issues (example B-V = 1.5).
                if (($marginal_note) && ($type =~ /BOT|GUI|ACQ/)) {
                    if ($color eq '0.7000000'){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @orange_warn, $marginal_note;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                    else{
                        push @yellow_warn, $marginal_note;
                    }
                }
                # Print bad star warning on catalog stars with bad class.
                if ($c->{"GS_CLASS$i"} != 0){
                    if ($type =~ /BOT|GUI|ACQ/ ){
                        push @warn, sprintf("[%2d] Bad star.  Class = %s %s\n", $i,$c->{"GS_CLASS$i"},$note);
                    }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1445
  id: 069
  line_number: 1445
  project: starcheck
  severity: red
  text: |-
    push @orange_warn, $marginal_note;
  title: Marginal star (0.7 color on BOT or GUI)
  type: aca_check
- context: |2-
                # If 0.7 color or bad mag err or bad pos err, format a warning for the star.
                # Color 1.5 stars do not get a text warning and bad class stars are handled
                # separately a few lines lower.
                if ($c->{"GS_NOTES$i"} =~ /[cmp]/){
                    $note = sprintf("B-V = %.3f, Mag_Err = %.2f, Pos_Err = %.2f",
                                    $c->{"GS_BV$i"}, ($c->{"GS_MAGERR$i"})/100, ($c->{"GS_POSERR$i"})/1000);
                    $marginal_note = sprintf("[%2d] Marginal star. %s\n",$i,$note);
                }
                # Assign orange warnings to catalog stars with B-V = 0.7 .
                # Assign yellow warnings to catalog stars with other issues (example B-V = 1.5).
                if (($marginal_note) && ($type =~ /BOT|GUI|ACQ/)) {
                    if ($color eq '0.7000000'){
                        push @orange_warn, $marginal_note;
                    }
                    else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @yellow_warn, $marginal_note;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                }
                # Print bad star warning on catalog stars with bad class.
                if ($c->{"GS_CLASS$i"} != 0){
                    if ($type =~ /BOT|GUI|ACQ/ ){
                        push @warn, sprintf("[%2d] Bad star.  Class = %s %s\n", $i,$c->{"GS_CLASS$i"},$note);
                    }
                    elsif ($type eq 'MON'){
                        push @{$self->{fyi}}, sprintf("[%2d] MON class= %s %s (do not convert to GUI)\n", $i,$c->{"GS_CLASS$i"},$note);
                    }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1448
  id: '070'
  line_number: 1448
  project: starcheck
  severity: yellow
  text: |-
    push @yellow_warn, $marginal_note;
  title: Marginal star (1.5 color or bad poserr or magerr)
  type: aca_check
- context: |2-
                    $marginal_note = sprintf("[%2d] Marginal star. %s\n",$i,$note);
                }
                # Assign orange warnings to catalog stars with B-V = 0.7 .
                # Assign yellow warnings to catalog stars with other issues (example B-V = 1.5).
                if (($marginal_note) && ($type =~ /BOT|GUI|ACQ/)) {
                    if ($color eq '0.7000000'){
                        push @orange_warn, $marginal_note;
                    }
                    else{
                        push @yellow_warn, $marginal_note;
                    }
                }
                # Print bad star warning on catalog stars with bad class.
                if ($c->{"GS_CLASS$i"} != 0){
                    if ($type =~ /BOT|GUI|ACQ/ ){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @warn, sprintf("[%2d] Bad star.  Class = %s %s\n", $i,$c->{"GS_CLASS$i"},$note);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                    elsif ($type eq 'MON'){
                        push @{$self->{fyi}}, sprintf("[%2d] MON class= %s %s (do not convert to GUI)\n", $i,$c->{"GS_CLASS$i"},$note);
                    }
                }
        }

        # Star/fid outside of CCD boundaries
            # ACA-019 ACA-020 ACA-021
        my ($pixel_row, $pixel_col) = _yagzag_to_pixels($yag, $zag);
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1454
  id: '071'
  line_number: 1454
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf("[%2d] Bad star.  Class = %s %s\n", $i,$c->{"GS_CLASS$i"},$note);
  title: Bad star class
  type: aca_check
- context: |2-
                # Assign yellow warnings to catalog stars with other issues (example B-V = 1.5).
                if (($marginal_note) && ($type =~ /BOT|GUI|ACQ/)) {
                    if ($color eq '0.7000000'){
                        push @orange_warn, $marginal_note;
                    }
                    else{
                        push @yellow_warn, $marginal_note;
                    }
                }
                # Print bad star warning on catalog stars with bad class.
                if ($c->{"GS_CLASS$i"} != 0){
                    if ($type =~ /BOT|GUI|ACQ/ ){
                        push @warn, sprintf("[%2d] Bad star.  Class = %s %s\n", $i,$c->{"GS_CLASS$i"},$note);
                    }
                    elsif ($type eq 'MON'){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @{$self->{fyi}}, sprintf("[%2d] MON class= %s %s (do not convert to GUI)\n", $i,$c->{"GS_CLASS$i"},$note);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                }
        }

        # Star/fid outside of CCD boundaries
            # ACA-019 ACA-020 ACA-021
        my ($pixel_row, $pixel_col) = _yagzag_to_pixels($yag, $zag);

            # Set "acq phase" dither to acq dither or 20.0 if undefined
            my $dither_acq_y = $self->{dither_acq}->{ampl_y} or 20.0;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1457
  id: '072'
  line_number: 1457
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, sprintf("[%2d] MON class= %s %s (do not convert to GUI)\n", $i,$c->{"GS_CLASS$i"},$note);
  title: MON star does not have reasonable CLASS for guide star conversion
  type: aca_check
- aca_cl_id: ACA-019, ACA-020, ACA-021
  context: |2-
            my $row_lim = 512.0 - ($pix_row_pad + $pix_window_pad);
            my $col_lim = 512.0 - ($pix_col_pad + $pix_window_pad);

            my %track_limits = ('row' => $row_lim - $dither_track_y / $ang_per_pix,
                                'col' => $col_lim - $dither_track_p / $ang_per_pix);
            my %pixel = ('row' => $pixel_row,
                         'col' => $pixel_col);
            # Store the sign of the pixel row/col just to make it easier to print the corresponding limit
            my %pixel_sign = ('row' => ($pixel_row < 0) ? -1 : 1,
                              'col' => ($pixel_col < 0) ? -1 : 1);

            if ($type =~ /BOT|GUI|FID/){
                foreach my $axis ('row', 'col'){
                    my $track_delta = abs($track_limits{$axis}) - abs($pixel{$axis});
                    if ($track_delta < 2.5){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @warn, sprintf "[%2d] Less than 2.5 pix edge margin $axis lim %.1f val %.1f delta %.1f\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                            $i, $pixel_sign{$axis} * $track_limits{$axis}, $pixel{$axis}, $track_delta;
                    }
                    elsif ($track_delta < 5){
                        push @orange_warn, sprintf "[%2d] Within 5 pix of CCD $axis lim %.1f val %.1f delta %.1f\n",
                            $i, $pixel_sign{$axis} * $track_limits{$axis}, $pixel{$axis}, $track_delta;
                    }
                }
            }
            # For acq stars, the distance to the row/col padded limits are also confirmed,
            # but code to track which boundary is exceeded (row or column) is not present.
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1493
  id: '073'
  line_number: 1493
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf "[%2d] Less than 2.5 pix edge margin $axis lim %.1f val %.1f delta %.1f\n",
    $i, $pixel_sign{$axis} * $track_limits{$axis}, $pixel{$axis}, $track_delta;
  title: Less than 2.5 pix margin to edge
  type: aca_check
- context: |2-
                                'col' => $col_lim - $dither_track_p / $ang_per_pix);
            my %pixel = ('row' => $pixel_row,
                         'col' => $pixel_col);
            # Store the sign of the pixel row/col just to make it easier to print the corresponding limit
            my %pixel_sign = ('row' => ($pixel_row < 0) ? -1 : 1,
                              'col' => ($pixel_col < 0) ? -1 : 1);

            if ($type =~ /BOT|GUI|FID/){
                foreach my $axis ('row', 'col'){
                    my $track_delta = abs($track_limits{$axis}) - abs($pixel{$axis});
                    if ($track_delta < 2.5){
                        push @warn, sprintf "[%2d] Less than 2.5 pix edge margin $axis lim %.1f val %.1f delta %.1f\n",
                            $i, $pixel_sign{$axis} * $track_limits{$axis}, $pixel{$axis}, $track_delta;
                    }
                    elsif ($track_delta < 5){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @orange_warn, sprintf "[%2d] Within 5 pix of CCD $axis lim %.1f val %.1f delta %.1f\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                            $i, $pixel_sign{$axis} * $track_limits{$axis}, $pixel{$axis}, $track_delta;
                    }
                }
            }
            # For acq stars, the distance to the row/col padded limits are also confirmed,
            # but code to track which boundary is exceeded (row or column) is not present.
            # Note from above that the pix_row_pad used for row_lim has 7 more pixels of padding
            # than the pix_col_pad used to determine col_lim.
            my $acq_edge_delta = min(($row_lim - $dither_acq_y / $ang_per_pix) - abs($pixel_row),
                                     ($col_lim - $dither_acq_p / $ang_per_pix) - abs($pixel_col));
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1497
  id: '074'
  line_number: 1497
  project: starcheck
  severity: orange
  text: |-
    push @orange_warn, sprintf "[%2d] Within 5 pix of CCD $axis lim %.1f val %.1f delta %.1f\n",
    $i, $pixel_sign{$axis} * $track_limits{$axis}, $pixel{$axis}, $track_delta;
  title: Less than 5.0 pix margin to edge
  type: aca_check
- context: |2-
                            $i, $pixel_sign{$axis} * $track_limits{$axis}, $pixel{$axis}, $track_delta;
                    }
                    elsif ($track_delta < 5){
                        push @orange_warn, sprintf "[%2d] Within 5 pix of CCD $axis lim %.1f val %.1f delta %.1f\n",
                            $i, $pixel_sign{$axis} * $track_limits{$axis}, $pixel{$axis}, $track_delta;
                    }
                }
            }
            # For acq stars, the distance to the row/col padded limits are also confirmed,
            # but code to track which boundary is exceeded (row or column) is not present.
            # Note from above that the pix_row_pad used for row_lim has 7 more pixels of padding
            # than the pix_col_pad used to determine col_lim.
            my $acq_edge_delta = min(($row_lim - $dither_acq_y / $ang_per_pix) - abs($pixel_row),
                                     ($col_lim - $dither_acq_p / $ang_per_pix) - abs($pixel_col));
            if (($type =~ /BOT|ACQ/) and ($acq_edge_delta < (-1 * 12))){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @orange_warn, sprintf "[%2d] Acq Off (padded) CCD by > 60 arcsec.\n",$i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            elsif (($type =~ /BOT|ACQ/) and ($acq_edge_delta < 0)){
                push @{$self->{fyi}}, sprintf "[%2d] Acq Off (padded) CCD\n",$i;
            }

        # Faint and bright limits ~ACA-009 ACA-010
        if ($mag ne '---') {
                if ($type eq 'GUI' or $type eq 'BOT'){
                    my $guide_mag_warn = sprintf "[%2d] Magnitude. Guide star %6.3f\n", $i, $mag;
                    if (($mag > 10.3) or ($mag < 6.0)){
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1509
  id: '075'
  line_number: 1509
  project: starcheck
  severity: orange
  text: |-
    push @orange_warn, sprintf "[%2d] Acq Off (padded) CCD by > 60 arcsec.\n",$i;
  title: Acquisition star off (padded) edge of CCD by > 60 arcsec
  type: aca_check
- context: |2-
                        push @orange_warn, sprintf "[%2d] Within 5 pix of CCD $axis lim %.1f val %.1f delta %.1f\n",
                            $i, $pixel_sign{$axis} * $track_limits{$axis}, $pixel{$axis}, $track_delta;
                    }
                }
            }
            # For acq stars, the distance to the row/col padded limits are also confirmed,
            # but code to track which boundary is exceeded (row or column) is not present.
            # Note from above that the pix_row_pad used for row_lim has 7 more pixels of padding
            # than the pix_col_pad used to determine col_lim.
            my $acq_edge_delta = min(($row_lim - $dither_acq_y / $ang_per_pix) - abs($pixel_row),
                                     ($col_lim - $dither_acq_p / $ang_per_pix) - abs($pixel_col));
            if (($type =~ /BOT|ACQ/) and ($acq_edge_delta < (-1 * 12))){
                push @orange_warn, sprintf "[%2d] Acq Off (padded) CCD by > 60 arcsec.\n",$i;
            }
            elsif (($type =~ /BOT|ACQ/) and ($acq_edge_delta < 0)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{fyi}}, sprintf "[%2d] Acq Off (padded) CCD\n",$i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }

        # Faint and bright limits ~ACA-009 ACA-010
        if ($mag ne '---') {
                if ($type eq 'GUI' or $type eq 'BOT'){
                    my $guide_mag_warn = sprintf "[%2d] Magnitude. Guide star %6.3f\n", $i, $mag;
                    if (($mag > 10.3) or ($mag < 6.0)){
                        push @warn, $guide_mag_warn;
                    }
                }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1512
  id: '076'
  line_number: 1512
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, sprintf "[%2d] Acq Off (padded) CCD\n",$i;
  title: Acquisition star off (padded) edge of CCD
  type: aca_check
- aca_cl_id: ACA-010
  context: |2-
            # than the pix_col_pad used to determine col_lim.
            my $acq_edge_delta = min(($row_lim - $dither_acq_y / $ang_per_pix) - abs($pixel_row),
                                     ($col_lim - $dither_acq_p / $ang_per_pix) - abs($pixel_col));
            if (($type =~ /BOT|ACQ/) and ($acq_edge_delta < (-1 * 12))){
                push @orange_warn, sprintf "[%2d] Acq Off (padded) CCD by > 60 arcsec.\n",$i;
            }
            elsif (($type =~ /BOT|ACQ/) and ($acq_edge_delta < 0)){
                push @{$self->{fyi}}, sprintf "[%2d] Acq Off (padded) CCD\n",$i;
            }

        # Faint and bright limits ~ACA-009 ACA-010
        if ($mag ne '---') {
                if ($type eq 'GUI' or $type eq 'BOT'){
                    my $guide_mag_warn = sprintf "[%2d] Magnitude. Guide star %6.3f\n", $i, $mag;
                    if (($mag > 10.3) or ($mag < 6.0)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @warn, $guide_mag_warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                }
                if ($type eq 'BOT' or $type eq 'ACQ'){
                    my $acq_mag_warn = sprintf "[%2d] Magnitude. Acq star %6.3f\n", $i, $mag;
                    if ($mag < 5.8){
                        push @warn, $acq_mag_warn;
                    }
                    elsif ($mag > $self->{mag_faint_red}){
                        push @orange_warn, $acq_mag_warn;
                    }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1520
  id: '077'
  line_number: 1520
  project: starcheck
  severity: red
  text: |-
    push @warn, $guide_mag_warn;
  title: Guide star has magnitude out of range (< 6.0 or > 10.3)
  type: aca_check
- aca_cl_id: ACA-009
  context: |2
            elsif (($type =~ /BOT|ACQ/) and ($acq_edge_delta < 0)){
                push @{$self->{fyi}}, sprintf "[%2d] Acq Off (padded) CCD\n",$i;
            }

        # Faint and bright limits ~ACA-009 ACA-010
        if ($mag ne '---') {
                if ($type eq 'GUI' or $type eq 'BOT'){
                    my $guide_mag_warn = sprintf "[%2d] Magnitude. Guide star %6.3f\n", $i, $mag;
                    if (($mag > 10.3) or ($mag < 6.0)){
                        push @warn, $guide_mag_warn;
                    }
                }
                if ($type eq 'BOT' or $type eq 'ACQ'){
                    my $acq_mag_warn = sprintf "[%2d] Magnitude. Acq star %6.3f\n", $i, $mag;
                    if ($mag < 5.8){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @warn, $acq_mag_warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                    elsif ($mag > $self->{mag_faint_red}){
                        push @orange_warn, $acq_mag_warn;
                    }
                    elsif ($mag > $self->{mag_faint_yellow}){
                        push @yellow_warn, $acq_mag_warn;
                    }
                }
        }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1526
  id: 078
  line_number: 1526
  project: starcheck
  severity: red
  text: |-
    push @warn, $acq_mag_warn;
  title: Acquisition star too bright (< 5.8)
  type: aca_check
- context: |2-

        # Faint and bright limits ~ACA-009 ACA-010
        if ($mag ne '---') {
                if ($type eq 'GUI' or $type eq 'BOT'){
                    my $guide_mag_warn = sprintf "[%2d] Magnitude. Guide star %6.3f\n", $i, $mag;
                    if (($mag > 10.3) or ($mag < 6.0)){
                        push @warn, $guide_mag_warn;
                    }
                }
                if ($type eq 'BOT' or $type eq 'ACQ'){
                    my $acq_mag_warn = sprintf "[%2d] Magnitude. Acq star %6.3f\n", $i, $mag;
                    if ($mag < 5.8){
                        push @warn, $acq_mag_warn;
                    }
                    elsif ($mag > $self->{mag_faint_red}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @orange_warn, $acq_mag_warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                    elsif ($mag > $self->{mag_faint_yellow}){
                        push @yellow_warn, $acq_mag_warn;
                    }
                }
        }

        # FID magnitude limits ACA-011
        if ($type eq 'FID') {
            if ($mag =~ /---/ or $mag < $fid_bright or $mag > $fid_faint) {
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1529
  id: 079
  line_number: 1529
  project: starcheck
  severity: orange
  text: |-
    push @orange_warn, $acq_mag_warn;
  title: Acquisition star fainter than red faint limit
  type: aca_check
- context: |2-
                if ($type eq 'GUI' or $type eq 'BOT'){
                    my $guide_mag_warn = sprintf "[%2d] Magnitude. Guide star %6.3f\n", $i, $mag;
                    if (($mag > 10.3) or ($mag < 6.0)){
                        push @warn, $guide_mag_warn;
                    }
                }
                if ($type eq 'BOT' or $type eq 'ACQ'){
                    my $acq_mag_warn = sprintf "[%2d] Magnitude. Acq star %6.3f\n", $i, $mag;
                    if ($mag < 5.8){
                        push @warn, $acq_mag_warn;
                    }
                    elsif ($mag > $self->{mag_faint_red}){
                        push @orange_warn, $acq_mag_warn;
                    }
                    elsif ($mag > $self->{mag_faint_yellow}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @yellow_warn, $acq_mag_warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                }
        }

        # FID magnitude limits ACA-011
        if ($type eq 'FID') {
            if ($mag =~ /---/ or $mag < $fid_bright or $mag > $fid_faint) {
            push @warn, sprintf "[%2d] Magnitude.  %6.3f\n",$i, $mag =~ /---/ ? 0 : $mag;
            }
        }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1532
  id: 080
  line_number: 1532
  project: starcheck
  severity: yellow
  text: |-
    push @yellow_warn, $acq_mag_warn;
  title: Acquisition star fainter than yellow faint limit
  type: aca_check
- aca_cl_id: ACA-011
  context: |2-
                    if ($mag < 5.8){
                        push @warn, $acq_mag_warn;
                    }
                    elsif ($mag > $self->{mag_faint_red}){
                        push @orange_warn, $acq_mag_warn;
                    }
                    elsif ($mag > $self->{mag_faint_yellow}){
                        push @yellow_warn, $acq_mag_warn;
                    }
                }
        }

        # FID magnitude limits ACA-011
        if ($type eq 'FID') {
            if ($mag =~ /---/ or $mag < $fid_bright or $mag > $fid_faint) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf "[%2d] Magnitude.  %6.3f\n",$i, $mag =~ /---/ ? 0 : $mag;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
        }

            # Check for situation that occurred for obsid 14577 with a fid light
            # inside the search box (PR #50).

            if ($type =~ /BOT|ACQ/){
                # Margin for fid spoiling the acquisition star is the search box halfwidth
                # plus the uncertainty in fid position.  See starcheck #251 for justification
                # of the 25 arcsec value here.
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1540
  id: 081
  line_number: 1540
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf "[%2d] Magnitude.  %6.3f\n",$i, $mag =~ /---/ ? 0 : $mag;
  title: Fid magnitude outside of range
  type: aca_check
- context: |2-
        }

            # Check for situation that occurred for obsid 14577 with a fid light
            # inside the search box (PR #50).

            if ($type =~ /BOT|ACQ/){
                # Margin for fid spoiling the acquisition star is the search box halfwidth
                # plus the uncertainty in fid position.  See starcheck #251 for justification
                # of the 25 arcsec value here.
                my $fid_spoil_margin = $halfw + 25.0;

                for my $fpos (@fid_positions){
                    if (abs($fpos->{y} - $yag) < $fid_spoil_margin and
                            abs($fpos->{z} - $zag) < $fid_spoil_margin){
                        if ($type =~ /ACQ/){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                            push @yellow_warn, sprintf "[%2d] Fid light in search box\n", $i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        }
                        else{
                            push @warn, sprintf "[%2d] Fid light in search box\n", $i;
                        }
                    }
                }
            }

        if ($type =~ /BOT|GUI|ACQ/){
            if (( $maxmag =~ /---/) or ($mag =~ /---/)){
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1557
  id: 082
  line_number: 1557
  project: starcheck
  severity: yellow
  text: |-
    push @yellow_warn, sprintf "[%2d] Fid light in search box\n", $i;
  title: Fid light in search box (warn on acquisition star)
  type: aca_check
- context: |2-
            # inside the search box (PR #50).

            if ($type =~ /BOT|ACQ/){
                # Margin for fid spoiling the acquisition star is the search box halfwidth
                # plus the uncertainty in fid position.  See starcheck #251 for justification
                # of the 25 arcsec value here.
                my $fid_spoil_margin = $halfw + 25.0;

                for my $fpos (@fid_positions){
                    if (abs($fpos->{y} - $yag) < $fid_spoil_margin and
                            abs($fpos->{z} - $zag) < $fid_spoil_margin){
                        if ($type =~ /ACQ/){
                            push @yellow_warn, sprintf "[%2d] Fid light in search box\n", $i;
                        }
                        else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                            push @warn, sprintf "[%2d] Fid light in search box\n", $i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        }
                    }
                }
            }

        if ($type =~ /BOT|GUI|ACQ/){
            if (( $maxmag =~ /---/) or ($mag =~ /---/)){
            push @warn, sprintf "[%2d] Magnitude.  MAG or MAGMAX not defined \n",$i;
            }
            else{
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1560
  id: 083
  line_number: 1560
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf "[%2d] Fid light in search box\n", $i;
  title: Fid light in search box (BOT)
  type: aca_check
- context: |2-
                for my $fpos (@fid_positions){
                    if (abs($fpos->{y} - $yag) < $fid_spoil_margin and
                            abs($fpos->{z} - $zag) < $fid_spoil_margin){
                        if ($type =~ /ACQ/){
                            push @yellow_warn, sprintf "[%2d] Fid light in search box\n", $i;
                        }
                        else{
                            push @warn, sprintf "[%2d] Fid light in search box\n", $i;
                        }
                    }
                }
            }

        if ($type =~ /BOT|GUI|ACQ/){
            if (( $maxmag =~ /---/) or ($mag =~ /---/)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf "[%2d] Magnitude.  MAG or MAGMAX not defined \n",$i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            else{
                    # This is an explicit check of ACA-041
                    if (($maxmag - $mag) < 0.3){
                        push @warn, sprintf "[%2d] Magnitude.  MAXMAG - MAG < 0.3\n", $i;
                    }
                    # This is a check that maxmag for each slot is as-expected.
                    # Note that for stars with large mag err (like color 1.5 stars) this will throw
                    # a warning.
                    my $rounded_maxmag = sprintf("%.2f", $maxmag);
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1568
  id: 084
  line_number: 1568
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf "[%2d] Magnitude.  MAG or MAGMAX not defined \n",$i;
  title: Star magnitude error.  MAG or MAXMAG not defined
  type: aca_check
- context: |2-
                        }
                        else{
                            push @warn, sprintf "[%2d] Fid light in search box\n", $i;
                        }
                    }
                }
            }

        if ($type =~ /BOT|GUI|ACQ/){
            if (( $maxmag =~ /---/) or ($mag =~ /---/)){
            push @warn, sprintf "[%2d] Magnitude.  MAG or MAGMAX not defined \n",$i;
            }
            else{
                    # This is an explicit check of ACA-041
                    if (($maxmag - $mag) < 0.3){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @warn, sprintf "[%2d] Magnitude.  MAXMAG - MAG < 0.3\n", $i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                    # This is a check that maxmag for each slot is as-expected.
                    # Note that for stars with large mag err (like color 1.5 stars) this will throw
                    # a warning.
                    my $rounded_maxmag = sprintf("%.2f", $maxmag);
                    my $expected_maxmag = min($mag + 1.5, 11.2);
            if (abs($expected_maxmag - $rounded_maxmag) > 0.1){
                        push @yellow_warn,
                            sprintf "[%2d] Magnitude.  MAXMAG %.2f not within 0.1 mag of %.2f. (MAXMAG-MAG=%.2f) \n",
                        $i, $rounded_maxmag, $expected_maxmag, $maxmag - $mag;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1573
  id: 085
  line_number: 1573
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf "[%2d] Magnitude.  MAXMAG - MAG < 0.3\n", $i;
  title: Not enough MAXMAG margin
  type: aca_check
- context: |2-
        if ($type =~ /BOT|GUI|ACQ/){
            if (( $maxmag =~ /---/) or ($mag =~ /---/)){
            push @warn, sprintf "[%2d] Magnitude.  MAG or MAGMAX not defined \n",$i;
            }
            else{
                    # This is an explicit check of ACA-041
                    if (($maxmag - $mag) < 0.3){
                        push @warn, sprintf "[%2d] Magnitude.  MAXMAG - MAG < 0.3\n", $i;
                    }
                    # This is a check that maxmag for each slot is as-expected.
                    # Note that for stars with large mag err (like color 1.5 stars) this will throw
                    # a warning.
                    my $rounded_maxmag = sprintf("%.2f", $maxmag);
                    my $expected_maxmag = min($mag + 1.5, 11.2);
            if (abs($expected_maxmag - $rounded_maxmag) > 0.1){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @yellow_warn,
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                            sprintf "[%2d] Magnitude.  MAXMAG %.2f not within 0.1 mag of %.2f. (MAXMAG-MAG=%.2f) \n",
                        $i, $rounded_maxmag, $expected_maxmag, $maxmag - $mag;
            }
            }
        }

        # Search box too large ACA-018
        if ($type ne 'MON' and $c->{"HALFW$i"} > 200) {
            push @warn, sprintf "[%2d] Search Box Size. Search Box Too Large. \n",$i;
        }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1581
  id: 086
  line_number: 1581
  project: starcheck
  severity: yellow
  text: |-
    push @yellow_warn,
    sprintf "[%2d] Magnitude.  MAXMAG %.2f not within 0.1 mag of %.2f. (MAXMAG-MAG=%.2f) \n",
    $i, $rounded_maxmag, $expected_maxmag, $maxmag - $mag;
  title: MAXMAG not within 0.1 mag of expected value
  type: aca_check
- aca_cl_id: ACA-018
  context: |2-
                    # This is a check that maxmag for each slot is as-expected.
                    # Note that for stars with large mag err (like color 1.5 stars) this will throw
                    # a warning.
                    my $rounded_maxmag = sprintf("%.2f", $maxmag);
                    my $expected_maxmag = min($mag + 1.5, 11.2);
            if (abs($expected_maxmag - $rounded_maxmag) > 0.1){
                        push @yellow_warn,
                            sprintf "[%2d] Magnitude.  MAXMAG %.2f not within 0.1 mag of %.2f. (MAXMAG-MAG=%.2f) \n",
                        $i, $rounded_maxmag, $expected_maxmag, $maxmag - $mag;
            }
            }
        }

        # Search box too large ACA-018
        if ($type ne 'MON' and $c->{"HALFW$i"} > 200) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf "[%2d] Search Box Size. Search Box Too Large. \n",$i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

        # Check that readout sizes are all 6x6 for science observations ACA-027
        if ($is_science && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "6x6"){
          if (($c->{"SIZE$i"} eq "8x8") and ($or->{HAS_MON}) and ($c->{"IMNUM$i"} == 7 )){
            push @{$self->{fyi}}, sprintf("[%2d] Readout Size. 8x8 Stealth MON?\n", $i);
          }
          else{
            push @warn, sprintf("[%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
          }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1590
  id: 087
  line_number: 1590
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf "[%2d] Search Box Size. Search Box Too Large. \n",$i;
  title: Acquisition search box > 200 arcsec
  type: aca_check
- context: |2-
                        push @yellow_warn,
                            sprintf "[%2d] Magnitude.  MAXMAG %.2f not within 0.1 mag of %.2f. (MAXMAG-MAG=%.2f) \n",
                        $i, $rounded_maxmag, $expected_maxmag, $maxmag - $mag;
            }
            }
        }

        # Search box too large ACA-018
        if ($type ne 'MON' and $c->{"HALFW$i"} > 200) {
            push @warn, sprintf "[%2d] Search Box Size. Search Box Too Large. \n",$i;
        }

        # Check that readout sizes are all 6x6 for science observations ACA-027
        if ($is_science && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "6x6"){
          if (($c->{"SIZE$i"} eq "8x8") and ($or->{HAS_MON}) and ($c->{"IMNUM$i"} == 7 )){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}}, sprintf("[%2d] Readout Size. 8x8 Stealth MON?\n", $i);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          }
          else{
            push @warn, sprintf("[%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
          }
        }

        # Check that readout sizes are all 8x8 for engineering observations ACA-028
        if ($is_er && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "8x8"){
            push @warn, sprintf("[%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
        }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1596
  id: 088
  line_number: 1596
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, sprintf("[%2d] Readout Size. 8x8 Stealth MON?\n", $i);
  title: Image size is 8x8 on guide star but looks to be a MON so OK
  type: aca_check
- context: |2-
            }
            }
        }

        # Search box too large ACA-018
        if ($type ne 'MON' and $c->{"HALFW$i"} > 200) {
            push @warn, sprintf "[%2d] Search Box Size. Search Box Too Large. \n",$i;
        }

        # Check that readout sizes are all 6x6 for science observations ACA-027
        if ($is_science && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "6x6"){
          if (($c->{"SIZE$i"} eq "8x8") and ($or->{HAS_MON}) and ($c->{"IMNUM$i"} == 7 )){
            push @{$self->{fyi}}, sprintf("[%2d] Readout Size. 8x8 Stealth MON?\n", $i);
          }
          else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf("[%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          }
        }

        # Check that readout sizes are all 8x8 for engineering observations ACA-028
        if ($is_er && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "8x8"){
            push @warn, sprintf("[%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
        }

        # Check that readout sizes are all 8x8 for FID lights ACA-029
        push @warn, sprintf("[%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"})
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1599
  id: 089
  line_number: 1599
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf("[%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
  title: OR guide star image size is not 6x6
  type: aca_check
- context: |2
            push @warn, sprintf "[%2d] Search Box Size. Search Box Too Large. \n",$i;
        }

        # Check that readout sizes are all 6x6 for science observations ACA-027
        if ($is_science && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "6x6"){
          if (($c->{"SIZE$i"} eq "8x8") and ($or->{HAS_MON}) and ($c->{"IMNUM$i"} == 7 )){
            push @{$self->{fyi}}, sprintf("[%2d] Readout Size. 8x8 Stealth MON?\n", $i);
          }
          else{
            push @warn, sprintf("[%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
          }
        }

        # Check that readout sizes are all 8x8 for engineering observations ACA-028
        if ($is_er && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "8x8"){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf("[%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

        # Check that readout sizes are all 8x8 for FID lights ACA-029
        push @warn, sprintf("[%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"})
            if ($type =~ /FID/  && $c->{"SIZE$i"} ne "8x8");

        # Check that readout size is 8x8 for monitor windows ACA-030
        push @warn, sprintf("[%2d] Readout Size. %s Should be 8x8\n", $i, $c->{"SIZE$i"})
            if ($type =~ /MON/  && $c->{"SIZE$i"} ne "8x8");
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1605
  id: 090
  line_number: 1605
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf("[%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
  title: ER guide image size is not 8x8
  type: aca_check
- context: |2-
        if ($is_science && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "6x6"){
          if (($c->{"SIZE$i"} eq "8x8") and ($or->{HAS_MON}) and ($c->{"IMNUM$i"} == 7 )){
            push @{$self->{fyi}}, sprintf("[%2d] Readout Size. 8x8 Stealth MON?\n", $i);
          }
          else{
            push @warn, sprintf("[%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
          }
        }

        # Check that readout sizes are all 8x8 for engineering observations ACA-028
        if ($is_er && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "8x8"){
            push @warn, sprintf("[%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
        }

        # Check that readout sizes are all 8x8 for FID lights ACA-029
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn, sprintf("[%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"})
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            if ($type =~ /FID/  && $c->{"SIZE$i"} ne "8x8");

        # Check that readout size is 8x8 for monitor windows ACA-030
        push @warn, sprintf("[%2d] Readout Size. %s Should be 8x8\n", $i, $c->{"SIZE$i"})
            if ($type =~ /MON/  && $c->{"SIZE$i"} ne "8x8");


        # Bad Pixels ACA-025
            my @close_pixels;
            my @dr;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1609
  id: 091
  line_number: 1609
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf("[%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"})
    if ($type =~ /FID/  && $c->{"SIZE$i"} ne "8x8");
  title: Fid light image size is not 8x8
  type: aca_check
- context: |2-
          else{
            push @warn, sprintf("[%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
          }
        }

        # Check that readout sizes are all 8x8 for engineering observations ACA-028
        if ($is_er && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "8x8"){
            push @warn, sprintf("[%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
        }

        # Check that readout sizes are all 8x8 for FID lights ACA-029
        push @warn, sprintf("[%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"})
            if ($type =~ /FID/  && $c->{"SIZE$i"} ne "8x8");

        # Check that readout size is 8x8 for monitor windows ACA-030
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn, sprintf("[%2d] Readout Size. %s Should be 8x8\n", $i, $c->{"SIZE$i"})
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            if ($type =~ /MON/  && $c->{"SIZE$i"} ne "8x8");


        # Bad Pixels ACA-025
            my @close_pixels;
            my @dr;
            if ($type =~ /GUI|BOT/){
            foreach my $pixel (@bad_pixels) {
            my $dy = abs($yag-$pixel->{yag});
            my $dz = abs($zag-$pixel->{zag});
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1613
  id: 092
  line_number: 1613
  project: starcheck
  severity: red
  text: |-
    push @warn, sprintf("[%2d] Readout Size. %s Should be 8x8\n", $i, $c->{"SIZE$i"})
    if ($type =~ /MON/  && $c->{"SIZE$i"} ne "8x8");
  title: Monitor window image size is 8x8
  type: aca_check
- context: |2-
        # Bad Pixels ACA-025
            my @close_pixels;
            my @dr;
            if ($type =~ /GUI|BOT/){
            foreach my $pixel (@bad_pixels) {
            my $dy = abs($yag-$pixel->{yag});
            my $dz = abs($zag-$pixel->{zag});
            my $dr = sqrt($dy**2 + $dz**2);
            next unless ($dz < $self->{dither_guide}->{ampl_p} + 25 and $dy < $self->{dither_guide}->{ampl_y} + 25);
            push @close_pixels, sprintf(" row, col (%d, %d), dy, dz (%d, %d) \n",
                                                $pixel->{row}, $pixel->{col}, $dy, $dz);
            push @dr, $dr;
            }
            if ( @close_pixels > 0 ) {
            my ($closest) = sort { $dr[$a] <=> $dr[$b] } (0 .. $#dr);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            my $warn = sprintf("[%2d] Nearby ACA bad pixel. "
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                       . $close_pixels[$closest],
                       $i); #Only warn for the closest pixel
            push @warn, $warn;
            }
        }

        # Spoiler star (for search) and common column

        foreach my $star (values %{$self->{agasc_hash}}) {
                # Skip tests if $star is the same as the catalog star
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1632
  id: 093
  line_number: 1632
  project: starcheck
  severity: red
  text: |-
    my $warn = sprintf("[%2d] Nearby ACA bad pixel. "
    . $close_pixels[$closest],
    $i); #Only warn for the closest pixel
  title: Guide star has close bad pixel
  type: aca_check
- context: |2-
            if ($type =~ /GUI|BOT/){
            foreach my $pixel (@bad_pixels) {
            my $dy = abs($yag-$pixel->{yag});
            my $dz = abs($zag-$pixel->{zag});
            my $dr = sqrt($dy**2 + $dz**2);
            next unless ($dz < $self->{dither_guide}->{ampl_p} + 25 and $dy < $self->{dither_guide}->{ampl_y} + 25);
            push @close_pixels, sprintf(" row, col (%d, %d), dy, dz (%d, %d) \n",
                                                $pixel->{row}, $pixel->{col}, $dy, $dz);
            push @dr, $dr;
            }
            if ( @close_pixels > 0 ) {
            my ($closest) = sort { $dr[$a] <=> $dr[$b] } (0 .. $#dr);
            my $warn = sprintf("[%2d] Nearby ACA bad pixel. "
                       . $close_pixels[$closest],
                       $i); #Only warn for the closest pixel
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, $warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
        }

        # Spoiler star (for search) and common column

        foreach my $star (values %{$self->{agasc_hash}}) {
                # Skip tests if $star is the same as the catalog star
            next if (  $star->{id} eq $sid ||
                   ( abs($star->{yag} - $yag) < $ID_DIST_LIMIT
                 && abs($star->{zag} - $zag) < $ID_DIST_LIMIT
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1635
  id: 094
  line_number: 1635
  project: starcheck
  text: |-
    push @warn, $warn;
  title: Part of 093
  type: code
- context: |2-
            next if (  $star->{id} eq $sid ||
                   ( abs($star->{yag} - $yag) < $ID_DIST_LIMIT
                 && abs($star->{zag} - $zag) < $ID_DIST_LIMIT
                 && abs($star->{mag_aca} - $mag) < 0.1 ) );
            my $dy = abs($yag-$star->{yag});
            my $dz = abs($zag-$star->{zag});
            my $dr = sqrt($dz**2 + $dy**2);
            my $dm = $mag ne '---' ? $mag - $star->{mag_aca} : 0.0;
            my $dm_string = $mag ne '---' ? sprintf("%4.1f", $mag - $star->{mag_aca}) : '?';

            # Fid within $dither + 25 arcsec of a star (yellow) and within 4 mags (red) ACA-024
            if ($type eq 'FID'
                    and $dz < $self->{dither_guide}->{ampl_p} + 25
                    and $dy < $self->{dither_guide}->{ampl_y} + 25
            and $dm > -5.0) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            my $warn = sprintf("[%2d] Fid spoiler.  %10d: " .
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -4.0)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
            }

                # Spoiler star in track box ACA-022
                if (($type =~ /BOT|GUI/) and ($dz < 25) and ($dy < 25) and ($dm > -1.0)){
            my $warn = sprintf("[%2d] Spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1658
  id: 095
  line_number: 1658
  project: starcheck
  text: |-
    my $warn = sprintf("[%2d] Fid spoiler.  %10d: " .
    "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
  title: Warning for fid spoiling
  type: code
- context: |2-
                 && abs($star->{zag} - $zag) < $ID_DIST_LIMIT
                 && abs($star->{mag_aca} - $mag) < 0.1 ) );
            my $dy = abs($yag-$star->{yag});
            my $dz = abs($zag-$star->{zag});
            my $dr = sqrt($dz**2 + $dy**2);
            my $dm = $mag ne '---' ? $mag - $star->{mag_aca} : 0.0;
            my $dm_string = $mag ne '---' ? sprintf("%4.1f", $mag - $star->{mag_aca}) : '?';

            # Fid within $dither + 25 arcsec of a star (yellow) and within 4 mags (red) ACA-024
            if ($type eq 'FID'
                    and $dz < $self->{dither_guide}->{ampl_p} + 25
                    and $dy < $self->{dither_guide}->{ampl_y} + 25
            and $dm > -5.0) {
            my $warn = sprintf("[%2d] Fid spoiler.  %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            if ($dm > -4.0)  { push @warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            else { push @yellow_warn, $warn }
            }

                # Spoiler star in track box ACA-022
                if (($type =~ /BOT|GUI/) and ($dz < 25) and ($dy < 25) and ($dm > -1.0)){
            my $warn = sprintf("[%2d] Spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
                }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1660
  id: 096
  line_number: 1660
  project: starcheck
  severity: red
  text: |-
    if ($dm > -4.0)  { push @warn, $warn }
    else { push @yellow_warn, $warn }
    }

    # Spoiler star in track box ACA-022
    if (($type =~ /BOT|GUI/) and ($dz < 25) and ($dy < 25) and ($dm > -1.0)){
    my $warn = sprintf("[%2d] Spoiler. %10d: " .
    "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
  title: Fid has bright spoiler
  type: aca_check
- context: |2-
                 && abs($star->{mag_aca} - $mag) < 0.1 ) );
            my $dy = abs($yag-$star->{yag});
            my $dz = abs($zag-$star->{zag});
            my $dr = sqrt($dz**2 + $dy**2);
            my $dm = $mag ne '---' ? $mag - $star->{mag_aca} : 0.0;
            my $dm_string = $mag ne '---' ? sprintf("%4.1f", $mag - $star->{mag_aca}) : '?';

            # Fid within $dither + 25 arcsec of a star (yellow) and within 4 mags (red) ACA-024
            if ($type eq 'FID'
                    and $dz < $self->{dither_guide}->{ampl_p} + 25
                    and $dy < $self->{dither_guide}->{ampl_y} + 25
            and $dm > -5.0) {
            my $warn = sprintf("[%2d] Fid spoiler.  %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -4.0)  { push @warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            else { push @yellow_warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }

                # Spoiler star in track box ACA-022
                if (($type =~ /BOT|GUI/) and ($dz < 25) and ($dy < 25) and ($dm > -1.0)){
            my $warn = sprintf("[%2d] Spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
                }
            # Search box spoiler - star within search box + search error and within 1.0 mags ACA-023
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1661
  id: 097
  line_number: 1661
  project: starcheck
  severity: yellow
  text: |-
    else { push @yellow_warn, $warn }
    }

    # Spoiler star in track box ACA-022
    if (($type =~ /BOT|GUI/) and ($dz < 25) and ($dy < 25) and ($dm > -1.0)){
    my $warn = sprintf("[%2d] Spoiler. %10d: " .
    "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
  title: Fid has spoiler
  type: aca_check
- context: |2-
            my $dm_string = $mag ne '---' ? sprintf("%4.1f", $mag - $star->{mag_aca}) : '?';

            # Fid within $dither + 25 arcsec of a star (yellow) and within 4 mags (red) ACA-024
            if ($type eq 'FID'
                    and $dz < $self->{dither_guide}->{ampl_p} + 25
                    and $dy < $self->{dither_guide}->{ampl_y} + 25
            and $dm > -5.0) {
            my $warn = sprintf("[%2d] Fid spoiler.  %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -4.0)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
            }

                # Spoiler star in track box ACA-022
                if (($type =~ /BOT|GUI/) and ($dz < 25) and ($dy < 25) and ($dm > -1.0)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            my $warn = sprintf("[%2d] Spoiler. %10d: " .
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
                }
            # Search box spoiler - star within search box + search error and within 1.0 mags ACA-023
            if ($type =~ /BOT|ACQ/ and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("[%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @orange_warn, $warn }
            else { push @yellow_warn, $warn }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1666
  id: 098
  line_number: 1666
  project: starcheck
  text: |-
    my $warn = sprintf("[%2d] Spoiler. %10d: " .
    "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
  title: Warning for guide/bot spoiler
  type: code
- context: |2
            # Fid within $dither + 25 arcsec of a star (yellow) and within 4 mags (red) ACA-024
            if ($type eq 'FID'
                    and $dz < $self->{dither_guide}->{ampl_p} + 25
                    and $dy < $self->{dither_guide}->{ampl_y} + 25
            and $dm > -5.0) {
            my $warn = sprintf("[%2d] Fid spoiler.  %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -4.0)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
            }

                # Spoiler star in track box ACA-022
                if (($type =~ /BOT|GUI/) and ($dz < 25) and ($dy < 25) and ($dm > -1.0)){
            my $warn = sprintf("[%2d] Spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            if ($dm > -0.2)  { push @warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            else { push @yellow_warn, $warn }
                }
            # Search box spoiler - star within search box + search error and within 1.0 mags ACA-023
            if ($type =~ /BOT|ACQ/ and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("[%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @orange_warn, $warn }
            else { push @yellow_warn, $warn }
            }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1668
  id: 099
  line_number: 1668
  project: starcheck
  severity: red
  text: |-
    if ($dm > -0.2)  { push @warn, $warn }
    else { push @yellow_warn, $warn }
    }
    # Search box spoiler - star within search box + search error and within 1.0 mags ACA-023
    if ($type =~ /BOT|ACQ/ and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
    my $warn = sprintf("[%2d] Search spoiler. %10d: " .
    "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
  title: Guide star has bright spoiler
  type: aca_check
- context: |2-
            if ($type eq 'FID'
                    and $dz < $self->{dither_guide}->{ampl_p} + 25
                    and $dy < $self->{dither_guide}->{ampl_y} + 25
            and $dm > -5.0) {
            my $warn = sprintf("[%2d] Fid spoiler.  %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -4.0)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
            }

                # Spoiler star in track box ACA-022
                if (($type =~ /BOT|GUI/) and ($dz < 25) and ($dy < 25) and ($dm > -1.0)){
            my $warn = sprintf("[%2d] Spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            else { push @yellow_warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                }
            # Search box spoiler - star within search box + search error and within 1.0 mags ACA-023
            if ($type =~ /BOT|ACQ/ and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("[%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @orange_warn, $warn }
            else { push @yellow_warn, $warn }
            }

            # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1669
  id: '100'
  line_number: 1669
  project: starcheck
  severity: red
  text: |-
    else { push @yellow_warn, $warn }
    }
    # Search box spoiler - star within search box + search error and within 1.0 mags ACA-023
    if ($type =~ /BOT|ACQ/ and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
    my $warn = sprintf("[%2d] Search spoiler. %10d: " .
    "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
  title: Guide star has spoiler
  type: aca_check
- context: |2-
            my $warn = sprintf("[%2d] Fid spoiler.  %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -4.0)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
            }

                # Spoiler star in track box ACA-022
                if (($type =~ /BOT|GUI/) and ($dz < 25) and ($dy < 25) and ($dm > -1.0)){
            my $warn = sprintf("[%2d] Spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
                }
            # Search box spoiler - star within search box + search error and within 1.0 mags ACA-023
            if ($type =~ /BOT|ACQ/ and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            my $warn = sprintf("[%2d] Search spoiler. %10d: " .
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @orange_warn, $warn }
            else { push @yellow_warn, $warn }
            }

            # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
            # and spoiler is located between star and readout ACA-026
            if ($type ne 'MON'
            and $dz < $col_sep_dist
            and $dm > $col_sep_mag
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1673
  id: '101'
  line_number: 1673
  project: starcheck
  text: |-
    my $warn = sprintf("[%2d] Search spoiler. %10d: " .
    "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
  title: Warning for acq/bot spoiler
  type: code
- context: |2-
            if ($dm > -4.0)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
            }

                # Spoiler star in track box ACA-022
                if (($type =~ /BOT|GUI/) and ($dz < 25) and ($dy < 25) and ($dm > -1.0)){
            my $warn = sprintf("[%2d] Spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
                }
            # Search box spoiler - star within search box + search error and within 1.0 mags ACA-023
            if ($type =~ /BOT|ACQ/ and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("[%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            if ($dm > -0.2)  { push @orange_warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            else { push @yellow_warn, $warn }
            }

            # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
            # and spoiler is located between star and readout ACA-026
            if ($type ne 'MON'
            and $dz < $col_sep_dist
            and $dm > $col_sep_mag
            and ($star->{yag}/$yag) > 1.0
            and abs($star->{yag}) < 2500) {
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1675
  id: '102'
  line_number: 1675
  project: starcheck
  severity: orange
  text: |-
    if ($dm > -0.2)  { push @orange_warn, $warn }
    else { push @yellow_warn, $warn }
    }

    # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
    # and spoiler is located between star and readout ACA-026
    if ($type ne 'MON'
    and $dz < $col_sep_dist
    and $dm > $col_sep_mag
    and ($star->{yag}/$yag) > 1.0
    and abs($star->{yag}) < 2500) {
    push @warn,sprintf("[%2d] Common Column. %10d " .
    "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
  title: Search spoiler
  type: aca_check
- context: |2-
            else { push @yellow_warn, $warn }
            }

                # Spoiler star in track box ACA-022
                if (($type =~ /BOT|GUI/) and ($dz < 25) and ($dy < 25) and ($dm > -1.0)){
            my $warn = sprintf("[%2d] Spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
                }
            # Search box spoiler - star within search box + search error and within 1.0 mags ACA-023
            if ($type =~ /BOT|ACQ/ and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("[%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @orange_warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            else { push @yellow_warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }

            # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
            # and spoiler is located between star and readout ACA-026
            if ($type ne 'MON'
            and $dz < $col_sep_dist
            and $dm > $col_sep_mag
            and ($star->{yag}/$yag) > 1.0
            and abs($star->{yag}) < 2500) {
            push @warn,sprintf("[%2d] Common Column. %10d " .
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1676
  id: '103'
  line_number: 1676
  project: starcheck
  severity: yellow
  text: |-
    else { push @yellow_warn, $warn }
    }

    # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
    # and spoiler is located between star and readout ACA-026
    if ($type ne 'MON'
    and $dz < $col_sep_dist
    and $dm > $col_sep_mag
    and ($star->{yag}/$yag) > 1.0
    and abs($star->{yag}) < 2500) {
    push @warn,sprintf("[%2d] Common Column. %10d " .
    "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
  title: Search spoiler
  type: aca_check
- context: |2-
            # Search box spoiler - star within search box + search error and within 1.0 mags ACA-023
            if ($type =~ /BOT|ACQ/ and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("[%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @orange_warn, $warn }
            else { push @yellow_warn, $warn }
            }

            # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
            # and spoiler is located between star and readout ACA-026
            if ($type ne 'MON'
            and $dz < $col_sep_dist
            and $dm > $col_sep_mag
            and ($star->{yag}/$yag) > 1.0
            and abs($star->{yag}) < 2500) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn,sprintf("[%2d] Common Column. %10d " .
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                       "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
            }
        }
        }



    # Find the smallest rectangle size that all acq stars fit in
        my $y_side = sprintf( "%.0f", $max_y - $min_y );
        my $z_side = sprintf( "%.0f", $max_z - $min_z );
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1686
  id: '104'
  line_number: 1686
  project: starcheck
  severity: red
  text: |-
    push @warn,sprintf("[%2d] Common Column. %10d " .
    "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
  title: Common column
  type: aca_check
- context: |2-
            and $dz < $col_sep_dist
            and $dm > $col_sep_mag
            and ($star->{yag}/$yag) > 1.0
            and abs($star->{yag}) < 2500) {
            push @warn,sprintf("[%2d] Common Column. %10d " .
                       "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
            }
        }
        }



    # Find the smallest rectangle size that all acq stars fit in
        my $y_side = sprintf( "%.0f", $max_y - $min_y );
        my $z_side = sprintf( "%.0f", $max_z - $min_z );
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @yellow_warn, "Guide stars fit in $y_side x $z_side square arc-second box\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        if $y_side < $min_y_side && $z_side < $min_z_side;

        # Collect warnings
        push @{$self->{warn}}, @warn;
        push @{$self->{orange_warn}}, @orange_warn;
        push @{$self->{yellow_warn}}, @yellow_warn;
    }


    #############################################################################################
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1697
  id: '105'
  line_number: 1697
  project: starcheck
  severity: yellow
  text: |-
    push @yellow_warn, "Guide stars fit in $y_side x $z_side square arc-second box\n"
    if $y_side < $min_y_side && $z_side < $min_z_side;
  title: Guide stars fit in too small box
  type: aca_check
- context: |2-
            push @warn,sprintf("[%2d] Common Column. %10d " .
                       "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
            }
        }
        }



    # Find the smallest rectangle size that all acq stars fit in
        my $y_side = sprintf( "%.0f", $max_y - $min_y );
        my $z_side = sprintf( "%.0f", $max_z - $min_z );
        push @yellow_warn, "Guide stars fit in $y_side x $z_side square arc-second box\n"
        if $y_side < $min_y_side && $z_side < $min_z_side;

        # Collect warnings
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, @warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{orange_warn}}, @orange_warn;
        push @{$self->{yellow_warn}}, @yellow_warn;
    }


    #############################################################################################
    sub check_monitor_commanding {
    #############################################################################################
        my $self = shift;
        my $backstop = shift;    # Reference to array of backstop commands
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1701
  id: '106'
  line_number: 1701
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, @warn;
  title: Assign red warnings to red warning array
  type: code
- context: |2-
                       "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
            }
        }
        }



    # Find the smallest rectangle size that all acq stars fit in
        my $y_side = sprintf( "%.0f", $max_y - $min_y );
        my $z_side = sprintf( "%.0f", $max_z - $min_z );
        push @yellow_warn, "Guide stars fit in $y_side x $z_side square arc-second box\n"
        if $y_side < $min_y_side && $z_side < $min_z_side;

        # Collect warnings
        push @{$self->{warn}}, @warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{orange_warn}}, @orange_warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{yellow_warn}}, @yellow_warn;
    }


    #############################################################################################
    sub check_monitor_commanding {
    #############################################################################################
        my $self = shift;
        my $backstop = shift;    # Reference to array of backstop commands
        my $or = shift;             # Reference to OR list hash
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1702
  id: '107'
  line_number: 1702
  project: starcheck
  severity: orange
  text: |-
    push @{$self->{orange_warn}}, @orange_warn;
  title: Assign orange warnings to orange warning array
  type: code
- context: |2-
            }
        }
        }



    # Find the smallest rectangle size that all acq stars fit in
        my $y_side = sprintf( "%.0f", $max_y - $min_y );
        my $z_side = sprintf( "%.0f", $max_z - $min_z );
        push @yellow_warn, "Guide stars fit in $y_side x $z_side square arc-second box\n"
        if $y_side < $min_y_side && $z_side < $min_z_side;

        # Collect warnings
        push @{$self->{warn}}, @warn;
        push @{$self->{orange_warn}}, @orange_warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{yellow_warn}}, @yellow_warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }


    #############################################################################################
    sub check_monitor_commanding {
    #############################################################################################
        my $self = shift;
        my $backstop = shift;    # Reference to array of backstop commands
        my $or = shift;             # Reference to OR list hash
        my $time_tol = 10;        # Commands must be within $time_tol of expectation
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1703
  id: '108'
  line_number: 1703
  project: starcheck
  severity: yellow
  text: |-
    push @{$self->{yellow_warn}}, @yellow_warn;
  title: Assign yellow warnings to yellow warning array
  type: code
- context: |2-


        # See if there are any monitor stars requested in the OR
        my $or_has_mon = ( defined $or->{HAS_MON} ) ? 1 : 0;

        my @mon_stars = grep { $c->{"TYPE$_"} eq 'MON' } (1..16);

        # if there are no requests in the OR and there are no MON stars, exit
        return unless $or_has_mon or scalar(@mon_stars);


        my $found_mon = scalar(@mon_stars);
        my $stealth_mon = 0;

        if (($found_mon) and (not $or_has_mon)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("MON not in OR, but in catalog. Position not checked.\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

        # Where is the requested OR?
        my $q_aca = Quat->new($self->{ra}, $self->{dec}, $self->{roll});
        my ($or_yang, $or_zang);
        if ($or_has_mon){
          ($or_yang, $or_zang) = Quat::radec2yagzag($or->{MON_RA}, $or->{MON_DEC}, $q_aca) if ($or_has_mon) ;
        }

        # Check all indices
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1747
  id: '109'
  line_number: 1747
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("MON not in OR, but in catalog. Position not checked.\n");
  title: MON window in catalog but not in OR
  type: aca_check
- context: |2-
            = map { $c->{"$_${idx}"} } qw(
                           TYPE
                           IMNUM
                           RESTRK
                           YANG
                           ZANG
                           DIMDTS
                           SIZE);
        my $y_sep = $or_yang*$r2a - $idx_hash{yang};
        my $z_sep = $or_zang*$r2a - $idx_hash{zang};
        $idx_hash{sep} = sqrt($y_sep**2 + $z_sep**2);

        # if this is a plain commanded MON
        if ($idx_hash{type} =~ /MON/ ){
          # if it doesn't match the requested location ACA-037
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;
        # if it isn't 8x8
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Size is not 8x8\n", $idx_hash{idx})
            unless $idx_hash{size} eq "8x8";

        # if it isn't in slot 7 ACA-036
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is in slot %2d and should be in slot 7.\n"
                         , $idx_hash{idx}, $idx_hash{imnum})
            if $idx_hash{imnum} != 7;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1783
  id: '110'
  line_number: 1783
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
    , $idx_hash{idx}, $idx_hash{sep})
    if $idx_hash{sep} > 2.5;
  title: Monitor window position more than 2.5 arcsecs from OR request
  type: aca_check
- context: |2
                           YANG
                           ZANG
                           DIMDTS
                           SIZE);
        my $y_sep = $or_yang*$r2a - $idx_hash{yang};
        my $z_sep = $or_zang*$r2a - $idx_hash{zang};
        $idx_hash{sep} = sqrt($y_sep**2 + $z_sep**2);

        # if this is a plain commanded MON
        if ($idx_hash{type} =~ /MON/ ){
          # if it doesn't match the requested location ACA-037
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;
        # if it isn't 8x8
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Size is not 8x8\n", $idx_hash{idx})
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            unless $idx_hash{size} eq "8x8";

        # if it isn't in slot 7 ACA-036
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is in slot %2d and should be in slot 7.\n"
                         , $idx_hash{idx}, $idx_hash{imnum})
            if $idx_hash{imnum} != 7;
        # ACA-038
        push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is set to Convert-to-Track\n", $idx_hash{idx})
          if $idx_hash{restrk} == 1;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1787
  id: '111'
  line_number: 1787
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Size is not 8x8\n", $idx_hash{idx})
    unless $idx_hash{size} eq "8x8";
  title: Monitor window is not 8x8
  type: aca_check
- context: |2-
        my $y_sep = $or_yang*$r2a - $idx_hash{yang};
        my $z_sep = $or_zang*$r2a - $idx_hash{zang};
        $idx_hash{sep} = sqrt($y_sep**2 + $z_sep**2);

        # if this is a plain commanded MON
        if ($idx_hash{type} =~ /MON/ ){
          # if it doesn't match the requested location ACA-037
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;
        # if it isn't 8x8
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Size is not 8x8\n", $idx_hash{idx})
            unless $idx_hash{size} eq "8x8";

        # if it isn't in slot 7 ACA-036
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is in slot %2d and should be in slot 7.\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                         , $idx_hash{idx}, $idx_hash{imnum})
            if $idx_hash{imnum} != 7;
        # ACA-038
        push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is set to Convert-to-Track\n", $idx_hash{idx})
          if $idx_hash{restrk} == 1;


        # Verify the the designated track star is indeed a guide star. ACA-039
          my $dts_slot = $idx_hash{dimdts};
          my $dts_type = "NULL";
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1791
  id: '112'
  line_number: 1791
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is in slot %2d and should be in slot 7.\n"
    , $idx_hash{idx}, $idx_hash{imnum})
    if $idx_hash{imnum} != 7;
  title: Monitor window not in slot 7
  type: aca_check
- context: |2-
        # if this is a plain commanded MON
        if ($idx_hash{type} =~ /MON/ ){
          # if it doesn't match the requested location ACA-037
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;
        # if it isn't 8x8
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Size is not 8x8\n", $idx_hash{idx})
            unless $idx_hash{size} eq "8x8";

        # if it isn't in slot 7 ACA-036
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is in slot %2d and should be in slot 7.\n"
                         , $idx_hash{idx}, $idx_hash{imnum})
            if $idx_hash{imnum} != 7;
        # ACA-038
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is set to Convert-to-Track\n", $idx_hash{idx})
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          if $idx_hash{restrk} == 1;


        # Verify the the designated track star is indeed a guide star. ACA-039
          my $dts_slot = $idx_hash{dimdts};
          my $dts_type = "NULL";
          foreach my $dts_index (1..16) {
            next unless $c->{"IMNUM$dts_index"} == $dts_slot and $c->{"TYPE$dts_index"} =~ /GUI|BOT/;
            $dts_type = $c->{"TYPE$dts_index"};
            last;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1795
  id: '113'
  line_number: 1795
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is set to Convert-to-Track\n", $idx_hash{idx})
    if $idx_hash{restrk} == 1;
  title: Monitor window is set to convert-to-track
  type: aca_check
- aca_cl_id: ACA-039
  context: |2-
                         , $idx_hash{idx}, $idx_hash{imnum})
            if $idx_hash{imnum} != 7;
        # ACA-038
        push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Monitor Window is set to Convert-to-Track\n", $idx_hash{idx})
          if $idx_hash{restrk} == 1;


        # Verify the the designated track star is indeed a guide star. ACA-039
          my $dts_slot = $idx_hash{dimdts};
          my $dts_type = "NULL";
          foreach my $dts_index (1..16) {
            next unless $c->{"IMNUM$dts_index"} == $dts_slot and $c->{"TYPE$dts_index"} =~ /GUI|BOT/;
            $dts_type = $c->{"TYPE$dts_index"};
            last;
          }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. DTS for [%2d] is set to slot %2d which does not contain a guide star.\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                         $idx_hash{idx}, $idx_hash{idx}, $dts_slot)
            if $dts_type =~ /NULL/;
          next IDX;
        }

        if (($idx_hash{type} =~ /GUI|BOT/) and ($idx_hash{size} eq '8x8') and ($idx_hash{imnum} == 7)){
          $stealth_mon = 1;
          push @{$self->{fyi}}, sprintf("[%2d] Appears to be MON used as GUI/BOT.\n",
                        $idx);
          # if it doesn't match the requested location
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1807
  id: '114'
  line_number: 1807
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. DTS for [%2d] is set to slot %2d which does not contain a guide star.\n",
    $idx_hash{idx}, $idx_hash{idx}, $dts_slot)
    if $dts_type =~ /NULL/;
  title: Monitor window DTS is set to slot without a guide star
  type: aca_check
- context: |2-
          my $dts_slot = $idx_hash{dimdts};
          my $dts_type = "NULL";
          foreach my $dts_index (1..16) {
            next unless $c->{"IMNUM$dts_index"} == $dts_slot and $c->{"TYPE$dts_index"} =~ /GUI|BOT/;
            $dts_type = $c->{"TYPE$dts_index"};
            last;
          }
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. DTS for [%2d] is set to slot %2d which does not contain a guide star.\n",
                         $idx_hash{idx}, $idx_hash{idx}, $dts_slot)
            if $dts_type =~ /NULL/;
          next IDX;
        }

        if (($idx_hash{type} =~ /GUI|BOT/) and ($idx_hash{size} eq '8x8') and ($idx_hash{imnum} == 7)){
          $stealth_mon = 1;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{fyi}}, sprintf("[%2d] Appears to be MON used as GUI/BOT.\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        $idx);
          # if it doesn't match the requested location
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Guide star as MON %6.2f arc-seconds off OR specification\n"
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;

          next IDX;
        }
        if ((not $found_mon) and ($idx_hash{sep} < 2.5)){
          # if there *should* be one there...
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1815
  id: '115'
  line_number: 1815
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, sprintf("[%2d] Appears to be MON used as GUI/BOT.\n",
    $idx);
  title: Appears to be MON used as GUI/BOT
  type: aca_check
- aca_cl_id: ACA-039
  context: |2-
            next unless $c->{"IMNUM$dts_index"} == $dts_slot and $c->{"TYPE$dts_index"} =~ /GUI|BOT/;
            $dts_type = $c->{"TYPE$dts_index"};
            last;
          }
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. DTS for [%2d] is set to slot %2d which does not contain a guide star.\n",
                         $idx_hash{idx}, $idx_hash{idx}, $dts_slot)
            if $dts_type =~ /NULL/;
          next IDX;
        }

        if (($idx_hash{type} =~ /GUI|BOT/) and ($idx_hash{size} eq '8x8') and ($idx_hash{imnum} == 7)){
          $stealth_mon = 1;
          push @{$self->{fyi}}, sprintf("[%2d] Appears to be MON used as GUI/BOT.\n",
                        $idx);
          # if it doesn't match the requested location
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Guide star as MON %6.2f arc-seconds off OR specification\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;

          next IDX;
        }
        if ((not $found_mon) and ($idx_hash{sep} < 2.5)){
          # if there *should* be one there...
          push @{$self->{fyi}}, sprintf("[%2d] Commanded at intended OR MON position; but not configured for MON\n",
                        $idx);
        }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1818
  id: '116'
  line_number: 1818
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Guide star as MON %6.2f arc-seconds off OR specification\n"
    , $idx_hash{idx}, $idx_hash{sep})
    if $idx_hash{sep} > 2.5;
  title: Guide star as MON more than 2.5 arcsecs from OR specification
  type: aca_check
- context: |2
        }

        if (($idx_hash{type} =~ /GUI|BOT/) and ($idx_hash{size} eq '8x8') and ($idx_hash{imnum} == 7)){
          $stealth_mon = 1;
          push @{$self->{fyi}}, sprintf("[%2d] Appears to be MON used as GUI/BOT.\n",
                        $idx);
          # if it doesn't match the requested location
          push @{$self->{warn}}, sprintf("[%2d] Monitor Commanding. Guide star as MON %6.2f arc-seconds off OR specification\n"
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;

          next IDX;
        }
        if ((not $found_mon) and ($idx_hash{sep} < 2.5)){
          # if there *should* be one there...
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{fyi}}, sprintf("[%2d] Commanded at intended OR MON position; but not configured for MON\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        $idx);
        }

          }


        # if I don't have a plain MON or a "stealth" MON, throw a warning
        push @{$self->{warn}}, sprintf("MON requested in OR, but none found in catalog\n")
          unless ( $found_mon or $stealth_mon );
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1826
  id: '117'
  line_number: 1826
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, sprintf("[%2d] Commanded at intended OR MON position; but not configured for MON\n",
  title: Guide star commanded at MON position but not configured for MON
  type: aca_check
- context: |2-
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;

          next IDX;
        }
        if ((not $found_mon) and ($idx_hash{sep} < 2.5)){
          # if there *should* be one there...
          push @{$self->{fyi}}, sprintf("[%2d] Commanded at intended OR MON position; but not configured for MON\n",
                        $idx);
        }

          }


        # if I don't have a plain MON or a "stealth" MON, throw a warning
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, sprintf("MON requested in OR, but none found in catalog\n")
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          unless ( $found_mon or $stealth_mon );

        # if we're using a guide star, we don't need the rest of the dither setup
        if ($stealth_mon and not $found_mon){
          return;
        }

        # Find the associated maneuver command for this obsid.  Need this to get the
        # exact time of the end of maneuver
        my $manv;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1834
  id: '118'
  line_number: 1834
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("MON requested in OR, but none found in catalog\n")
    unless ( $found_mon or $stealth_mon );
  title: Monitor window in OR is missing from schedule
  type: aca_check
- context: |2-


        # if I don't have a plain MON or a "stealth" MON, throw a warning
        push @{$self->{warn}}, sprintf("MON requested in OR, but none found in catalog\n")
          unless ( $found_mon or $stealth_mon );

        # if we're using a guide star, we don't need the rest of the dither setup
        if ($stealth_mon and not $found_mon){
          return;
        }

        # Find the associated maneuver command for this obsid.  Need this to get the
        # exact time of the end of maneuver
        my $manv;
        unless ($manv = find_command($self, "MP_TARGQUAT", -1)) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("Cannot find maneuver for checking monitor commanding\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          return;
        }


        # Now check in backstop commands for :
        #  Dither is disabled (AODSDITH) 1 min prior to the end of the maneuver (EOM)
        #    to the target attitude.
        #  The OFP Aspect Camera Process is restarted (AOACRSET) 3 minutes after EOM.
        #  Dither is enabled (AOENDITH) 5 min after EOM
        # ACA-040
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1846
  id: '119'
  line_number: 1846
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("Cannot find maneuver for checking monitor commanding\n");
  title: Cannot find maneuver for monitor commanding checks
  type: process
- context: |2-
        my %param = Ska::Parse_CM_File::parse_params($bs->{params});
        next unless ($param{TLMSID} =~ /^AO/);
        foreach $cmd (keys %dt) {
            if ($cmd =~ /$param{TLMSID}/){
            if ( abs($bs->{time} - ($t_manv+$dt{$cmd})) < $time_tol){
                $cnt{$cmd}++;
            }
            }
        }
        }

        # Add warning messages unless exactly one of each command was found at the right time
        foreach $cmd (qw (AODSDITH AOACRSET AOENDITH)) {
        next if ($cnt{$cmd} == 1);
        $cnt{$cmd} = 'no' if ($cnt{$cmd} == 0);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, "Found $cnt{$cmd} $cmd commands near " . time2date($t_manv+$dt{$cmd}) . "\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

        # If the number of warnings has not changed during this routine, it passed all checks
        if (scalar(@{$self->{warn}}) == $n_warn){
            push @{$self->{fyi}},
                sprintf("Monitor window special commanding meets requirements\n");
        }
    }

    #############################################################################################
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1877
  id: '120'
  line_number: 1877
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "Found $cnt{$cmd} $cmd commands near " . time2date($t_manv+$dt{$cmd}) . "\n";
  title: Found unexpected dither commands
  type: aca_check
- aca_cl_id: ACA-040
  context: |2-
                $cnt{$cmd}++;
            }
            }
        }
        }

        # Add warning messages unless exactly one of each command was found at the right time
        foreach $cmd (qw (AODSDITH AOACRSET AOENDITH)) {
        next if ($cnt{$cmd} == 1);
        $cnt{$cmd} = 'no' if ($cnt{$cmd} == 0);
        push @{$self->{warn}}, "Found $cnt{$cmd} $cmd commands near " . time2date($t_manv+$dt{$cmd}) . "\n";
        }

        # If the number of warnings has not changed during this routine, it passed all checks
        if (scalar(@{$self->{warn}}) == $n_warn){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf("Monitor window special commanding meets requirements\n");
        }
    }

    #############################################################################################
    sub check_fids {
    #############################################################################################
        my $self = shift;
        my $c = shift;        # Star catalog command
        my $warn = shift;        # Array ref to warnings for this obsid
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1882
  id: '121'
  line_number: 1882
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}},
    sprintf("Monitor window special commanding meets requirements\n");
  title: Monitor window special commanding meets requirements
  type: aca_check
- context: |2-
        push @{$self->{warn}}, "Found $cnt{$cmd} $cmd commands near " . time2date($t_manv+$dt{$cmd}) . "\n";
        }

        # If the number of warnings has not changed during this routine, it passed all checks
        if (scalar(@{$self->{warn}}) == $n_warn){
            push @{$self->{fyi}},
                sprintf("Monitor window special commanding meets requirements\n");
        }
    }

    #############################################################################################
    sub check_fids {
    #############################################################################################
        my $self = shift;
        my $c = shift;        # Star catalog command
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        my $warn = shift;        # Array ref to warnings for this obsid
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX

        my (@fid_ok, @fidsel_ok);
        my ($i, $i_fid);

        # If no star cat fids and no commanded fids, then return
        my $fid_number = @{$self->{fid}};
        return if ($fid_number == 0 && @{$self->{fidsel}} == 0);

        # Make sure we have SI and SIM_OFFSET_Z to be able to calculate fid yang and zang
        unless (defined $self->{SI}) {
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1892
  id: '122'
  line_number: 1892
  project: starcheck
  text: "my $warn = shift;\t\t# Array ref to warnings for this obsid"
  title: Make warning array ref
  type: code
- context: |-
    sub check_fids {
    #############################################################################################
        my $self = shift;
        my $c = shift;        # Star catalog command
        my $warn = shift;        # Array ref to warnings for this obsid

        my (@fid_ok, @fidsel_ok);
        my ($i, $i_fid);

        # If no star cat fids and no commanded fids, then return
        my $fid_number = @{$self->{fid}};
        return if ($fid_number == 0 && @{$self->{fidsel}} == 0);

        # Make sure we have SI and SIM_OFFSET_Z to be able to calculate fid yang and zang
        unless (defined $self->{SI}) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$warn}, "Unable to check fids because SI undefined\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }
        unless (defined $self->{SIM_OFFSET_Z}){
        push @{$warn}, "Unable to check fids because SIM_OFFSET_Z undefined\n";
        return;
        }

        @fid_ok = map { 0 } @{$self->{fid}};

        # Calculate yang and zang for each commanded fid, then cross-correlate with
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1903
  id: '123'
  line_number: 1903
  project: starcheck
  severity: red
  text: |-
    push @{$warn}, "Unable to check fids because SI undefined\n";
  title: Unable to check fids because SI not defined
  type: process
- context: |2-
        my $warn = shift;        # Array ref to warnings for this obsid

        my (@fid_ok, @fidsel_ok);
        my ($i, $i_fid);

        # If no star cat fids and no commanded fids, then return
        my $fid_number = @{$self->{fid}};
        return if ($fid_number == 0 && @{$self->{fidsel}} == 0);

        # Make sure we have SI and SIM_OFFSET_Z to be able to calculate fid yang and zang
        unless (defined $self->{SI}) {
        push @{$warn}, "Unable to check fids because SI undefined\n";
        return;
        }
        unless (defined $self->{SIM_OFFSET_Z}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$warn}, "Unable to check fids because SIM_OFFSET_Z undefined\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }

        @fid_ok = map { 0 } @{$self->{fid}};

        # Calculate yang and zang for each commanded fid, then cross-correlate with
        # all commanded fids.
        foreach my $fid (@{$self->{fidsel}}) {

        my ($yag, $zag, $error) = calc_fid_ang($fid, $self->{SI}, $self->{SIM_OFFSET_Z}, $self->{obsid});
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1907
  id: '124'
  line_number: 1907
  project: starcheck
  severity: red
  text: |-
    push @{$warn}, "Unable to check fids because SIM_OFFSET_Z undefined\n";
  title: Unable to check fids because SIM_OFFSET_Z not defined
  type: process
- context: |2-
        }
        unless (defined $self->{SIM_OFFSET_Z}){
        push @{$warn}, "Unable to check fids because SIM_OFFSET_Z undefined\n";
        return;
        }

        @fid_ok = map { 0 } @{$self->{fid}};

        # Calculate yang and zang for each commanded fid, then cross-correlate with
        # all commanded fids.
        foreach my $fid (@{$self->{fidsel}}) {

        my ($yag, $zag, $error) = calc_fid_ang($fid, $self->{SI}, $self->{SIM_OFFSET_Z}, $self->{obsid});

        if ($error) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$warn}, "$error\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            next;
        }
        my $fidsel_ok = 0;

        # Cross-correlate with all star cat fids
        for  $i_fid (0 .. $#fid_ok) {
            $i = $self->{fid}[$i_fid]; # Index into star catalog entries

            # Check if starcat fid matches fidsel fid position to within 10 arcsec
            if (abs($yag - $c->{"YANG$i"}) < 10.0 && abs($zag - $c->{"ZANG$i"}) < 10.0) {
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1920
  id: '125'
  line_number: 1920
  project: starcheck
  severity: red
  text: |-
    push @{$warn}, "$error\n";
  title: Error calculating fid position
  type: aca_check
- aca_cl_id: ACA-035
  context: |2
        my $fidsel_ok = 0;

        # Cross-correlate with all star cat fids
        for  $i_fid (0 .. $#fid_ok) {
            $i = $self->{fid}[$i_fid]; # Index into star catalog entries

            # Check if starcat fid matches fidsel fid position to within 10 arcsec
            if (abs($yag - $c->{"YANG$i"}) < 10.0 && abs($zag - $c->{"ZANG$i"}) < 10.0) {
            $fidsel_ok = 1;
            $fid_ok[$i_fid] = 1;
            last;
            }
        }

            # ACA-034
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$warn}, sprintf("Fid $self->{SI} FIDSEL $fid not found within 10 arcsec of (%.1f, %.1f)\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                       $yag, $zag)
            unless ($fidsel_ok);
        }
        # ACA-035
        for $i_fid (0 .. $#fid_ok) {
        push @{$warn}, "Fid with IDX=\[$self->{fid}[$i_fid]\] is in star catalog but is not turned on via FIDSEL\n"
            unless ($fid_ok[$i_fid]);
        }
    }
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1938
  id: '126'
  line_number: 1938
  project: starcheck
  severity: red
  text: |-
    push @{$warn}, sprintf("Fid $self->{SI} FIDSEL $fid not found within 10 arcsec of (%.1f, %.1f)\n",
    $yag, $zag)
    unless ($fidsel_ok);
  title: Fid light not turned on with fidsel
  type: aca_check
- aca_cl_id: ACA-034
  context: |2-
            # Check if starcat fid matches fidsel fid position to within 10 arcsec
            if (abs($yag - $c->{"YANG$i"}) < 10.0 && abs($zag - $c->{"ZANG$i"}) < 10.0) {
            $fidsel_ok = 1;
            $fid_ok[$i_fid] = 1;
            last;
            }
        }

            # ACA-034
        push @{$warn}, sprintf("Fid $self->{SI} FIDSEL $fid not found within 10 arcsec of (%.1f, %.1f)\n",
                       $yag, $zag)
            unless ($fidsel_ok);
        }
        # ACA-035
        for $i_fid (0 .. $#fid_ok) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$warn}, "Fid with IDX=\[$self->{fid}[$i_fid]\] is in star catalog but is not turned on via FIDSEL\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            unless ($fid_ok[$i_fid]);
        }
    }

    ##############################################################################
    sub calc_fid_ang {
    #   From OFLS SDS:
    #   Y_ang = fid position angle measured about the ACA z-axis as shown in
    #           Fig. 4.3-5.  In that figure, Y_ang corresponds to the ACA
    #           y angle, or "yag".
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L1944
  id: '127'
  line_number: 1944
  project: starcheck
  severity: red
  text: |-
    push @{$warn}, "Fid with IDX=\[$self->{fid}[$i_fid]\] is in star catalog but is not turned on via FIDSEL\n"
    unless ($fid_ok[$i_fid]);
  title: Mismatch between star catalog fid and fidsel position
  type: aca_check
- context: |2-
            $c->{"GS_PASS$j"} = defined $f[7] ? ($f[7] =~ /\*+/ ? length $f[7] : $f[7]) : ' ';
            $c->{"GS_PASS$j"} =~ s/[agf]1//g;
        }
        else {
            # if the position of the line item in the guide summary doesn't match
            # set the variable once (so we don't have a warning for all the remaining lines
            # if there is one missing...)
            $bad_idx_match = 1;
        }

        }

        # if the position of an item didn't match, warn that the guide summary does not match
        # the backstop commanded catalog
        if ($bad_idx_match == 1){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, "Guide summary does not match commanded catalog.\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
    }

    #############################################################################################
    sub get_agasc_stars {
    #############################################################################################

        my $self = shift;
        my $agasc_file = shift;
        my $c;
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2373
  id: '128'
  line_number: 2373
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "Guide summary does not match commanded catalog.\n";
  title: Guide summary does not match commanded catalog by idx
  type: aca_check
- aca_cl_id: ACA-032
  context: |2-
        my $self = shift;
        my $agasc_file = shift;
        my $c;
        return unless ($c = find_command($self, "MP_TARGQUAT"));

        # Use Python agasc to fetch the stars into a hash
        $self->{agasc_hash} = _get_agasc_stars($self->{ra},
                                               $self->{dec},
                                               $self->{roll},
                                               1.3,
                                               $self->{date},
                                               $agasc_file);

        foreach my $star (values %{$self->{agasc_hash}}) {
        if ($star->{'mag_aca'} < -10 or $star->{'mag_aca_err'} < -10) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, sprintf(
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    "Star with bad mag %.1f or magerr %.1f at (yag,zag)=%.1f,%.1f\n",
                    $star->{'mag_aca'}, $star->{'mag_aca_err'}, $star->{'yag'}, $star->{'zag'});
        }
        }

    }

    #############################################################################################
    sub identify_stars {
    #############################################################################################
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2396
  id: '129'
  line_number: 2396
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf(
    "Star with bad mag %.1f or magerr %.1f at (yag,zag)=%.1f,%.1f\n",
    $star->{'mag_aca'}, $star->{'mag_aca_err'}, $star->{'yag'}, $star->{'zag'});
  title: Star has bad mag_aca or bad mag_aca_err
  type: aca_check
- aca_cl_id: ACA-042
  context: |2
        next if ($type eq 'NUL');
        next if ($type eq 'FID');

        my $yag = $c->{"YANG$i"};
        my $zag = $c->{"ZANG$i"};
        my $gs_id = $c->{"GS_ID$i"};
        my $gs_ra = $c->{"GS_RA$i"};
        my $gs_dec = $c->{"GS_DEC$i"};

        # strip * off gs_id if present
        $gs_id =~ s/^\*/^/;

        # if the star is defined in the guide summary but doesn't seem to be present in the
        # agasc hash for this ra and dec, throw a warning
        unless ((defined $self->{agasc_hash}{$gs_id}) or ($gs_id eq '---')){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                  sprintf("[%2d] Star $gs_id is not in retrieved AGASC region by RA and DEC! \n", $i);
        }


        # if the star is defined in the agasc hash, copy
        # the information from the agasc to the catalog

        if (defined $self->{agasc_hash}{$gs_id}){
            my $star = $self->{agasc_hash}{$gs_id};
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2432
  id: '130'
  line_number: 2432
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("[%2d] Star $gs_id is not in retrieved AGASC region by RA and DEC! \n", $i);
  title: Star with AGASC ID not found in the retrieved agasc code
  type: aca_check
- context: |2
            push @{$self->{warn}},
                  sprintf("[%2d] Star $gs_id is not in retrieved AGASC region by RA and DEC! \n", $i);
        }


        # if the star is defined in the agasc hash, copy
        # the information from the agasc to the catalog

        if (defined $self->{agasc_hash}{$gs_id}){
            my $star = $self->{agasc_hash}{$gs_id};

                # Confirm that the agasc magnitude matches the guide star summary magnitude
                my $gs_mag = $c->{"GS_MAG$i"};
                my $dmag = abs($star->{mag_aca} - $gs_mag);
                if ($dmag > 0.01){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        sprintf("[%d] Guide sum mag diff from agasc mag %9.5f\n", $i, $dmag);
                }
            # let's still confirm that the backstop yag zag is what we expect
            # from agasc and ra,dec,roll ACA-043

            if (abs($star->{yag} - $yag) > ($ID_DIST_LIMIT)
            || abs($star->{zag} - $zag) > ($ID_DIST_LIMIT)){
            my $dyag = abs($star->{yag} - $yag);
            my $dzag = abs($star->{zag} - $zag);
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2447
  id: '131'
  line_number: 2447
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("[%d] Guide sum mag diff from agasc mag %9.5f\n", $i, $dmag);
  title: Guide summary magnitude differs from AGASC by more than 0.01 mags
  type: aca_check
- context: |2
                my $dmag = abs($star->{mag_aca} - $gs_mag);
                if ($dmag > 0.01){
                    push @{$self->{warn}},
                        sprintf("[%d] Guide sum mag diff from agasc mag %9.5f\n", $i, $dmag);
                }
            # let's still confirm that the backstop yag zag is what we expect
            # from agasc and ra,dec,roll ACA-043

            if (abs($star->{yag} - $yag) > ($ID_DIST_LIMIT)
            || abs($star->{zag} - $zag) > ($ID_DIST_LIMIT)){
            my $dyag = abs($star->{yag} - $yag);
            my $dzag = abs($star->{zag} - $zag);

            if (abs($star->{yag} - $yag) > (2 * $ID_DIST_LIMIT) ||
                abs($star->{zag} - $zag) > (2 * $ID_DIST_LIMIT)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                     sprintf("[%2d] Backstop YAG,ZAG differs from AGASC by > 3 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
            }
            else{
                push @{$self->{yellow_warn}},
                     sprintf("[%2d] Backstop YAG,ZAG differs from AGASC by > 1.5 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
            }
            }

            # should I put this in an else statement, or let it stand alone?
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2460
  id: '132'
  line_number: 2460
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("[%2d] Backstop YAG,ZAG differs from AGASC by > 3 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
  title: Commanded position for star differs from AGASC by > 3.0 arcsec
  type: aca_check
- aca_cl_id: ACA-042
  context: |2-
                }
            # let's still confirm that the backstop yag zag is what we expect
            # from agasc and ra,dec,roll ACA-043

            if (abs($star->{yag} - $yag) > ($ID_DIST_LIMIT)
            || abs($star->{zag} - $zag) > ($ID_DIST_LIMIT)){
            my $dyag = abs($star->{yag} - $yag);
            my $dzag = abs($star->{zag} - $zag);

            if (abs($star->{yag} - $yag) > (2 * $ID_DIST_LIMIT) ||
                abs($star->{zag} - $zag) > (2 * $ID_DIST_LIMIT)){
                push @{$self->{warn}},
                     sprintf("[%2d] Backstop YAG,ZAG differs from AGASC by > 3 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
            }
            else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{yellow_warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                     sprintf("[%2d] Backstop YAG,ZAG differs from AGASC by > 1.5 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
            }
            }

            # should I put this in an else statement, or let it stand alone?

            $c->{"GS_IDENTIFIED$i"} = 1;
            $c->{"GS_BV$i"} = $star->{bv};
            $c->{"GS_MAGERR$i"} = $star->{mag_aca_err};
            $c->{"GS_POSERR$i"} = $star->{poserr};
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2464
  id: '133'
  line_number: 2464
  project: starcheck
  severity: yellow
  text: |-
    push @{$self->{yellow_warn}},
    sprintf("[%2d] Backstop YAG,ZAG differs from AGASC by > 1.5 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
  title: Commanded position for star differs from AGASC by > 1.5 arcsec
  type: aca_check
- context: |2-
                push @mags, $mag;
        }
        }
        return _guide_count(\@mags, $self->{ccd_temp});
    }


    ###################################################################################
    sub set_ccd_temps{
    ###################################################################################
        my $self = shift;
        my $obsid_temps = shift;
        # if no temperature data, just return
        if ((not defined $obsid_temps->{$self->{obsid}})
            or (not defined $obsid_temps->{$self->{obsid}}->{ccd_temp})){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "No CCD temperature prediction for obsid\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, sprintf("Using %s (planning limit) for t_ccd for mag limits\n",
                                           $config{ccd_temp_red_limit});
            $self->{ccd_temp} = $config{ccd_temp_red_limit};
            $self->{ccd_temp_acq} = $config{ccd_temp_red_limit};
            return;
        }
        # set the temperature to the value for the current obsid
        $self->{ccd_temp} = $obsid_temps->{$self->{obsid}}->{ccd_temp};
        $self->{ccd_temp_acq} = $obsid_temps->{$self->{obsid}}->{ccd_temp_acq};
        $self->{n100_warm_frac} = $obsid_temps->{$self->{obsid}}->{n100_warm_frac};
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2641
  id: '134'
  line_number: 2641
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, "No CCD temperature prediction for obsid\n";
  title: Could not determine CCD temperature
  type: process
- context: |2-
        }
        }
        return _guide_count(\@mags, $self->{ccd_temp});
    }


    ###################################################################################
    sub set_ccd_temps{
    ###################################################################################
        my $self = shift;
        my $obsid_temps = shift;
        # if no temperature data, just return
        if ((not defined $obsid_temps->{$self->{obsid}})
            or (not defined $obsid_temps->{$self->{obsid}}->{ccd_temp})){
            push @{$self->{warn}}, "No CCD temperature prediction for obsid\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, sprintf("Using %s (planning limit) for t_ccd for mag limits\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                           $config{ccd_temp_red_limit});
            $self->{ccd_temp} = $config{ccd_temp_red_limit};
            $self->{ccd_temp_acq} = $config{ccd_temp_red_limit};
            return;
        }
        # set the temperature to the value for the current obsid
        $self->{ccd_temp} = $obsid_temps->{$self->{obsid}}->{ccd_temp};
        $self->{ccd_temp_acq} = $obsid_temps->{$self->{obsid}}->{ccd_temp_acq};
        $self->{n100_warm_frac} = $obsid_temps->{$self->{obsid}}->{n100_warm_frac};
        # Add info statement for limit violations
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2642
  id: '135'
  line_number: 2642
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("Using %s (planning limit) for t_ccd for mag limits\n",
    $config{ccd_temp_red_limit});
  title: Could not determine CCD temperature; using planning limit
  type: process
- context: |2-
        if ((not defined $obsid_temps->{$self->{obsid}})
            or (not defined $obsid_temps->{$self->{obsid}}->{ccd_temp})){
            push @{$self->{warn}}, "No CCD temperature prediction for obsid\n";
            push @{$self->{warn}}, sprintf("Using %s (planning limit) for t_ccd for mag limits\n",
                                           $config{ccd_temp_red_limit});
            $self->{ccd_temp} = $config{ccd_temp_red_limit};
            $self->{ccd_temp_acq} = $config{ccd_temp_red_limit};
            return;
        }
        # set the temperature to the value for the current obsid
        $self->{ccd_temp} = $obsid_temps->{$self->{obsid}}->{ccd_temp};
        $self->{ccd_temp_acq} = $obsid_temps->{$self->{obsid}}->{ccd_temp_acq};
        $self->{n100_warm_frac} = $obsid_temps->{$self->{obsid}}->{n100_warm_frac};
        # Add info statement for limit violations
        if ($self->{ccd_temp} > $config{ccd_temp_red_limit}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}}, sprintf("CCD temperature exceeds %.1f C\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                           $config{ccd_temp_red_limit});
        }
        # Add info for having a penalty temperature too
        if ($self->{ccd_temp} > $config{ccd_temp_yellow_limit}){
            push @{$self->{fyi}}, sprintf("Effective guide temperature %.1f C\n",
                                          get_effective_t_ccd($self->{ccd_temp}));

        }
        if ($self->{ccd_temp_acq} > $config{ccd_temp_yellow_limit}){
            push @{$self->{fyi}}, sprintf("Effective acq temperature %.1f C\n",
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2654
  id: '136'
  line_number: 2654
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, sprintf("CCD temperature exceeds %.1f C\n",
    $config{ccd_temp_red_limit});
  title: CCD temperature over planning limit
  type: aca_check
- context: |2-
            $self->{ccd_temp} = $config{ccd_temp_red_limit};
            $self->{ccd_temp_acq} = $config{ccd_temp_red_limit};
            return;
        }
        # set the temperature to the value for the current obsid
        $self->{ccd_temp} = $obsid_temps->{$self->{obsid}}->{ccd_temp};
        $self->{ccd_temp_acq} = $obsid_temps->{$self->{obsid}}->{ccd_temp_acq};
        $self->{n100_warm_frac} = $obsid_temps->{$self->{obsid}}->{n100_warm_frac};
        # Add info statement for limit violations
        if ($self->{ccd_temp} > $config{ccd_temp_red_limit}){
            push @{$self->{fyi}}, sprintf("CCD temperature exceeds %.1f C\n",
                                           $config{ccd_temp_red_limit});
        }
        # Add info for having a penalty temperature too
        if ($self->{ccd_temp} > $config{ccd_temp_yellow_limit}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}}, sprintf("Effective guide temperature %.1f C\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                          get_effective_t_ccd($self->{ccd_temp}));

        }
        if ($self->{ccd_temp_acq} > $config{ccd_temp_yellow_limit}){
            push @{$self->{fyi}}, sprintf("Effective acq temperature %.1f C\n",
                                          get_effective_t_ccd($self->{ccd_temp_acq}));

        }
        # Clip the acq ccd temperature to the calibrated range of the grid acq probability model
        # and add a yellow warning to let the user know this has happened.
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2659
  id: '137'
  line_number: 2659
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, sprintf("Effective guide temperature %.1f C\n",
    get_effective_t_ccd($self->{ccd_temp}));
  title: Guide above penalty limit with effective temperature
  type: aca_check
- context: |2-
        $self->{ccd_temp} = $obsid_temps->{$self->{obsid}}->{ccd_temp};
        $self->{ccd_temp_acq} = $obsid_temps->{$self->{obsid}}->{ccd_temp_acq};
        $self->{n100_warm_frac} = $obsid_temps->{$self->{obsid}}->{n100_warm_frac};
        # Add info statement for limit violations
        if ($self->{ccd_temp} > $config{ccd_temp_red_limit}){
            push @{$self->{fyi}}, sprintf("CCD temperature exceeds %.1f C\n",
                                           $config{ccd_temp_red_limit});
        }
        # Add info for having a penalty temperature too
        if ($self->{ccd_temp} > $config{ccd_temp_yellow_limit}){
            push @{$self->{fyi}}, sprintf("Effective guide temperature %.1f C\n",
                                          get_effective_t_ccd($self->{ccd_temp}));

        }
        if ($self->{ccd_temp_acq} > $config{ccd_temp_yellow_limit}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}}, sprintf("Effective acq temperature %.1f C\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                          get_effective_t_ccd($self->{ccd_temp_acq}));

        }
        # Clip the acq ccd temperature to the calibrated range of the grid acq probability model
        # and add a yellow warning to let the user know this has happened.
        if (($self->{ccd_temp_acq} > -1.0) or ($self->{ccd_temp_acq} < -16.0)){
            push @{$self->{yellow_warn}}, sprintf(
                "acq t_ccd %.1f outside range -16.0 to -1.0. Clipped.\n",
                $self->{ccd_temp_acq});
            $self->{ccd_temp_acq} = $self->{ccd_temp_acq}  >  -1.0  ? -1.0
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2664
  id: '138'
  line_number: 2664
  project: starcheck
  severity: info
  text: |-
    push @{$self->{fyi}}, sprintf("Effective acq temperature %.1f C\n",
    get_effective_t_ccd($self->{ccd_temp_acq}));
  title: Acquisition above penalty limit with effective temperature
  type: aca_check
- context: |2
        }
        # Add info for having a penalty temperature too
        if ($self->{ccd_temp} > $config{ccd_temp_yellow_limit}){
            push @{$self->{fyi}}, sprintf("Effective guide temperature %.1f C\n",
                                          get_effective_t_ccd($self->{ccd_temp}));

        }
        if ($self->{ccd_temp_acq} > $config{ccd_temp_yellow_limit}){
            push @{$self->{fyi}}, sprintf("Effective acq temperature %.1f C\n",
                                          get_effective_t_ccd($self->{ccd_temp_acq}));

        }
        # Clip the acq ccd temperature to the calibrated range of the grid acq probability model
        # and add a yellow warning to let the user know this has happened.
        if (($self->{ccd_temp_acq} > -1.0) or ($self->{ccd_temp_acq} < -16.0)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{yellow_warn}}, sprintf(
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                "acq t_ccd %.1f outside range -16.0 to -1.0. Clipped.\n",
                $self->{ccd_temp_acq});
            $self->{ccd_temp_acq} = $self->{ccd_temp_acq}  >  -1.0  ? -1.0
                                  : $self->{ccd_temp_acq}  < -16.0  ? -16.0
                                  : $self->{ccd_temp_acq};
        }
    }

    use Inline Python => q{
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2671
  id: '139'
  line_number: 2671
  project: starcheck
  severity: yellow
  text: |-
    push @{$self->{yellow_warn}}, sprintf(
    "acq t_ccd %.1f outside range -16.0 to -1.0. Clipped.\n",
    $self->{ccd_temp_acq});
  title: CCD temperature outside of range for acq prob calc
  type: aca_check
- context: |2-
        my $offset = $is_OR ? $self->{SIM_OFFSET_Z} : 0;

        my @acq_ids;
        my @acq_indexes;
        my @gui_ids;
        my @fid_ids;
        my @halfwidths;
        # Loop over the star catalog and assign the acq stars, guide stars, and fids to arrays.
      IDX:
        foreach my $i (1..16) {
            (my $sid  = $cat_cmd->{"GS_ID$i"}) =~ s/[\s\*]//g;
            # If there is no star there is nothing for proseco probs to do so skip it.
            # But warn if it was a thing that should have had an id (BOT/ACQ/GUI).
            if ($sid eq '---'){
                if ($cat_cmd->{"TYPE$i"} =~ /BOT|ACQ|GUI/){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    push @{$self->{warn}}, sprintf(
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        "[%2d] Could not calculate acq prob for star with no id.", $i);
                }
                next IDX;
            }
            $sid = int($sid);
            # While assigning ACQ stars into a list, warn if outside the 60 to 180 range used by proseco
            # and the grid acq model.
            if ($cat_cmd->{"TYPE$i"} =~ /BOT|ACQ/){
                push @acq_ids, $sid;;
                my $hw = $cat_cmd->{"HALFW$i"};
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2771
  id: '140'
  line_number: 2771
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf(
    "[%2d] Could not calculate acq prob for star with no id.", $i);
  title: Could not calculate acq star probability
  type: aca_check
- context: |2-
            # But warn if it was a thing that should have had an id (BOT/ACQ/GUI).
            if ($sid eq '---'){
                if ($cat_cmd->{"TYPE$i"} =~ /BOT|ACQ|GUI/){
                    push @{$self->{warn}}, sprintf(
                        "[%2d] Could not calculate acq prob for star with no id.", $i);
                }
                next IDX;
            }
            $sid = int($sid);
            # While assigning ACQ stars into a list, warn if outside the 60 to 180 range used by proseco
            # and the grid acq model.
            if ($cat_cmd->{"TYPE$i"} =~ /BOT|ACQ/){
                push @acq_ids, $sid;;
                my $hw = $cat_cmd->{"HALFW$i"};
                if (($hw > 180) or ($hw < 60)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    push @{$self->{orange_warn}}, sprintf(
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        "[%2d] Halfwidth %d outside range 60 to 180. Will be clipped in proseco probs.\n",
                        $i, $hw);
                }
                push @halfwidths, $hw;
                push @acq_indexes, $i;
            }
            if ($cat_cmd->{"TYPE$i"} =~ /BOT|GUI/){
                push @gui_ids, $sid;
            }
            if ($cat_cmd->{"TYPE$i"} =~ /FID/){
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2783
  id: '141'
  line_number: 2783
  project: starcheck
  severity: orange
  text: |-
    push @{$self->{orange_warn}}, sprintf(
    "[%2d] Halfwidth %d outside range 60 to 180. Will be clipped in proseco probs.\n",
    $i, $hw);
  title: Acq star halfwidth > 180 or < 60.  Will be clipped to calc P2
  type: aca_check
- context: |2+

        # Set the P2 requirement to be 2.0 for ORs and 3.0 for ERs.  The higher limit for ER
        # reflects a desire to minimize integrated mission risk for observations where the
        # attitude can be selected freely.  Yellow warning for marginal catalog is set to a
        # factor of 10 less risk than the red limit P2 probability for OR / ER respectively).
        my $P2_red = $self->{obsid} < $ER_MIN_OBSID ? 2.0 : 3.0;
        my $P2_yellow = $P2_red + 1.0;

        # Create a structure that gets used for report generation only.
        $self->{figure_of_merit} = {expected => substr($expected, 0, 4),
                                    P2 => $P2,
                                    cum_prob_bad => ($P2 < $P2_red)};

        # Do the actual checks
        if ($P2 < $P2_red){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                 "-log10 probability of 2 or fewer stars < $P2_red\n";
        }
        elsif ($P2 < $P2_yellow){
            push @{$self->{yellow_warn}},
                 "-log10 probability of 2 or fewer stars < $P2_yellow\n";
        }

    }

  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2872
  id: '142'
  line_number: 2872
  project: starcheck
  severity: red
  text: |-
    push @{$self->{warn}},
    "-log10 probability of 2 or fewer stars < $P2_red\n";
  title: P2 < red limit
  type: aca_check
- context: |2-
        # factor of 10 less risk than the red limit P2 probability for OR / ER respectively).
        my $P2_red = $self->{obsid} < $ER_MIN_OBSID ? 2.0 : 3.0;
        my $P2_yellow = $P2_red + 1.0;

        # Create a structure that gets used for report generation only.
        $self->{figure_of_merit} = {expected => substr($expected, 0, 4),
                                    P2 => $P2,
                                    cum_prob_bad => ($P2 < $P2_red)};

        # Do the actual checks
        if ($P2 < $P2_red){
            push @{$self->{warn}},
                 "-log10 probability of 2 or fewer stars < $P2_red\n";
        }
        elsif ($P2 < $P2_yellow){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{yellow_warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                 "-log10 probability of 2 or fewer stars < $P2_yellow\n";
        }

    }



    use Inline Python => q{

    from chandra_aca.star_probs import mag_for_p_acq
  filename: starcheck/src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Starcheck/Obsid.pm#L2876
  id: '143'
  line_number: 2876
  project: starcheck
  severity: yellow
  text: |-
    push @{$self->{yellow_warn}},
    "-log10 probability of 2 or fewer stars < $P2_yellow\n";
  title: P2 < yellow limit
  type: aca_check
- context: |2-

        for (my $i = 0; $i <= $#{$times}; $i++) {
        # If command contains RESET, then turn off (i.e. set tstop) any
        # fid light that is on
        if ($actions->[$i] =~ /RESET/) {
            foreach my $fid (1 .. 14) {
            foreach my $fid_interval (@{$fs[$fid]}) {
                $fid_interval->{tstop} = $times->[$i] unless ($fid_interval->{tstop});
            }
            }
        }
        # Otherwise turn fid on by adding a new entry with tstart=time
        elsif ((my $fid) = ($actions->[$i] =~ /FID\s+(\d+)\s+ON/)) {
            push @{$fs[$fid]}, { tstart => $times->[$i] };
        } else {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$error}, "Parse_cm_file::fidsel: WARNING - Could not parse $actions->[$i]";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        }

        return ($fid_time_violation, $error, \@fs);
    }

    ###############################################################
    sub get_fid_actions {
    ###############################################################
        my $fs_file = shift;    # Fidsel file name
  filename: starcheck/src/lib/Ska/Parse_CM_File.pm
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/lib/Ska/Parse_CM_File.pm#L306
  id: '144'
  line_number: 306
  project: starcheck
  severity: red
  text: |-
    push @{$error}, "Parse_cm_file::fidsel: WARNING - Could not parse $actions->[$i]";
  title: Could not parse fidsel
  type: process
- aca_cl_id: ACA-048
  context: |2-
            $out .= "Error.  No dynamic aimpoint or characteristics file. \n";
        }
        elsif ($par{vehicle}){
            $out .= "Skipping attitude checks for vehicle-only processing. \n";
        }
        else{
            my $att_report = "${STARCHECK}/pcad_att_check.txt";
            my $att_ok = _make_pcad_attitude_check_report({
                backstop_file=> $backstop, or_list_file=>$or_file,
                simtrans_file=>$simtrans_file, simfocus_file=>$simfocus_file, attitude_file=>$attitude_file,
                ofls_characteristics_file=>$char_file, out=>$att_report, dynamic_offsets_file=>$aimpoint_file});
            if ($att_ok){
                $out .= "<A HREF=\"${att_report}\">[OK] Coordinates as expected.</A>\n";
            }
            else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                $out .= "<A HREF=\"${att_report}\">[${red_font_start}NOT OK${font_stop}] Coordinate mismatch or error.</A>\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            # Only check that characteristics file is less than 30 days old if backstop starts before 01-Aug-2016
            my $CHAR_DATE_CHECK_BEFORE = '2016:214:00:00:00.000';
            if ($bs[0]->{time} < date2time($CHAR_DATE_CHECK_BEFORE)){
                if (check_characteristics_date($char_file, $date[0])){
                    $out .= "[OK] Characteristics file newer than 30 days\n\n";
                }
                else{
                    $out .= "[${red_font_start}NOT OK${font_stop}] Characteristics file older than 30 days\n\n";
                }
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L640
  id: '145'
  line_number: 640
  project: starcheck
  severity: red
  text: |-
    $out .= "<A HREF=\"${att_report}\">[${red_font_start}NOT OK${font_stop}] Coordinate mismatch or error.</A>\n";
  title: Dynamic aimpoint check coordinate mismatch of error
  type: aca_check
- context: |2-
                simtrans_file=>$simtrans_file, simfocus_file=>$simfocus_file, attitude_file=>$attitude_file,
                ofls_characteristics_file=>$char_file, out=>$att_report, dynamic_offsets_file=>$aimpoint_file});
            if ($att_ok){
                $out .= "<A HREF=\"${att_report}\">[OK] Coordinates as expected.</A>\n";
            }
            else{
                $out .= "<A HREF=\"${att_report}\">[${red_font_start}NOT OK${font_stop}] Coordinate mismatch or error.</A>\n";
            }
            # Only check that characteristics file is less than 30 days old if backstop starts before 01-Aug-2016
            my $CHAR_DATE_CHECK_BEFORE = '2016:214:00:00:00.000';
            if ($bs[0]->{time} < date2time($CHAR_DATE_CHECK_BEFORE)){
                if (check_characteristics_date($char_file, $date[0])){
                    $out .= "[OK] Characteristics file newer than 30 days\n\n";
                }
                else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    $out .= "[${red_font_start}NOT OK${font_stop}] Characteristics file older than 30 days\n\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                }
            }
        }
    }

    # CCD temperature plot
    if ($obsid_temps){
        $out .= "------------  CCD TEMPERATURE PREDICTION -----------------\n\n";
        $out .= "<IMG SRC='$STARCHECK/ccd_temperature.png'>\n";
    }
  filename: starcheck/src/starcheck.pl
  github_url: https://github.com/sot//starcheck/blob/f98cd278591714b84d4c69542c235f61b633eb01/starcheck/src/starcheck.pl#L649
  id: '146'
  line_number: 649
  project: starcheck
  severity: red
  text: |-
    $out .= "[${red_font_start}NOT OK${font_stop}] Characteristics file older than 30 days\n\n";
  title: Characteristics file older than 30 days
  type: process (deprecated)
info:
  starcheck_commit: f98cd278591714b84d4c69542c235f61b633eb01
  tags: []
