checks:
- context: |2-

    use Inline Python => q{

    from chandra_aca.star_probs import set_acq_model_ms_filter
    from starcheck.pcad_att_check import make_pcad_attitude_check_report, check_characteristics_date
    from starcheck.calc_ccd_temps import get_ccd_temps

    def ccd_temp_wrapper(kwargs):
        return get_ccd_temps(**kwargs)

    def plot_cat_wrapper(kwargs):
        try:
            from starcheck.plot import make_plots_for_obsid
        except ImportError as err:
            # write errors to starcheck's global warnings and STDERR
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            perl.warning("Error with Inline::Python imports {}\n".format(err))
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return make_plots_for_obsid(**kwargs)
    };

    # cheat to get the OS (major)
    my $OS = `uname`;
    chomp($OS);


    # Set some global vars with directory locations
    my $SKA = $ENV{SKA} || '/proj/sot/ska';
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L63
  id: '000'
  line_number: 63
  text: |-
    perl.warning("Error with Inline::Python imports {}\n".format(err))
    return make_plots_for_obsid(**kwargs)
    };
  title: Error running Python from Perl
  type: code
- context: |-
    my @ps = Ska::Parse_CM_File::PS($ps_file) if ($ps_file);

    # Read mech check file and parse
    my @mc  = Ska::Parse_CM_File::mechcheck($mech_file) if ($mech_file);

    # Read SOE file and parse
    my %soe  = Ska::Parse_CM_File::SOE($soe_file) if ($soe_file);

    # Read OR file and integrate into %obs
    my %or = Ska::Parse_CM_File::OR($or_file) if ($or_file);

    # Read FIDSEL (fid light) history file and ODB (for fid
    # characteristics) and parse; use fid_time_violation later (when global_warn set up

    my ($fid_time_violation, $error, $fidsel) = Ska::Parse_CM_File::fidsel($fidsel_file, \@bs) ;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    map { warning("$_\n") } @{$error};
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX


    # do a tiny AGASC search to see which method will be used
    my $tiny_agasc_search = Ska::AGASC->new({ra=>0,dec=>0,w=>0.001});
    my $agasc_method = $Ska::AGASC::access_method;
    if ($agasc_method =~ /cfitsio/){
        warning("Ska::AGASC call to mp_get_agasc failed.  Output not approved for authoritative load review. \n");
    }

    ## Warn if we are on Solaris
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L270
  id: '001'
  line_number: 270
  text: |-
    map { warning("$_\n") } @{$error};
  title: Put out errors recorded before creation of warning function
  type: code
- context: |2-

    # Read OR file and integrate into %obs
    my %or = Ska::Parse_CM_File::OR($or_file) if ($or_file);

    # Read FIDSEL (fid light) history file and ODB (for fid
    # characteristics) and parse; use fid_time_violation later (when global_warn set up

    my ($fid_time_violation, $error, $fidsel) = Ska::Parse_CM_File::fidsel($fidsel_file, \@bs) ;
    map { warning("$_\n") } @{$error};


    # do a tiny AGASC search to see which method will be used
    my $tiny_agasc_search = Ska::AGASC->new({ra=>0,dec=>0,w=>0.001});
    my $agasc_method = $Ska::AGASC::access_method;
    if ($agasc_method =~ /cfitsio/){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("Ska::AGASC call to mp_get_agasc failed.  Output not approved for authoritative load review. \n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }

    ## Warn if we are on Solaris
    if ($OS eq 'SunOS'){
        warning("uname == SunOS; starcheck is only approved on Linux \n");
    }


    # See if we have database access
    my $db_handle;
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L277
  id: '002'
  line_number: 277
  text: |-
    warning("Ska::AGASC call to mp_get_agasc failed.  Output not approved for authoritative load review. \n");
  title: Could not find/run mp_get_agasc
  type: process
- context: |-
    # characteristics) and parse; use fid_time_violation later (when global_warn set up

    my ($fid_time_violation, $error, $fidsel) = Ska::Parse_CM_File::fidsel($fidsel_file, \@bs) ;
    map { warning("$_\n") } @{$error};


    # do a tiny AGASC search to see which method will be used
    my $tiny_agasc_search = Ska::AGASC->new({ra=>0,dec=>0,w=>0.001});
    my $agasc_method = $Ska::AGASC::access_method;
    if ($agasc_method =~ /cfitsio/){
        warning("Ska::AGASC call to mp_get_agasc failed.  Output not approved for authoritative load review. \n");
    }

    ## Warn if we are on Solaris
    if ($OS eq 'SunOS'){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("uname == SunOS; starcheck is only approved on Linux \n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }


    # See if we have database access
    my $db_handle;
    eval{
        eval 'use Ska::DatabaseUtil';
        $db_handle = Ska::DatabaseUtil::sql_connect( 'sybase-aca-aca_read' );

    };
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L282
  id: '003'
  line_number: 282
  notes: Delete from starcheck, overtaken by events.
  text: |-
    warning("uname == SunOS; starcheck is only approved on Linux \n");
  title: Do not run on SunOS
  type: process
- context: |2-

    ## Warn if we are on Solaris
    if ($OS eq 'SunOS'){
        warning("uname == SunOS; starcheck is only approved on Linux \n");
    }


    # See if we have database access
    my $db_handle;
    eval{
        eval 'use Ska::DatabaseUtil';
        $db_handle = Ska::DatabaseUtil::sql_connect( 'sybase-aca-aca_read' );

    };
    if (($@) or (not defined $db_handle)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("Unable to connect to Sybase server; links generated for all AGASC ids by default \n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }
    else{
        Ska::Starcheck::Obsid::set_db_handle($db_handle);
      }

    # Dark Cal Checker Section
    use Ska::Starcheck::Dark_Cal_Checker;
    my $dark_cal_checker;
    eval{
        $dark_cal_checker = Ska::Starcheck::Dark_Cal_Checker->new({ dir => $par{dir},
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L294
  id: '004'
  line_number: 294
  text: |-
    warning("Unable to connect to Sybase server; links generated for all AGASC ids by default \n");
  title: Could not read from Sybase database
  type: process
- context: |2-
        warning("Unable to connect to Sybase server; links generated for all AGASC ids by default \n");
    }
    else{
        Ska::Starcheck::Obsid::set_db_handle($db_handle);
      }

    # Dark Cal Checker Section
    use Ska::Starcheck::Dark_Cal_Checker;
    my $dark_cal_checker;
    eval{
        $dark_cal_checker = Ska::Starcheck::Dark_Cal_Checker->new({ dir => $par{dir},
                                                                    app_data => $Starcheck_Data});
    };
    if ($@){
        unless ($@ =~ /No ACA commanding found/){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            warning("Dark Cal Checker Failed $@ \n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
    }



    # Now that global_warn exists, if the DOT wasn't made/modified by SAUSAGE
    # throw an error
    if ($dot_touched_by_sausage == 0 ){
        warning("DOT file not modified by SAUSAGE! \n");
    }
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L309
  id: '005'
  line_number: 309
  text: |-
    warning("Dark Cal Checker Failed $@ \n");
  title: Dark Cal Checker Failed
  type: process
- context: |-
    eval{
        $dark_cal_checker = Ska::Starcheck::Dark_Cal_Checker->new({ dir => $par{dir},
                                                                    app_data => $Starcheck_Data});
    };
    if ($@){
        unless ($@ =~ /No ACA commanding found/){
            warning("Dark Cal Checker Failed $@ \n");
        }
    }



    # Now that global_warn exists, if the DOT wasn't made/modified by SAUSAGE
    # throw an error
    if ($dot_touched_by_sausage == 0 ){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("DOT file not modified by SAUSAGE! \n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }



    Ska::Starcheck::Obsid::setcolors({ red => $red_font_start,
                       blue => $blue_font_start,
                       yellow => $yellow_font_start,
                       });

    my %odb = Ska::Parse_CM_File::odb($odb_file);
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L318
  id: '006'
  line_number: 318
  text: |-
    warning("DOT file not modified by SAUSAGE! \n");
  title: DOT file not modified by SAUSAGE
  type: process
- context: |2-

    my %odb = Ska::Parse_CM_File::odb($odb_file);
    Ska::Starcheck::Obsid::set_odb(%odb);


    Ska::Starcheck::Obsid::set_config($config_ref);

    # Set the multple star filter disabled in the model if after this date
    my $MSF_ENABLED = $bs[0]->{date} lt '2016:102:00:00:00.000';
    set_acq_model_ms_filter($MSF_ENABLED);

    # Read Maneuver error file containing more accurate maneuver errors
    my @manerr;
    if ($manerr_file) {
        @manerr = Ska::Parse_CM_File::man_err($manerr_file);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    } else { warning("Could not find Maneuver Error file in output/ directory\n") };
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX

    # Read DITHER history file and backstop to determine expected dither state
    my ($dither_time_violation, $dither) = Ska::Parse_CM_File::dither($dither_file, \@bs);

    my ($radmon_time_violation, $radmon) = Ska::Parse_CM_File::radmon($radmon_file, \@bs);

    # if dither history runs into load
    if ($dither_time_violation){
        warning("Dither History runs into load\n");
    }
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L342
  id: '007'
  line_number: 342
  text: |-
    } else { warning("Could not find Maneuver Error file in output/ directory\n") };
  title: Missing Maneuver Error file
  type: process
- context: |-
    set_acq_model_ms_filter($MSF_ENABLED);

    # Read Maneuver error file containing more accurate maneuver errors
    my @manerr;
    if ($manerr_file) {
        @manerr = Ska::Parse_CM_File::man_err($manerr_file);
    } else { warning("Could not find Maneuver Error file in output/ directory\n") };

    # Read DITHER history file and backstop to determine expected dither state
    my ($dither_time_violation, $dither) = Ska::Parse_CM_File::dither($dither_file, \@bs);

    my ($radmon_time_violation, $radmon) = Ska::Parse_CM_File::radmon($radmon_file, \@bs);

    # if dither history runs into load
    if ($dither_time_violation){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("Dither History runs into load\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }

    # if radmon history runs into load
    if ($radmon_time_violation){
      warning("Radmon History runs into load\n");
    }

    # if fidsel history runs into load
    if ($fid_time_violation){
        warning("Fidsel History runs into load\n");
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L351
  id: 008
  line_number: 351
  orvdot: Need a replan interrupt and a replan reopen to test history files.
  text: |-
    warning("Dither History runs into load\n");
  title: Dither History runs into load
  type: process
- context: |2-
        @manerr = Ska::Parse_CM_File::man_err($manerr_file);
    } else { warning("Could not find Maneuver Error file in output/ directory\n") };

    # Read DITHER history file and backstop to determine expected dither state
    my ($dither_time_violation, $dither) = Ska::Parse_CM_File::dither($dither_file, \@bs);

    my ($radmon_time_violation, $radmon) = Ska::Parse_CM_File::radmon($radmon_file, \@bs);

    # if dither history runs into load
    if ($dither_time_violation){
        warning("Dither History runs into load\n");
    }

    # if radmon history runs into load
    if ($radmon_time_violation){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
      warning("Radmon History runs into load\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }

    # if fidsel history runs into load
    if ($fid_time_violation){
        warning("Fidsel History runs into load\n");
    }


    # Read in the failed acquisition stars
    warning("Could not open ACA bad acquisition stars file $bad_acqs_file\n")
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L356
  id: 009
  line_number: 356
  orvdot: Need a replan interrupt and a replan reopen to test history files.
  text: |-
    warning("Radmon History runs into load\n");
  title: Radmon History runs into load
  type: process
- context: |2-

    my ($radmon_time_violation, $radmon) = Ska::Parse_CM_File::radmon($radmon_file, \@bs);

    # if dither history runs into load
    if ($dither_time_violation){
        warning("Dither History runs into load\n");
    }

    # if radmon history runs into load
    if ($radmon_time_violation){
      warning("Radmon History runs into load\n");
    }

    # if fidsel history runs into load
    if ($fid_time_violation){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("Fidsel History runs into load\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }


    # Read in the failed acquisition stars
    warning("Could not open ACA bad acquisition stars file $bad_acqs_file\n")
        unless (Ska::Starcheck::Obsid::set_bad_acqs($bad_acqs_file));


    # Read in the troublesome guide stars
    warning("Could not open ACA bad guide star file $bad_gui_file\n")
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L361
  id: '010'
  line_number: 361
  orvdot: Need a replan interrupt and a replan reopen to test history files.
  text: |-
    warning("Fidsel History runs into load\n");
  title: Fidsel History runs into load
  type: process
- context: |-
    # and the next obsid
    for my $obsid_idx (0 .. ($#obsid_id)){
        $obs{$obsid_id[$obsid_idx]}->{prev} = ( $obsid_idx > 0 ) ? $obs{$obsid_id[$obsid_idx-1]} : undef;
        $obs{$obsid_id[$obsid_idx]}->{next} = ( $obsid_idx < $#obsid_id) ? $obs{$obsid_id[$obsid_idx+1]} : undef;
    }

    # Set the NPM times.  This requires the PREV/NEXT entries
    foreach my $obsid (@obsid_id) {
        $obs{$obsid}->set_npm_times();
    }

    # Check that every Guide summary OFLS ID has a matching OFLS ID in DOT

    foreach my $oflsid (keys %guidesumm){
        unless (defined $obs{$oflsid}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("OFLS ID $oflsid in Guide Summ but not in DOT! \n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
    }

    # Add guide_summary data to MP_STARCAT cmd for each obsid.

    HAS_GUIDE:
    foreach my $oflsid (@obsid_id){
        if (defined $guidesumm{$oflsid}){
            $obs{$oflsid}->add_guide_summ($oflsid, \%guidesumm);
        }
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L458
  id: '011'
  line_number: 458
  text: |-
    warning("OFLS ID $oflsid in Guide Summ but not in DOT! \n");
  title: OFLS ID in guide summary but not in DOT
  type: process
- context: |2-
        warning("OFLS ID $oflsid in Guide Summ but not in DOT! \n");
        }
    }

    # Add guide_summary data to MP_STARCAT cmd for each obsid.

    HAS_GUIDE:
    foreach my $oflsid (@obsid_id){
        if (defined $guidesumm{$oflsid}){
            $obs{$oflsid}->add_guide_summ($oflsid, \%guidesumm);
        }
        else {
            my $obsid = $obs{$oflsid}->{obsid};
            if (defined $obs{$oflsid}->{ok_no_starcat}){
                my $ofls_string = $obs{$oflsid}->{ok_no_starcat};
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$obs{$oflsid}->{fyi}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf(">> INFO   : No Guide Star Summary for obsid $obsid ($oflsid). OK for '$ofls_string' ER. \n");
                next HAS_GUIDE;
            }
            push @{$obs{$oflsid}->{warn}}, sprintf(">> WARNING: No Guide Star Summary for obsid $obsid ($oflsid). \n");
        }

    }

    # Set up for SIM-Z checking
    # Find SIMTSC continuity statement from mech check file
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L473
  id: '012'
  line_number: 473
  orvdot: No expected coverage due to removal of SIR concept (OK).
  text: |-
    push @{$obs{$oflsid}->{fyi}},
    sprintf(">> INFO   : No Guide Star Summary for obsid $obsid ($oflsid). OK for '$ofls_string' ER. \n");
  title: No guide summary (as expected) for SIR ER
  type: process
- context: |-
    # Add guide_summary data to MP_STARCAT cmd for each obsid.

    HAS_GUIDE:
    foreach my $oflsid (@obsid_id){
        if (defined $guidesumm{$oflsid}){
            $obs{$oflsid}->add_guide_summ($oflsid, \%guidesumm);
        }
        else {
            my $obsid = $obs{$oflsid}->{obsid};
            if (defined $obs{$oflsid}->{ok_no_starcat}){
                my $ofls_string = $obs{$oflsid}->{ok_no_starcat};
                push @{$obs{$oflsid}->{fyi}},
                sprintf(">> INFO   : No Guide Star Summary for obsid $obsid ($oflsid). OK for '$ofls_string' ER. \n");
                next HAS_GUIDE;
            }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$obs{$oflsid}->{warn}}, sprintf(">> WARNING: No Guide Star Summary for obsid $obsid ($oflsid). \n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

    }

    # Set up for SIM-Z checking
    # Find SIMTSC continuity statement from mech check file
    # and find SIMTRANS statements in backstop

    my @sim_trans = ();
    foreach my $mc (@mc) {
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L477
  id: '013'
  line_number: 477
  text: |-
    push @{$obs{$oflsid}->{warn}}, sprintf(">> WARNING: No Guide Star Summary for obsid $obsid ($oflsid). \n");
  title: No Guide Summary for obsid
  type: process
- context: |2-

    my $json_text = json_obsids();
    my $obsid_temps;
    eval{
        my $json_obsid_temps;
        $json_obsid_temps = ccd_temp_wrapper({oflsdir=> $par{dir},
                                              outdir=>$STARCHECK,
                                              json_obsids => $json_text,
                                              model_spec => "$Starcheck_Data/aca_spec.json",
                                              char_file => "$Starcheck_Data/characteristics.yaml",
                                          });
        # convert back from JSON outside
        $obsid_temps = JSON::from_json($json_obsid_temps);
    };
    if ($@){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @global_warn, "Error getting temperatures from get_ccd_temps\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }

    if ($obsid_temps){
        foreach my $obsid (@obsid_id) {
            $obs{$obsid}->set_ccd_temps($obsid_temps);
        }
    }


    # Do main checking
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L572
  id: '014'
  line_number: 572
  notes: Should this be added to aca checks?
  text: |-
    push @global_warn, "Error getting temperatures from get_ccd_temps\n";
  title: Error getting temperatures from get_ccd_temps
  type: process
- context: |2-
        my $cat = Ska::Starcheck::Obsid::find_command($obs{$obsid}, "MP_STARCAT");
        # If the catalog is empty, don't make plots
        if (defined $cat){
            my $cat_as_array = catalog_array($cat);
            my %plot_args = (obsid=>"$obs{$obsid}->{obsid}",
                             ra=>$obs{$obsid}->{ra},
                             dec=>$obs{$obsid}->{dec},
                             roll=>$obs{$obsid}->{roll},
                             catalog=>$cat_as_array,
                             starcat_time=>"$obs{$obsid}->{date}",
                             outdir=>$STARCHECK);
            eval{
                plot_cat_wrapper(\%plot_args);
            };
            if ($@){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @global_warn, "Error Python plotting catalog\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            $obs{$obsid}->{plot_file} = "$STARCHECK/stars_$obs{$obsid}->{obsid}.png";
            $obs{$obsid}->{plot_field_file} = "$STARCHECK/star_view_$obs{$obsid}->{obsid}.png";
            $obs{$obsid}->{compass_file} = "$STARCHECK/compass$obs{$obsid}->{obsid}.png";
        }
        $obs{$obsid}->check_monitor_commanding(\@bs, $or{$obsid});
        $obs{$obsid}->check_flick_pix_mon();
        $obs{$obsid}->set_dynamic_mag_limits();
        $obs{$obsid}->check_dither($dither);
        $obs{$obsid}->check_star_catalog($or{$obsid}, $par{vehicle});
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L601
  id: '015'
  line_number: 601
  text: |-
    push @global_warn, "Error Python plotting catalog\n";
  title: Error Python plotting catalog
  type: code
- context: |2-
            $obs{$obsid}->{plot_field_file} = "$STARCHECK/star_view_$obs{$obsid}->{obsid}.png";
            $obs{$obsid}->{compass_file} = "$STARCHECK/compass$obs{$obsid}->{obsid}.png";
        }
        $obs{$obsid}->check_monitor_commanding(\@bs, $or{$obsid});
        $obs{$obsid}->check_flick_pix_mon();
        $obs{$obsid}->set_dynamic_mag_limits();
        $obs{$obsid}->check_dither($dither);
        $obs{$obsid}->check_star_catalog($or{$obsid}, $par{vehicle});
        $obs{$obsid}->check_sim_position(@sim_trans) unless $par{vehicle};
        $obs{$obsid}->check_momentum_unload(\@bs);
        $obs{$obsid}->check_for_special_case_er();
        $obs{$obsid}->check_bright_perigee($radmon);
        $obs{$obsid}->count_good_stars();
        $obs{$obsid}->make_figure_of_merit();
    # Make sure there is only one star catalog per obsid
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning ("More than one star catalog assigned to Obsid $obsid\n")
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        if ($obs{$obsid}->find_command('MP_STARCAT',2));
    }

    my $final_json = json_obsids();
    open(my $JSON_OUT, "> $STARCHECK/obsids.json")
         or die "Couldn't open $STARCHECK/obsids.json for writing\n";
    print $JSON_OUT $final_json;
    close($JSON_OUT);

    # Produce final report
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L619
  id: '016'
  line_number: 619
  text: |-
    warning ("More than one star catalog assigned to Obsid $obsid\n")
    if ($obs{$obsid}->find_command('MP_STARCAT',2));
  title: More than one star catalog assigned to obsid
  type: process
- context: |2-
        $out .= "Using ACABadPixel file from $ACA_badpix_date Dark Cal \n";
        $save_hash{run}{badpix} = $ACA_badpix_date;
        }

        $out .= "Using acquisition model for multiple star filter "
            . ($MSF_ENABLED ? "enabled\n" : "disabled\n");

        $out .= "\n";
    }

    if (@global_warn) {
        $out .= "------------  PROCESSING WARNING  -----------------\n\n";
        $out .= $red_font_start;
        foreach (@global_warn) {
        $out .= $_;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$save_hash{processing_warning}}, $_;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        $out .= qq{${font_stop}\n};
    }


    # Run independent attitude checker
    my $CHAR_REQUIRED_AFTER = '2015:315:00:00:00.000';
    if ((defined $char_file) or ($bs[0]->{time} > date2time($CHAR_REQUIRED_AFTER))){
        $out .= "------------  VERIFY ATTITUDE (SI_ALIGN CHECK)  -----------------\n\n";
        if (not defined $char_file){
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L681
  id: '017'
  line_number: 681
  text: |-
    push @{$save_hash{processing_warning}}, $_;
  type: code
- context: |2-
        my $set = 0;

        for my $i (reverse (0 .. $#cmd)) {
            if ($cmd[$i] eq 'COMMAND_SW' and $params[$i] =~ /AOMANUVR/) {
    #        print STDERR "First: $cmd[$i], $time[$i], $date[$i] \n";
            $manv_time = $time[$i];
            $set = 1;
        }
        if ($cmd[$i] eq 'MP_TARGQUAT') {
    #        print STDERR "Second: $cmd[$i], $time[$i], $date[$i] \n";
            if ($set eq 1) {
            $time[$i] = $manv_time;
    #        undef $manv_time;    # Make sure that each TARGQUAT gets a unique AOMANUVR time
                $set = 0;
            } else {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            warning ("Found MP_TARGQUAT at $date[$i] without corresponding AOMANUVR\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
        }
        }
    }


    ##***************************************************************************
    sub set_dot_cmd {
    ##***************************************************************************
        %dot_cmd    = (ATS_MANVR  =>  'MP_TARGQUAT',
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L1078
  id: 018
  line_number: 1078
  text: |-
    warning ("Found MP_TARGQUAT at $date[$i] without corresponding AOMANUVR\n");
  title: No AOMANUVR found for MP_TARGQUAT
  type: process
- context: |2-
        if ($dot_cmd{$cmd_identifier} eq $cmd ){
            if ( abs($dot{$obsid_index}{time} + $dt - $time) < $tolerance) {
            if ($obsid_index =~ /\S0*(\S+)\d{4}/){
                return $1;

            }
            else{
                die "Couldn't parse obsid_index = '$obsid_index' in get_obsid()\n";
            }
            }


        }
        }

    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("Could not find a match in DOT for $cmd at $date\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX

        # Couldn't match input command to DOT.  For TARGQUAT or STARCAT, force
        # processing by making a bogus obsid

        if ($cmd =~ /MP_(TARGQUAT|STARCAT)/) {
        $obsid = "NONE$bogus_obsid" ;
        warning("Creating bogus obsid $obsid\n") unless ($obs{$obsid});
        $bogus_obsid++ if ($cmd eq 'MP_STARCAT');
        }
        return ($obsid);
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L1142
  id: 019
  line_number: 1142
  text: |-
    warning("Could not find a match in DOT for $cmd at $date\n");
  title: Could not find a match in DOT for cmd near date
  type: process
- context: |2-
                die "Couldn't parse obsid_index = '$obsid_index' in get_obsid()\n";
            }
            }


        }
        }

        warning("Could not find a match in DOT for $cmd at $date\n");

        # Couldn't match input command to DOT.  For TARGQUAT or STARCAT, force
        # processing by making a bogus obsid

        if ($cmd =~ /MP_(TARGQUAT|STARCAT)/) {
        $obsid = "NONE$bogus_obsid" ;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        warning("Creating bogus obsid $obsid\n") unless ($obs{$obsid});
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        $bogus_obsid++ if ($cmd eq 'MP_STARCAT');
        }
        return ($obsid);
    }


    ##***************************************************************************
    sub get_file {
    ##***************************************************************************
        my $glob = shift;
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L1149
  id: '020'
  line_number: 1149
  orvdot: Replan/reopen schedule that has star catalogs prior to the start of DOT.
  text: |-
    warning("Creating bogus obsid $obsid\n") unless ($obs{$obsid});
  title: Creating fake obsid for star catalog in backstop but not in DOT
  type: process
- context: |2-
        }
        return ($obsid);
    }


    ##***************************************************************************
    sub get_file {
    ##***************************************************************************
        my $glob = shift;
        my $name = shift;
        my $required = shift;
        my $warning = ($required ? "ERROR" : "WARNING");

        my @files = glob($glob);
        if (@files != 1) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          my $warn = ((@files == 0) ?
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                      "$warning: No $name file matching $glob\n"
                      : "$warning: Found more than one file matching $glob, using none\n");
          warning($warn);
        die "\n" if ($required);
        return undef;
        }
        $input_files{$name}=$files[0];
        print STDERR "Using $name file $files[0]\n";
        return $files[0];
    }
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L1166
  id: '021'
  line_number: 1166
  text: |-
    my $warn = ((@files == 0) ?
    "$warning: No $name file matching $glob\n"
    : "$warning: Found more than one file matching $glob, using none\n");
  title: Exactly one file of each required kind was found
  type: process
- context: |2-


    ##***************************************************************************
    sub get_file {
    ##***************************************************************************
        my $glob = shift;
        my $name = shift;
        my $required = shift;
        my $warning = ($required ? "ERROR" : "WARNING");

        my @files = glob($glob);
        if (@files != 1) {
          my $warn = ((@files == 0) ?
                      "$warning: No $name file matching $glob\n"
                      : "$warning: Found more than one file matching $glob, using none\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          warning($warn);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        die "\n" if ($required);
        return undef;
        }
        $input_files{$name}=$files[0];
        print STDERR "Using $name file $files[0]\n";
        return $files[0];
    }

    ##***************************************************************************
    #sub insert_bogus_obsid {
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L1169
  id: '022'
  line_number: 1169
  text: |-
    warning($warn);
  type: code
- context: |
    ##***************************************************************************
    #    @date = (@date[0..$i-1], $date[$i_last_starcat], @date[$i..$#date]);
    #    @vcdu = (@vcdu[0..$i-1], $vcdu[$i_last_starcat]+4, @vcdu[$i..$#vcdu]);
    #    @cmd = (@cmd[0..$i-1], 'MP_OBSID', @cmd[$i..$#cmd]);
    #    @params = (@params[0..$i-1], "ID= NONE$bogus_obsid", @params[$i..$#params]);
    #    warning ("A star catalog does not have an associated obsid, "
    #    . "using bogus obsid NONE$bogus_obsid\n");
    #    $bogus_obsid++;
    #}


    ##***************************************************************************
    sub warning {
    ##***************************************************************************
        my $text = shift;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @global_warn, $text;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        print STDERR $text;
    }


    ##***************************************************************************
    sub usage
    ##***************************************************************************
    {
      my ( $exit ) = @_;
  filename: src/starcheck.pl
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/starcheck.pl#L1195
  id: '023'
  line_number: 1195
  text: |-
    push @global_warn, $text;
  title: This is the general-purpose warning function
  type: code
- context: |-
    # Use the following (in order of preference):
    # - Backstop command (this relies on the DOT to associate cmd with star catalog)
    # - Guide summary which provides ofls_id and obsid for each star catalog
    # - OFLS ID from the DOT (as a fail-thru to still get some output)
    ##################################################################################
        my $self = shift;
        my $gs = shift;  # Guide summary
        my $oflsid = $self->{dot_obsid};
        my $gs_obsid;
        my $bs_obsid;
        my $mp_obsid_cmd = find_command($self, "MP_OBSID");
        $gs_obsid = $gs->{$oflsid}{guide_summ_obsid} if defined $gs->{$oflsid};
        $bs_obsid = $mp_obsid_cmd->{ID} if $mp_obsid_cmd;
        $self->{obsid} = $bs_obsid || $gs_obsid || $oflsid;
        if (defined $bs_obsid and defined $gs_obsid and $bs_obsid != $gs_obsid) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, sprintf("$alarm Obsid mismatch: guide summary %d != backstop %d\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                          $gs_obsid, $bs_obsid);
        }
    }


    ##################################################################################
    sub print_cmd_params {
    ##################################################################################
        my $self = shift;
        foreach my $cmd (@{$self->{commands}}) {
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L247
  id: '024'
  line_number: 247
  text: |-
    push @{$self->{warn}}, sprintf("$alarm Obsid mismatch: guide summary %d != backstop %d\n",
    $gs_obsid, $bs_obsid);
  title: Mismatch between obsid in guide summary vs. backstop
  type: process
- context: |2-
            foreach (keys %{$m}) {
                $c->{$_} = $m->{$_};
            }
            # Set the default maneuver error (based on WS Davis data) and cap at 85 arcsec
            $c->{man_err} = (exists $c->{angle}) ? 35 + $c->{angle}/2. : 85;
            $c->{man_err} = 85 if ($c->{man_err} > 85);
            # Now check for consistency between quaternion from MANUEVER summary
            # file and the quat from backstop (MP_TARGQUAT cmd)

            # Get quat from MP_TARGQUAT (backstop) command.
            # Compute 4th component (as only first 3 are uplinked) and renormalize.
            # Intent is to match OBC Target Reference subfunction
            my $q4_obc = sqrt(abs(1.0 - $c->{Q1}**2 - $c->{Q2}**2 - $c->{Q3}**2));
            my $norm = sqrt($c->{Q1}**2 + $c->{Q2}**2 + $c->{Q3}**2 + $q4_obc**2);
            if (abs(1.0 - $norm) > 1e-6){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
               push @{$self->{warn}}, sprintf("$alarm Uplink quaternion norm value $norm is too far from 1.0\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            my @c_quat_norm = ($c->{Q1} / $norm,
                               $c->{Q2} / $norm,
                               $c->{Q3} / $norm,
                               $q4_obc / $norm);

            # Get quat from MANEUVER summary file.  This is correct to high precision
            my $q_man = Quat->new($m->{ra}, $m->{dec}, $m->{roll});
            my $q_obc = Quat->new(@c_quat_norm);
            my @q_man = @{$q_man->{q}};
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L362
  id: '025'
  line_number: 362
  text: |-
    push @{$self->{warn}}, sprintf("$alarm Uplink quaternion norm value $norm is too far from 1.0\n");
  title: Quaternion is not normalized
  type: aca_check
- context: |2-
            if (abs(1.0 - $norm) > 1e-6){
               push @{$self->{warn}}, sprintf("$alarm Uplink quaternion norm value $norm is too far from 1.0\n");
            }
            my @c_quat_norm = ($c->{Q1} / $norm,
                               $c->{Q2} / $norm,
                               $c->{Q3} / $norm,
                               $q4_obc / $norm);

            # Get quat from MANEUVER summary file.  This is correct to high precision
            my $q_man = Quat->new($m->{ra}, $m->{dec}, $m->{roll});
            my $q_obc = Quat->new(@c_quat_norm);
            my @q_man = @{$q_man->{q}};
            my $q_diff = $q_man->divide($q_obc);

            if (abs($q_diff->{ra0}*3600) > 1.0 || abs($q_diff->{dec}*3600) > 1.0 || abs($q_diff->{roll0}*3600) > 10.0) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{warn}}, sprintf("$alarm Target uplink precision problem for MP_TARGQUAT at $c->{date}\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                               . "   Error is yaw, pitch, roll (arcsec) = %.2f  %.2f  %.2f\n"
                               . "   Use Q1,Q2,Q3,Q4 = %.12f %.12f %.12f %.12f\n",
                               $q_diff->{ra0}*3600, $q_diff->{dec}*3600, $q_diff->{roll0}*3600,
                               $q_man[0], $q_man[1], $q_man[2], $q_man[3]);
            }
            }


        }
        push @{$self->{yellow_warn}}, sprintf("$alarm Did not find match in MAN summary for MP_TARGQUAT at $c->{date}\n")
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L376
  id: '026'
  line_number: 376
  text: |-
    push @{$self->{warn}}, sprintf("$alarm Target uplink precision problem for MP_TARGQUAT at $c->{date}\n"
    . "   Error is yaw, pitch, roll (arcsec) = %.2f  %.2f  %.2f\n"
    . "   Use Q1,Q2,Q3,Q4 = %.12f %.12f %.12f %.12f\n",
    $q_diff->{ra0}*3600, $q_diff->{dec}*3600, $q_diff->{roll0}*3600,
    $q_man[0], $q_man[1], $q_man[2], $q_man[3]);
  title: Quaternion has poor precision
  type: aca_check
- context: |2-
            my $q_obc = Quat->new(@c_quat_norm);
            my @q_man = @{$q_man->{q}};
            my $q_diff = $q_man->divide($q_obc);

            if (abs($q_diff->{ra0}*3600) > 1.0 || abs($q_diff->{dec}*3600) > 1.0 || abs($q_diff->{roll0}*3600) > 10.0) {
                push @{$self->{warn}}, sprintf("$alarm Target uplink precision problem for MP_TARGQUAT at $c->{date}\n"
                               . "   Error is yaw, pitch, roll (arcsec) = %.2f  %.2f  %.2f\n"
                               . "   Use Q1,Q2,Q3,Q4 = %.12f %.12f %.12f %.12f\n",
                               $q_diff->{ra0}*3600, $q_diff->{dec}*3600, $q_diff->{roll0}*3600,
                               $q_man[0], $q_man[1], $q_man[2], $q_man[3]);
            }
            }


        }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{yellow_warn}}, sprintf("$alarm Did not find match in MAN summary for MP_TARGQUAT at $c->{date}\n")
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            unless ($found);

        }
    }

    ##################################################################################
    sub set_manerr {
    #
    # Set the maneuver error for each MP_TARGQUAT command within the obsid
    # using the more accurate values from Bill Davis' code
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L386
  id: '027'
  line_number: 386
  text: |-
    push @{$self->{yellow_warn}}, sprintf("$alarm Did not find match in MAN summary for MP_TARGQUAT at $c->{date}\n")
    unless ($found);
  title: No match in maneuver summary for MP_TARGQUAT
  type: process
- context: |2-
        while ($c = find_command($self, "MP_TARGQUAT", $n)) {

        foreach my $me (@manerr) {
            # There should be a one-to-one mapping between maneuver segments in the maneuver
            # error file and those in the obsid records.  First, find what *should* be the
            # match.  Then check quaternions to make sure

            if ($self->{obsid} eq $me->{obsid} && $n == $me->{Seg}) {
            if (   abs($me->{finalQ1} - $c->{Q1}) < 1e-7
                   && abs($me->{finalQ2} - $c->{Q2}) < 1e-7
                   && abs($me->{finalQ3} - $c->{Q3}) < 1e-7)
            {
                $c->{man_err} = $me->{MaxErrYZ} + $ACA_MANERR_PAD;
                $c->{man_err_data} = $me; # Save the whole record just in case
            } else {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{yellow_warn}}, sprintf("$alarm Mismatch in target quaternion ($c->{date}) and maneuver error file\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            }
        }
        $n++;
        }
    }

    ##################################################################################
    sub set_ps_times{
    # Get the observation start and stop times from the processing summary
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L418
  id: 028
  line_number: 418
  text: |-
    push @{$self->{yellow_warn}}, sprintf("$alarm Mismatch in target quaternion ($c->{date}) and maneuver error file\n");
  title: Mismatch between target quaternion at time and entry in maneuver error file
  type: process
- context: |2-
            my $length = length($obsid);
            if (substr($tmp[0], 5-$length, $length) eq $obsid){
            $or_er_start = $tmp[2];
            $or_er_stop = $tmp[3];
            last;
            }
        }
        if (($ps_line =~ /OBSID\s=\s(\d\d\d\d\d)/) && (scalar(@tmp) >= 8 )) {
            if ( $obsid eq $1 ){
            $or_er_start = $tmp[2];
            $or_er_stop = $tmp[3];
            }
        }
        }
        if (not defined $or_er_start or not defined $or_er_stop){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "$alarm Could not find obsid $obsid in processing summary\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            $self->{or_er_start} = undef;
            $self->{or_er_stop} = undef;
        }
        else{
            $self->{or_er_start} = date2time($or_er_start);
            $self->{or_er_stop} = date2time($or_er_stop);
        }


    }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L457
  id: 029
  line_number: 457
  text: |-
    push @{$self->{warn}}, "$alarm Could not find obsid $obsid in processing summary\n";
  title: Could not find obsid in MSCH processing summary (mps/ms*.sum)
  type: process
- context: |2-
        }

        # set the observation stop as the beginning of the next maneuever
        # or, if last obsid in load, use the processing summary or/er observation
        # stop time
        if (defined $self->{next}){
            my $next_manvr = find_command($self->{next}, "MP_TARGQUAT", -1);
            if ((defined $next_manvr) & (defined $next_manvr->{tstart})){
                $obs_tstop  = $next_manvr->{tstart};
            }
            else{
                # if the next obsid doesn't have a maneuver (ACIS undercover or whatever)
                # just use next obsid start time
                my $next_cmd_obsid = find_command($self->{next}, "MP_OBSID", -1);
                if ( (defined $next_cmd_obsid) and ( $self->{obsid} != $next_cmd_obsid->{ID}) ){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}}, "$info Next obsid has no manvr; using next obs start date for checks (dither, momentum)\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    $obs_tstop = $next_cmd_obsid->{time};
                    $self->{no_following_manvr} = 1;
                }
            }
        }
        else{
            $obs_tstop = $self->{or_er_stop};
        }

        if (not defined $obs_tstart or not defined $obs_tstop){
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L504
  id: '030'
  line_number: 504
  text: |-
    push @{$self->{fyi}}, "$info Next obsid has no manvr; using next obs start date for checks (dither, momentum)\n";
  title: Next obsid has no manvr, using next obsid start for time checks
  type: process
- context: |2+
                # if the next obsid doesn't have a maneuver (ACIS undercover or whatever)
                # just use next obsid start time
                my $next_cmd_obsid = find_command($self->{next}, "MP_OBSID", -1);
                if ( (defined $next_cmd_obsid) and ( $self->{obsid} != $next_cmd_obsid->{ID}) ){
            push @{$self->{fyi}}, "$info Next obsid has no manvr; using next obs start date for checks (dither, momentum)\n";
                    $obs_tstop = $next_cmd_obsid->{time};
                    $self->{no_following_manvr} = 1;
                }
            }
        }
        else{
            $obs_tstop = $self->{or_er_stop};
        }

        if (not defined $obs_tstart or not defined $obs_tstop){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "$alarm Could not determine obsid start and stop times for checks (dither, momentum)\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        else{
            $self->{obs_tstart} = $obs_tstart;
            $self->{obs_tstop} = $obs_tstop;

        }
    }


  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L515
  id: '031'
  line_number: 515
  text: |-
    push @{$self->{warn}}, "$alarm Could not determine obsid start and stop times for checks (dither, momentum)\n";
  title: Could not determine start or stop time(s) for obsid
  type: process
- context: |2-

        my $obs_beg_pad = 8*60;       # Check dither status at obs start + 8 minutes to allow
                                      # for disabled dither because of mon star commanding
        my $obs_end_pad = 3*60;
        my $manvr;

        if ( $self->{obsid} =~ /^\d*$/){
        return if ($self->{obsid} > 50000); # For eng obs, don't have OR to specify dither
        }
        # If there's no starcat on purpose, return
        if (defined $self->{ok_no_starcat} and $self->{ok_no_starcat}){
            return;
        }
        unless ($manvr = find_command($self, "MP_TARGQUAT", -1)
                and defined $manvr->{tstart}) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, "$alarm Dither status not checked\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }

        unless (defined $dthr){
          push @{$self->{warn}}, "$alarm Dither states unavailable. Dither not checked\n";
          return;
        }

        # set the observation start as the end of the maneuver
        my $obs_tstart = $self->{obs_tstart};
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L633
  id: '032'
  line_number: 633
  severity: red
  text: |-
    push @{$self->{warn}}, "$alarm Dither status not checked\n";
  title: Dither status not checked
  type: aca_check
- context: |2-

        if ( $self->{obsid} =~ /^\d*$/){
        return if ($self->{obsid} > 50000); # For eng obs, don't have OR to specify dither
        }
        # If there's no starcat on purpose, return
        if (defined $self->{ok_no_starcat} and $self->{ok_no_starcat}){
            return;
        }
        unless ($manvr = find_command($self, "MP_TARGQUAT", -1)
                and defined $manvr->{tstart}) {
        push @{$self->{warn}}, "$alarm Dither status not checked\n";
        return;
        }

        unless (defined $dthr){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, "$alarm Dither states unavailable. Dither not checked\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          return;
        }

        # set the observation start as the end of the maneuver
        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        # Determine current dither status by finding the last dither commanding before
        # the start of observation (+ 8 minutes)
        my $dither;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L638
  id: '033'
  line_number: 638
  text: |-
    push @{$self->{warn}}, "$alarm Dither states unavailable. Dither not checked\n";
  title: Dither states/history unavailable
  type: aca_check
- context: |2-
        # the start of observation (+ 8 minutes)
        my $dither;
        foreach my $dither_state (reverse @{$dthr}) {
        if ($obs_tstart + $obs_beg_pad >= $dither_state->{time}) {
                $dither = $dither_state;
                last;
            }
        }

        my $bs_val = $dither->{state};
        # Get the OR value of dither and compare if available
        my $or_val;
        if (defined $self->{DITHER_ON}){
            $or_val = $dthr_cmd{$self->{DITHER_ON}};
            # ACA-002
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "$alarm Dither mismatch - OR: $or_val != Backstop: $bs_val\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                if ($or_val ne $bs_val);
        }
        else{
            push @{$self->{warn}},
                "$alarm Unable to determine dither from OR list\n";
        }

        # If dither is anabled according to the OR, check that parameters match OR vs Backstop
        if ((defined $or_val) and ($or_val eq 'ENAB')){
            my $y_amp = $self->{DITHER_Y_AMP} * 3600;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L662
  id: '034'
  line_number: 662
  severity: red
  text: |-
    push @{$self->{warn}}, "$alarm Dither mismatch - OR: $or_val != Backstop: $bs_val\n"
    if ($or_val ne $bs_val);
  title: Mismatch between dither enable status in OR vs. Backstop
  type: aca_check
- context: |2-
                $dither = $dither_state;
                last;
            }
        }

        my $bs_val = $dither->{state};
        # Get the OR value of dither and compare if available
        my $or_val;
        if (defined $self->{DITHER_ON}){
            $or_val = $dthr_cmd{$self->{DITHER_ON}};
            # ACA-002
            push @{$self->{warn}}, "$alarm Dither mismatch - OR: $or_val != Backstop: $bs_val\n"
                if ($or_val ne $bs_val);
        }
        else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                "$alarm Unable to determine dither from OR list\n";
        }

        # If dither is anabled according to the OR, check that parameters match OR vs Backstop
        if ((defined $or_val) and ($or_val eq 'ENAB')){
            my $y_amp = $self->{DITHER_Y_AMP} * 3600;
            my $z_amp = $self->{DITHER_Z_AMP} * 3600;
            if (defined $dither->{ampl_y}
                    and defined $dither->{ampl_p}
                        and (abs($y_amp - $dither->{ampl_y}) > 0.1
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L666
  id: '035'
  line_number: 666
  text: |-
    push @{$self->{warn}},
    "$alarm Unable to determine dither from OR list\n";
  title: Could not determine dither enable status from OR list
  type: process
- context: |2-
                if ($or_val ne $bs_val);
        }
        else{
            push @{$self->{warn}},
                "$alarm Unable to determine dither from OR list\n";
        }

        # If dither is anabled according to the OR, check that parameters match OR vs Backstop
        if ((defined $or_val) and ($or_val eq 'ENAB')){
            my $y_amp = $self->{DITHER_Y_AMP} * 3600;
            my $z_amp = $self->{DITHER_Z_AMP} * 3600;
            if (defined $dither->{ampl_y}
                    and defined $dither->{ampl_p}
                        and (abs($y_amp - $dither->{ampl_y}) > 0.1
                                 or abs($z_amp - $dither->{ampl_p}) > 0.1)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                my $warn = sprintf("$alarm Dither amp. mismatch - OR: (Y %.1f, Z %.1f) "
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                       . "!= Backstop: (Y %.1f, Z %.1f)\n",
                                   $y_amp, $z_amp,
                                   $dither->{ampl_y}, $dither->{ampl_p});
                push @{$self->{warn}}, $warn;
            }
        }
        # Check for standard and large dither based solely on backstop/history values
        if (($bs_val eq 'ENAB') and (defined $dither->{ampl_y} and defined $dither->{ampl_p})){
            $self->{cmd_dither_y_amp} = $dither->{ampl_y};
            $self->{cmd_dither_z_amp} = $dither->{ampl_p};
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L678
  id: '036'
  line_number: 678
  orvdot: Need change in commanded dither amplitude (e.g. HRC observation or large
    dither)
  text: |-
    my $warn = sprintf("$alarm Dither amp. mismatch - OR: (Y %.1f, Z %.1f) "
    . "!= Backstop: (Y %.1f, Z %.1f)\n",
    $y_amp, $z_amp,
    $dither->{ampl_y}, $dither->{ampl_p});
  title: Dither amplitude mismatch OR/Backstop
  type: aca_check
- context: |2-
                "$alarm Unable to determine dither from OR list\n";
        }

        # If dither is anabled according to the OR, check that parameters match OR vs Backstop
        if ((defined $or_val) and ($or_val eq 'ENAB')){
            my $y_amp = $self->{DITHER_Y_AMP} * 3600;
            my $z_amp = $self->{DITHER_Z_AMP} * 3600;
            if (defined $dither->{ampl_y}
                    and defined $dither->{ampl_p}
                        and (abs($y_amp - $dither->{ampl_y}) > 0.1
                                 or abs($z_amp - $dither->{ampl_p}) > 0.1)){
                my $warn = sprintf("$alarm Dither amp. mismatch - OR: (Y %.1f, Z %.1f) "
                                       . "!= Backstop: (Y %.1f, Z %.1f)\n",
                                   $y_amp, $z_amp,
                                   $dither->{ampl_y}, $dither->{ampl_p});
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{warn}}, $warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
        }
        # Check for standard and large dither based solely on backstop/history values
        if (($bs_val eq 'ENAB') and (defined $dither->{ampl_y} and defined $dither->{ampl_p})){
            $self->{cmd_dither_y_amp} = $dither->{ampl_y};
            $self->{cmd_dither_z_amp} = $dither->{ampl_p};
            if (not standard_dither($dither)){
                push @{$self->{yellow_warn}}, "$alarm Non-standard dither\n";
                if ($dither->{ampl_y} > $large_dith_thresh or $dither->{ampl_p} > $large_dith_thresh){
                    $self->large_dither_checks($dither, $dthr);
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L682
  id: '037'
  line_number: 682
  text: |-
    push @{$self->{warn}}, $warn;
  title: Really just part of check '036'
  type: code
- context: |2-
                    and defined $dither->{ampl_p}
                        and (abs($y_amp - $dither->{ampl_y}) > 0.1
                                 or abs($z_amp - $dither->{ampl_p}) > 0.1)){
                my $warn = sprintf("$alarm Dither amp. mismatch - OR: (Y %.1f, Z %.1f) "
                                       . "!= Backstop: (Y %.1f, Z %.1f)\n",
                                   $y_amp, $z_amp,
                                   $dither->{ampl_y}, $dither->{ampl_p});
                push @{$self->{warn}}, $warn;
            }
        }
        # Check for standard and large dither based solely on backstop/history values
        if (($bs_val eq 'ENAB') and (defined $dither->{ampl_y} and defined $dither->{ampl_p})){
            $self->{cmd_dither_y_amp} = $dither->{ampl_y};
            $self->{cmd_dither_z_amp} = $dither->{ampl_p};
            if (not standard_dither($dither)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{yellow_warn}}, "$alarm Non-standard dither\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                if ($dither->{ampl_y} > $large_dith_thresh or $dither->{ampl_p} > $large_dith_thresh){
                    $self->large_dither_checks($dither, $dthr);
                    # If this is a large dither, set a larger pad at the end, as we expect
                    # standard dither parameters to be commanded at 5 minutes before end,
                    # which is greater than the 3 minutes used in the "no dither changes
                    # during observation check below
                    $obs_end_pad = 5.5 * 60;
                }
            }
        }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L690
  id: 038
  line_number: 690
  severity: yellow
  text: |-
    push @{$self->{yellow_warn}}, "$alarm Non-standard dither\n";
  title: Non-standard dither
  type: aca_check
- context: |2-
                push @{$self->{yellow_warn}}, "$alarm Non-standard dither\n";
                if ($dither->{ampl_y} > $large_dith_thresh or $dither->{ampl_p} > $large_dith_thresh){
                    $self->large_dither_checks($dither, $dthr);
                    # If this is a large dither, set a larger pad at the end, as we expect
                    # standard dither parameters to be commanded at 5 minutes before end,
                    # which is greater than the 3 minutes used in the "no dither changes
                    # during observation check below
                    $obs_end_pad = 5.5 * 60;
                }
            }
        }

        # Loop again to check for dither changes during the observation
        # ACA-003
        if (not defined $obs_tstop ){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                "$alarm Unable to determine obs tstop; could not check for dither changes during obs\n";
        }
        else{
            foreach my $dither (reverse @{$dthr}) {
                if ($dither->{time} > ($obs_tstart + $obs_beg_pad)
                        && $dither->{time} <= $obs_tstop - $obs_end_pad) {
                    push @{$self->{warn}}, "$alarm Dither commanding at $dither->{time}.  During observation.\n";
                }
                if ($dither->{time} < $obs_tstart){
                    last;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L705
  id: 039
  line_number: 705
  text: |-
    push @{$self->{warn}},
    "$alarm Unable to determine obs tstop; could not check for dither changes during obs\n";
  title: Could not use stop time for dither check
  type: process
- context: |2+
                    $obs_end_pad = 5.5 * 60;
                }
            }
        }

        # Loop again to check for dither changes during the observation
        # ACA-003
        if (not defined $obs_tstop ){
            push @{$self->{warn}},
                "$alarm Unable to determine obs tstop; could not check for dither changes during obs\n";
        }
        else{
            foreach my $dither (reverse @{$dthr}) {
                if ($dither->{time} > ($obs_tstart + $obs_beg_pad)
                        && $dither->{time} <= $obs_tstop - $obs_end_pad) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    push @{$self->{warn}}, "$alarm Dither commanding at $dither->{time}.  During observation.\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                }
                if ($dither->{time} < $obs_tstart){
                    last;
                }
            }
        }
    }


  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L712
  id: '040'
  line_number: 712
  severity: red
  text: |-
    push @{$self->{warn}}, "$alarm Dither commanding at $dither->{time}.  During observation.\n";
  title: Unexpected dither commanding during observation
  type: aca_check
- context: |2-
        # from the actual command timing. Fix this here.
        my $obs_tstart = $self->{obs_tstart} - 10;
        my $obs_tstop = $self->{obs_tstop} - 10;

        # Now check in backstop commands for :
        #  Dither is disabled (AODSDITH) 1 min prior to the end of the maneuver (EOM)
        #    to the target attitude.
        #  Dither is enabled (AOENDITH) 5 min after EOM
        #  Dither parameters are commanded 5 min before end of observation
        # ACA-040
        # obs_tstart is defined as the tstop of the maneuver to this observation in set_npm_times
        # obs_tstop is defined as the time of the maneuver away or the end of the schedule

        # Is the large dither command enabled 5 minutes after EOM?
        if (abs($dither_state->{time} - $obs_tstart - 300) > $time_tol){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf("$alarm Large Dither not enabled 5 min after EOM (%s)\n",
                        time2date($obs_tstart));
        }
        # What's the dither state at EOM?
        my $obs_start_dither;
        foreach my $dither (reverse @{$all_dither}) {
        if ($obs_tstart >= $dither->{time}) {
                $obs_start_dither = $dither;
                last;
            }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L780
  id: '041'
  line_number: 780
  orvdot: Need observation with large dither commanding
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("$alarm Large Dither not enabled 5 min after EOM (%s)\n",
    time2date($obs_tstart));
  title: Large dither not enabled 5 min after EOM
  type: aca_check
- context: |2-
            push @{$self->{warn}},
                sprintf("$alarm Large Dither not enabled 5 min after EOM (%s)\n",
                        time2date($obs_tstart));
        }
        # What's the dither state at EOM?
        my $obs_start_dither;
        foreach my $dither (reverse @{$all_dither}) {
        if ($obs_tstart >= $dither->{time}) {
                $obs_start_dither = $dither;
                last;
            }
        }
        # Is dither disabled at EOM and one minute before?
        if ((abs($obs_tstart - $obs_start_dither->{time} - 60) > $time_tol)
                or ($obs_start_dither->{state} ne 'DISA')){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf("$alarm Dither should be disabled 1 min before obs start for Large Dither\n");
        }


        # Find the dither state at the end of the observation
        my $obs_stop_dither;
        foreach my $dither (reverse @{$all_dither}) {
        if ($obs_tstop >= $dither->{time}) {
                $obs_stop_dither = $dither;
                last;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L795
  id: '042'
  line_number: 795
  orvdot: Need observation with large dither commanding
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("$alarm Dither should be disabled 1 min before obs start for Large Dither\n");
  title: Dither not disabled 1 min before obs star for large dither obs
  type: aca_check
- context: |2
                sprintf("$alarm Dither should be disabled 1 min before obs start for Large Dither\n");
        }


        # Find the dither state at the end of the observation
        my $obs_stop_dither;
        foreach my $dither (reverse @{$all_dither}) {
        if ($obs_tstop >= $dither->{time}) {
                $obs_stop_dither = $dither;
                last;
            }
        }
        # Check that the dither state at the end of the observation started 5 minutes before
        # the end (within time_tol)
        if ((abs($obs_tstop - $obs_stop_dither->{time} - 300) > $time_tol)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf("$alarm Last dither state for Large Dither should start 5 minutes before obs end.\n");
        }
        # Check that the dither state at the end of the observation is standard
        if (not standard_dither($obs_stop_dither)){
            push @{$self->{warn}},
                sprintf("$alarm Dither parameters not set to standard values before obs end\n");
        }

    }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L811
  id: '043'
  line_number: 811
  orvdot: Need observation with large dither commanding
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("$alarm Last dither state for Large Dither should start 5 minutes before obs end.\n");
  title: Change at end of large dither observation happens too early
  type: aca-check
- context: |2-
        my $obs_stop_dither;
        foreach my $dither (reverse @{$all_dither}) {
        if ($obs_tstop >= $dither->{time}) {
                $obs_stop_dither = $dither;
                last;
            }
        }
        # Check that the dither state at the end of the observation started 5 minutes before
        # the end (within time_tol)
        if ((abs($obs_tstop - $obs_stop_dither->{time} - 300) > $time_tol)){
            push @{$self->{warn}},
                sprintf("$alarm Last dither state for Large Dither should start 5 minutes before obs end.\n");
        }
        # Check that the dither state at the end of the observation is standard
        if (not standard_dither($obs_stop_dither)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf("$alarm Dither parameters not set to standard values before obs end\n");
        }

    }





    #############################################################################################
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L816
  id: '044'
  line_number: 816
  orvdot: Need observation with large dither commanding
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("$alarm Dither parameters not set to standard values before obs end\n");
  title: Dither parameters for large dither obsid not reset to standard before obs
    end
  type: aca_check
- context: |2-


    #############################################################################################
    sub check_bright_perigee{
    #############################################################################################
        my $self = shift;
        my $radmon = shift;
        my $min_mag = 9.0;
        my $min_n_stars = 3;

        # if this is an OR, just return
        return if (($self->{obsid} =~ /^\d+$/ && $self->{obsid} < 50000));

        # if radmon is undefined, warn and return
        if (not defined $radmon){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, "$alarm Perigee bright stars not being checked, no rad zone info available\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }

        # set the observation start as the end of the maneuver
        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        # if observation stop time is undefined, warn and return
        if (not defined $obs_tstop){
            push @{$self->{warn}}, "$alarm Perigee bright stars not being checked, no obs tstop available\n";
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L839
  id: '045'
  line_number: 839
  text: |-
    push @{$self->{warn}}, "$alarm Perigee bright stars not being checked, no rad zone info available\n";
  title: Rad zone data unavailable; could not figure out which obsids are perigee
    obs
  type: process
- context: |2-
        # if this is an OR, just return
        return if (($self->{obsid} =~ /^\d+$/ && $self->{obsid} < 50000));

        # if radmon is undefined, warn and return
        if (not defined $radmon){
          push @{$self->{warn}}, "$alarm Perigee bright stars not being checked, no rad zone info available\n";
        return;
        }

        # set the observation start as the end of the maneuver
        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        # if observation stop time is undefined, warn and return
        if (not defined $obs_tstop){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "$alarm Perigee bright stars not being checked, no obs tstop available\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }

        # is this obsid in perigee?  assume no to start
        my $in_perigee = 0;

        for my $rad (reverse @{$radmon}){
          next if ($rad->{time} > $obs_tstop);
          if ($rad->{state} eq 'DISA'){
            $in_perigee = 1;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L849
  id: '046'
  line_number: 849
  text: |-
    push @{$self->{warn}}, "$alarm Perigee bright stars not being checked, no obs tstop available\n";
  title: No obsid end time, so could not run perigee bright star check
  type: process
- context: |2
        }

        # nothing to do if not in perigee
        return if (not $in_perigee);

        my $c = find_command($self, 'MP_STARCAT');
        return if (not defined $c);

        # check for at least N bright stars
        my @bright_stars = grep { (defined $c->{"TYPE$_"})
                                  and ($c->{"TYPE$_"} =~ /BOT|GUI/)
                                  and ($c->{"GS_MAG$_"} < $min_mag) } (0 .. 16);
        my $bright_count = scalar(@bright_stars);
        if ($bright_count < $min_n_stars){
            if ($self->{special_case_er} == 1){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{fyi}}, "$info Only $bright_count star(s) brighter than $min_mag mag. "
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    . "Acceptable for Special Case ER\n";
            }
            else{
                push @{$self->{warn}}, "$alarm $bright_count star(s) brighter than $min_mag mag. "
                    . "Perigee requires at least $min_n_stars\n";
            }

        }
    }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L878
  id: '047'
  line_number: 878
  note: Expect special-case to be removed in ORVdot, can remove these checks post-transition.
  severity: info
  text: |-
    push @{$self->{fyi}}, "$info Only $bright_count star(s) brighter than $min_mag mag. "
    . "Acceptable for Special Case ER\n";
  title: Enough bright stars for a Special Case Er
  type: aca-check
- context: |2-

        my $c = find_command($self, 'MP_STARCAT');
        return if (not defined $c);

        # check for at least N bright stars
        my @bright_stars = grep { (defined $c->{"TYPE$_"})
                                  and ($c->{"TYPE$_"} =~ /BOT|GUI/)
                                  and ($c->{"GS_MAG$_"} < $min_mag) } (0 .. 16);
        my $bright_count = scalar(@bright_stars);
        if ($bright_count < $min_n_stars){
            if ($self->{special_case_er} == 1){
                push @{$self->{fyi}}, "$info Only $bright_count star(s) brighter than $min_mag mag. "
                    . "Acceptable for Special Case ER\n";
            }
            else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{warn}}, "$alarm $bright_count star(s) brighter than $min_mag mag. "
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    . "Perigee requires at least $min_n_stars\n";
            }

        }
    }


    #############################################################################################
    sub check_momentum_unload{
    #############################################################################################
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L882
  id: 048
  line_number: 882
  severity: red
  text: |-
    push @{$self->{warn}}, "$alarm $bright_count star(s) brighter than $min_mag mag. "
    . "Perigee requires at least $min_n_stars\n";
  title: Not enough bright stars for perigee observation
  type: aca_check
- context: |2-
            }

        }
    }


    #############################################################################################
    sub check_momentum_unload{
    #############################################################################################
        my $self = shift;
        my $backstop = shift;
        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        if (not defined $obs_tstart or not defined $obs_tstop){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "$alarm Momentum Unloads not checked.\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            return;
        }
        for my $entry (@{$backstop}){
            if ((defined $entry->{command}) and (defined $entry->{command}->{TLMSID})){
                if ($entry->{command}->{TLMSID} =~ /AOMUNLGR/){
                    if (($entry->{time} >= $obs_tstart) and ($entry->{time} <= $obs_tstop )){
                        push @{$self->{fyi}}, "$info Momentum Unload (AOMUNLGR) in NPM at " . $entry->{date} . "\n";
                    }
                }
            }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L899
  id: 049
  line_number: 899
  text: |-
    push @{$self->{warn}}, "$alarm Momentum Unloads not checked.\n";
  title: Could not determine obsid time, so could not check for momentum unloads
  type: process
- context: |-
    sub check_momentum_unload{
    #############################################################################################
        my $self = shift;
        my $backstop = shift;
        my $obs_tstart = $self->{obs_tstart};
        my $obs_tstop = $self->{obs_tstop};

        if (not defined $obs_tstart or not defined $obs_tstop){
            push @{$self->{warn}}, "$alarm Momentum Unloads not checked.\n";
            return;
        }
        for my $entry (@{$backstop}){
            if ((defined $entry->{command}) and (defined $entry->{command}->{TLMSID})){
                if ($entry->{command}->{TLMSID} =~ /AOMUNLGR/){
                    if (($entry->{time} >= $obs_tstart) and ($entry->{time} <= $obs_tstop )){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @{$self->{fyi}}, "$info Momentum Unload (AOMUNLGR) in NPM at " . $entry->{date} . "\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                }
            }
        }
    }

    #############################################################################################
    sub check_for_special_case_er{
    #############################################################################################
        my $self = shift;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L906
  id: '050'
  line_number: 906
  severity: info
  text: |-
    push @{$self->{fyi}}, "$info Momentum Unload (AOMUNLGR) in NPM at " . $entry->{date} . "\n";
  title: Unload in NPM
- context: |2-
        # and the pointings are the same
        # it is a special case ER
        $self->{special_case_er} = 0;
        if ($self->{obsid} =~ /^\d+$/
            and $self->{obsid} > 40000
            and $self->find_command("MP_STARCAT")
            and $self->{prev}
            and $self->{prev}->{obsid} =~ /^\d+$/
            and $self->{prev}->{obsid} < 40000
            and $self->{prev}->find_command("MP_STARCAT")
            and abs($self->{ra} - $self->{prev}->{ra}) < 0.001
            and abs($self->{dec} - $self->{prev}->{dec}) < 0.001
            and abs($self->{roll} - $self->{prev}->{roll}) < 0.001){
            if (($self->{obs_tstop} - $self->{obs_tstart}) < 10*60){
                $self->{special_case_er} = 1;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{fyi}}, "$info Special Case ER\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            else{
                push @{$self->{fyi}},
                sprintf("$info Same attitude as last obsid but too long (%.1f min) for Special Case ER\n", ($self->{obs_tstop} - $self->{obs_tstart})/60.);
            }
        }
    }

    #############################################################################################
    sub check_sim_position {
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L936
  id: '051'
  line_number: 936
  note: Expect special-case to be removed in ORVdot, can remove these checks post-transition.
  severity: info
  text: |-
    push @{$self->{fyi}}, "$info Special Case ER\n";
  title: Observation is a special case ER
  type: aca_check
- context: |2-
        if ($self->{obsid} =~ /^\d+$/
            and $self->{obsid} > 40000
            and $self->find_command("MP_STARCAT")
            and $self->{prev}
            and $self->{prev}->{obsid} =~ /^\d+$/
            and $self->{prev}->{obsid} < 40000
            and $self->{prev}->find_command("MP_STARCAT")
            and abs($self->{ra} - $self->{prev}->{ra}) < 0.001
            and abs($self->{dec} - $self->{prev}->{dec}) < 0.001
            and abs($self->{roll} - $self->{prev}->{roll}) < 0.001){
            if (($self->{obs_tstop} - $self->{obs_tstart}) < 10*60){
                $self->{special_case_er} = 1;
                push @{$self->{fyi}}, "$info Special Case ER\n";
            }
            else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{fyi}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                sprintf("$info Same attitude as last obsid but too long (%.1f min) for Special Case ER\n", ($self->{obs_tstop} - $self->{obs_tstart})/60.);
            }
        }
    }

    #############################################################################################
    sub check_sim_position {
    #############################################################################################
        my $self = shift;
        my @sim_trans = @_;        # Remaining values are SIMTRANS backstop cmds
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L939
  id: '052'
  line_number: 939
  note: Expect special-case to be removed in ORVdot, can remove these checks post-transition.
  severity: info
  text: |-
    push @{$self->{fyi}},
    sprintf("$info Same attitude as last obsid but too long (%.1f min) for Special Case ER\n", ($self->{obs_tstop} - $self->{obs_tstart})/60.);
  title: Obsid almost a special case ER
  type: aca_check
- context: |2-
                push @{$self->{fyi}},
                sprintf("$info Same attitude as last obsid but too long (%.1f min) for Special Case ER\n", ($self->{obs_tstop} - $self->{obs_tstart})/60.);
            }
        }
    }

    #############################################################################################
    sub check_sim_position {
    #############################################################################################
        my $self = shift;
        my @sim_trans = @_;        # Remaining values are SIMTRANS backstop cmds
        my $manvr;

        return unless (exists $self->{SIM_OFFSET_Z});
        unless ($manvr = find_command($self, "MP_TARGQUAT", -1)) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, "$alarm Missing MP_TARGQUAT cmd\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }

        # Set the expected SIM Z position (steps)
        my $sim_z = $Default_SIM_Z{$self->{SI}} + $self->{SIM_OFFSET_Z};

        foreach my $st (reverse @sim_trans) {
        if (not defined $manvr->{tstop}){
            push @{$self->{warn}}, "Maneuver times not defined; SIM checking failed!\n";
        }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L954
  id: '053'
  line_number: 954
  text: |-
    push @{$self->{warn}}, "$alarm Missing MP_TARGQUAT cmd\n";
  title: Missing MP_TARGQUAT
  type: process
- context: |2-
        my $self = shift;
        my @sim_trans = @_;        # Remaining values are SIMTRANS backstop cmds
        my $manvr;

        return unless (exists $self->{SIM_OFFSET_Z});
        unless ($manvr = find_command($self, "MP_TARGQUAT", -1)) {
        push @{$self->{warn}}, "$alarm Missing MP_TARGQUAT cmd\n";
        return;
        }

        # Set the expected SIM Z position (steps)
        my $sim_z = $Default_SIM_Z{$self->{SI}} + $self->{SIM_OFFSET_Z};

        foreach my $st (reverse @sim_trans) {
        if (not defined $manvr->{tstop}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "Maneuver times not defined; SIM checking failed!\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        else{
            if ($manvr->{tstop} >= $st->{time}) {
            my %par = Ska::Parse_CM_File::parse_params($st->{params});
            if (abs($par{POS} - $sim_z) > 4) {
    #        print STDERR "Yikes, SIM mismatch!  \n";
    #        print STDERR " self->{obsid} = $self->{obsid}\n";
    #        print STDERR " sim_offset_z = $self->{SIM_OFFSET_Z}   SI = $self->{SI}\n";
    #        print STDERR " st->{POS} = $par{POS}   sim_z = $sim_z   delta = ", $par{POS}-$sim_z,"\n";
                        # ACA-001
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L963
  id: '054'
  line_number: 963
  text: |-
    push @{$self->{warn}}, "Maneuver times not defined; SIM checking failed!\n";
  title: Could not check SIM position due to missing maneuver time
  type: process
- context: |2-
        my $sim_z = $Default_SIM_Z{$self->{SI}} + $self->{SIM_OFFSET_Z};

        foreach my $st (reverse @sim_trans) {
        if (not defined $manvr->{tstop}){
            push @{$self->{warn}}, "Maneuver times not defined; SIM checking failed!\n";
        }
        else{
            if ($manvr->{tstop} >= $st->{time}) {
            my %par = Ska::Parse_CM_File::parse_params($st->{params});
            if (abs($par{POS} - $sim_z) > 4) {
    #        print STDERR "Yikes, SIM mismatch!  \n";
    #        print STDERR " self->{obsid} = $self->{obsid}\n";
    #        print STDERR " sim_offset_z = $self->{SIM_OFFSET_Z}   SI = $self->{SI}\n";
    #        print STDERR " st->{POS} = $par{POS}   sim_z = $sim_z   delta = ", $par{POS}-$sim_z,"\n";
                        # ACA-001
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{warn}}, "$alarm SIM position mismatch:  OR=$sim_z  BACKSTOP=$par{POS}\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            last;
            }
        }
        }
    }

    #############################################################################################
    sub set_ok_no_starcat{
    #############################################################################################
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L974
  id: '055'
  line_number: 974
  text: |-
    push @{$self->{warn}}, "$alarm SIM position mismatch:  OR=$sim_z  BACKSTOP=$par{POS}\n";
  title: SIM position mismatch OR vs Backstop
  type: aca_check
- context: |2-
        my @yellow_warn = ();

        my $oflsid = $self->{dot_obsid};
        my $obsid = $self->{obsid};
        my $ok_no_starcat = $self->{ok_no_starcat};

       # Set slew error (arcsec) for this obsid, or 120 if not available
        my $slew_err;
        my $targquat;
        if ($targquat = find_command($self, "MP_TARGQUAT", -1)){
        $slew_err = $targquat->{man_err};
        }
        else{
        # if no target quaternion, warn and continue
        if (defined $ok_no_starcat){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{fyi}}, "$info No target/maneuver for obsid $obsid ($oflsid). OK for '$ok_no_starcat' ER. \n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        else{
          push @{$self->{warn}}, "$alarm No target/maneuver for obsid $obsid ($oflsid). \n";
        }
        }
        $slew_err = 120 if not defined $slew_err;

        # ACA-004
        # if no starcat, warn and quit this subroutine
        unless ($c = find_command($self, "MP_STARCAT")) {
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1100
  id: '056'
  line_number: 1100
  orvdot: No expected coverage due to removal of SIR concept (OK).
  severity: info
  text: |-
    push @{$self->{fyi}}, "$info No target/maneuver for obsid $obsid ($oflsid). OK for '$ok_no_starcat' ER. \n";
  title: SIR ER has no target/maneuver
  type: process
- context: |2-
        my $obsid = $self->{obsid};
        my $ok_no_starcat = $self->{ok_no_starcat};

       # Set slew error (arcsec) for this obsid, or 120 if not available
        my $slew_err;
        my $targquat;
        if ($targquat = find_command($self, "MP_TARGQUAT", -1)){
        $slew_err = $targquat->{man_err};
        }
        else{
        # if no target quaternion, warn and continue
        if (defined $ok_no_starcat){
          push @{$self->{fyi}}, "$info No target/maneuver for obsid $obsid ($oflsid). OK for '$ok_no_starcat' ER. \n";
        }
        else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, "$alarm No target/maneuver for obsid $obsid ($oflsid). \n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        }
        $slew_err = 120 if not defined $slew_err;

        # ACA-004
        # if no starcat, warn and quit this subroutine
        unless ($c = find_command($self, "MP_STARCAT")) {
        if (defined $ok_no_starcat){
            push @{$self->{fyi}}, "$info No star catalog for obsid $obsid ($oflsid). OK for '$ok_no_starcat' ER. \n";
            return;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1103
  id: '057'
  line_number: 1103
  severity: red
  text: |-
    push @{$self->{warn}}, "$alarm No target/maneuver for obsid $obsid ($oflsid). \n";
  title: Observation has no target/maneuver
  type: process
- context: |2
        else{
        # if no target quaternion, warn and continue
        if (defined $ok_no_starcat){
          push @{$self->{fyi}}, "$info No target/maneuver for obsid $obsid ($oflsid). OK for '$ok_no_starcat' ER. \n";
        }
        else{
          push @{$self->{warn}}, "$alarm No target/maneuver for obsid $obsid ($oflsid). \n";
        }
        }
        $slew_err = 120 if not defined $slew_err;

        # ACA-004
        # if no starcat, warn and quit this subroutine
        unless ($c = find_command($self, "MP_STARCAT")) {
        if (defined $ok_no_starcat){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}}, "$info No star catalog for obsid $obsid ($oflsid). OK for '$ok_no_starcat' ER. \n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            return;
        }
        push @{$self->{warn}}, "$alarm No star catalog for obsid $obsid ($oflsid). \n";
        return;
        }
        # Reset the minimum number of guide stars if a monitor window is commanded
        $min_guide -= scalar grep { $c->{"TYPE$_"} eq 'MON' } (1..16);

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1112
  id: 058
  line_number: 1112
  orvdot: No expected coverage due to removal of SIR concept (OK).
  severity: info
  text: |-
    push @{$self->{fyi}}, "$info No star catalog for obsid $obsid ($oflsid). OK for '$ok_no_starcat' ER. \n";
  title: SIR ER has no star catalog
  type: aca_check
- context: |2
          push @{$self->{fyi}}, "$info No target/maneuver for obsid $obsid ($oflsid). OK for '$ok_no_starcat' ER. \n";
        }
        else{
          push @{$self->{warn}}, "$alarm No target/maneuver for obsid $obsid ($oflsid). \n";
        }
        }
        $slew_err = 120 if not defined $slew_err;

        # ACA-004
        # if no starcat, warn and quit this subroutine
        unless ($c = find_command($self, "MP_STARCAT")) {
        if (defined $ok_no_starcat){
            push @{$self->{fyi}}, "$info No star catalog for obsid $obsid ($oflsid). OK for '$ok_no_starcat' ER. \n";
            return;
        }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, "$alarm No star catalog for obsid $obsid ($oflsid). \n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }
        # Reset the minimum number of guide stars if a monitor window is commanded
        $min_guide -= scalar grep { $c->{"TYPE$_"} eq 'MON' } (1..16);

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1115
  id: 059
  line_number: 1115
  severity: red
  text: |-
    push @{$self->{warn}}, "$alarm No star catalog for obsid $obsid ($oflsid). \n";
  title: Observation has no star catalog
  type: aca_check
- context: |2-
        if (defined $ok_no_starcat){
            push @{$self->{fyi}}, "$info No star catalog for obsid $obsid ($oflsid). OK for '$ok_no_starcat' ER. \n";
            return;
        }
        push @{$self->{warn}}, "$alarm No star catalog for obsid $obsid ($oflsid). \n";
        return;
        }
        # Reset the minimum number of guide stars if a monitor window is commanded
        $min_guide -= scalar grep { $c->{"TYPE$_"} eq 'MON' } (1..16);

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"$alarm Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"$alarm Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
        push @warn,"$alarm Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
        push @warn,"$alarm Too Few Guide Stars\n" if (@{$self->{gui}} < $min_guide);
        push @warn,"$alarm Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
        push @warn,"$alarm Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);

        # Match positions of fids in star catalog with expected, and verify a one to one
        # correspondance between FIDSEL command and star catalog.
        # Skip this for vehicle-only loads since fids will be turned off.
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1126
  id: '060'
  line_number: 1126
  text: |-
    push @warn,"$alarm Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
  title: Too few fid lights
  type: aca_check
- context: |2-
            push @{$self->{fyi}}, "$info No star catalog for obsid $obsid ($oflsid). OK for '$ok_no_starcat' ER. \n";
            return;
        }
        push @{$self->{warn}}, "$alarm No star catalog for obsid $obsid ($oflsid). \n";
        return;
        }
        # Reset the minimum number of guide stars if a monitor window is commanded
        $min_guide -= scalar grep { $c->{"TYPE$_"} eq 'MON' } (1..16);

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

        push @warn,"$alarm Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"$alarm Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
        push @warn,"$alarm Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
        push @warn,"$alarm Too Few Guide Stars\n" if (@{$self->{gui}} < $min_guide);
        push @warn,"$alarm Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
        push @warn,"$alarm Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);

        # Match positions of fids in star catalog with expected, and verify a one to one
        # correspondance between FIDSEL command and star catalog.
        # Skip this for vehicle-only loads since fids will be turned off.
        check_fids($self, $c, \@warn) unless $vehicle;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1127
  id: '061'
  line_number: 1127
  text: |-
    push @warn,"$alarm Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
    (@{$self->{fid}} > $min_fid && $is_science) ) ;
  title: Too many fid lights
  type: aca_check
- context: |2-
        }
        push @{$self->{warn}}, "$alarm No star catalog for obsid $obsid ($oflsid). \n";
        return;
        }
        # Reset the minimum number of guide stars if a monitor window is commanded
        $min_guide -= scalar grep { $c->{"TYPE$_"} eq 'MON' } (1..16);

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

        push @warn,"$alarm Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
        push @warn,"$alarm Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"$alarm Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"$alarm Too Few Guide Stars\n" if (@{$self->{gui}} < $min_guide);
        push @warn,"$alarm Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
        push @warn,"$alarm Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);

        # Match positions of fids in star catalog with expected, and verify a one to one
        # correspondance between FIDSEL command and star catalog.
        # Skip this for vehicle-only loads since fids will be turned off.
        check_fids($self, $c, \@warn) unless $vehicle;

        # store a list of the fid positions
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1129
  id: '062'
  line_number: 1129
  text: |-
    push @warn,"$alarm Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
  title: Too few acquistion stars
  type: aca_check
- context: |2-
        push @{$self->{warn}}, "$alarm No star catalog for obsid $obsid ($oflsid). \n";
        return;
        }
        # Reset the minimum number of guide stars if a monitor window is commanded
        $min_guide -= scalar grep { $c->{"TYPE$_"} eq 'MON' } (1..16);

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

        push @warn,"$alarm Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
        push @warn,"$alarm Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
        push @warn,"$alarm Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"$alarm Too Few Guide Stars\n" if (@{$self->{gui}} < $min_guide);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"$alarm Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
        push @warn,"$alarm Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);

        # Match positions of fids in star catalog with expected, and verify a one to one
        # correspondance between FIDSEL command and star catalog.
        # Skip this for vehicle-only loads since fids will be turned off.
        check_fids($self, $c, \@warn) unless $vehicle;

        # store a list of the fid positions
        my @fid_positions = map {{'y' => $c->{"YANG$_"}, 'z' => $c->{"ZANG$_"}}} @{$self->{fid}};
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1130
  id: '063'
  line_number: 1130
  text: |-
    push @warn,"$alarm Too Few Guide Stars\n" if (@{$self->{gui}} < $min_guide);
  title: Too few guide stars
  type: aca_check
- context: |2
        return;
        }
        # Reset the minimum number of guide stars if a monitor window is commanded
        $min_guide -= scalar grep { $c->{"TYPE$_"} eq 'MON' } (1..16);

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

        push @warn,"$alarm Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
        push @warn,"$alarm Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
        push @warn,"$alarm Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
        push @warn,"$alarm Too Few Guide Stars\n" if (@{$self->{gui}} < $min_guide);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"$alarm Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"$alarm Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);

        # Match positions of fids in star catalog with expected, and verify a one to one
        # correspondance between FIDSEL command and star catalog.
        # Skip this for vehicle-only loads since fids will be turned off.
        check_fids($self, $c, \@warn) unless $vehicle;

        # store a list of the fid positions
        my @fid_positions = map {{'y' => $c->{"YANG$_"}, 'z' => $c->{"ZANG$_"}}} @{$self->{fid}};
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1131
  id: '064'
  line_number: 1131
  text: |-
    push @warn,"$alarm Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
  title: Too many guide + fid
  type: aca_check
- context: |2-
        }
        # Reset the minimum number of guide stars if a monitor window is commanded
        $min_guide -= scalar grep { $c->{"TYPE$_"} eq 'MON' } (1..16);

        print STDERR "Checking star catalog for obsid $self->{obsid}\n";

        # Global checks on star/fid numbers
        # ACA-005 ACA-006 ACA-007 ACA-008 ACA-044

        push @warn,"$alarm Too Few Fid Lights\n" if (@{$self->{fid}} < $min_fid && $is_science);
        push @warn,"$alarm Too Many Fid Lights\n" if ( (@{$self->{fid}} > 0 && $is_er) ||
                               (@{$self->{fid}} > $min_fid && $is_science) ) ;
        push @warn,"$alarm Too Few Acquisition Stars\n" if (@{$self->{acq}} < $min_acq);
        push @warn,"$alarm Too Few Guide Stars\n" if (@{$self->{gui}} < $min_guide);
        push @warn,"$alarm Too Many GUIDE + FID\n" if (@{$self->{gui}} + @{$self->{fid}} + @{$self->{mon}} > 8);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,"$alarm Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX

        # Match positions of fids in star catalog with expected, and verify a one to one
        # correspondance between FIDSEL command and star catalog.
        # Skip this for vehicle-only loads since fids will be turned off.
        check_fids($self, $c, \@warn) unless $vehicle;

        # store a list of the fid positions
        my @fid_positions = map {{'y' => $c->{"YANG$_"}, 'z' => $c->{"ZANG$_"}}} @{$self->{fid}};

        foreach my $i (1..16) {
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1132
  id: '065'
  line_number: 1132
  text: |-
    push @warn,"$alarm Too Many Acquisition Stars\n" if (@{$self->{acq}} > 8);
  title: Too many acquisition stars
  type: aca_check
- aca_cl_id: '043'
  context: |2-
        my $search_err = ( (defined $type) and ($type =~ /BOT|ACQ/)) ? $slew_err : 4.0;

        # Find position extrema for smallest rectangle check
        if ( $type =~ /BOT|GUI/ ) {
            $max_y = ($max_y > $yag ) ? $max_y : $yag;
            $min_y = ($min_y < $yag ) ? $min_y : $yag;
            $max_z = ($max_z > $zag ) ? $max_z : $zag;
            $min_z = ($min_z < $zag ) ? $min_z : $zag;
        }
        next if ($type eq 'NUL');
        my $slot_dither = ($type =~ /FID/ ? 5.0 : $dither); # Pseudo-dither, depending on star or fid
        my $pix_slot_dither = $slot_dither / $ang_per_pix;

           # Warn if star not identified ACA-042
        if ( $type =~ /BOT|GUI|ACQ/ and not defined $c->{"GS_IDENTIFIED$i"}) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf("$alarm [%2d] Missing Star. No AGASC star near search center \n", $i);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

        # Warn if acquisition star has non-zero aspq1
        push @yellow_warn, sprintf "$alarm [%2d] Centroid Perturbation Warning.  %s: ASPQ1 = %2d\n",
        $i, $sid, $c->{"GS_ASPQ$i"}
        if ($type =~ /BOT|ACQ|GUI/ && defined $c->{"GS_ASPQ$i"} && $c->{"GS_ASPQ$i"} != 0);

        my $obs_min_cnt = 2;
        my $obs_bad_frac = 0.3;
        # Bad Acquisition Star
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1168
  id: '066'
  line_number: 1168
  text: |-
    push @warn, sprintf("$alarm [%2d] Missing Star. No AGASC star near search center \n", $i);
  title: No AGASC star near search box center
  type: aca_check
- context: |2-
            $max_y = ($max_y > $yag ) ? $max_y : $yag;
            $min_y = ($min_y < $yag ) ? $min_y : $yag;
            $max_z = ($max_z > $zag ) ? $max_z : $zag;
            $min_z = ($min_z < $zag ) ? $min_z : $zag;
        }
        next if ($type eq 'NUL');
        my $slot_dither = ($type =~ /FID/ ? 5.0 : $dither); # Pseudo-dither, depending on star or fid
        my $pix_slot_dither = $slot_dither / $ang_per_pix;

           # Warn if star not identified ACA-042
        if ( $type =~ /BOT|GUI|ACQ/ and not defined $c->{"GS_IDENTIFIED$i"}) {
            push @warn, sprintf("$alarm [%2d] Missing Star. No AGASC star near search center \n", $i);
        }

        # Warn if acquisition star has non-zero aspq1
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @yellow_warn, sprintf "$alarm [%2d] Centroid Perturbation Warning.  %s: ASPQ1 = %2d\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        $i, $sid, $c->{"GS_ASPQ$i"}
        if ($type =~ /BOT|ACQ|GUI/ && defined $c->{"GS_ASPQ$i"} && $c->{"GS_ASPQ$i"} != 0);

        my $obs_min_cnt = 2;
        my $obs_bad_frac = 0.3;
        # Bad Acquisition Star
        if ($type =~ /BOT|ACQ|GUI/){
        my $n_obs = $bad_acqs{$sid}{n_obs};
            my $n_noids = $bad_acqs{$sid}{n_noids};
            if (defined $db_stats->{acq}){
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1172
  id: '067'
  line_number: 1172
  text: |-
    push @yellow_warn, sprintf "$alarm [%2d] Centroid Perturbation Warning.  %s: ASPQ1 = %2d\n",
    $i, $sid, $c->{"GS_ASPQ$i"}
    if ($type =~ /BOT|ACQ|GUI/ && defined $c->{"GS_ASPQ$i"} && $c->{"GS_ASPQ$i"} != 0);
  title: Centroid Perturbation warning
  type: aca_check
- context: |2-
        push @yellow_warn, sprintf "$alarm [%2d] Centroid Perturbation Warning.  %s: ASPQ1 = %2d\n",
        $i, $sid, $c->{"GS_ASPQ$i"}
        if ($type =~ /BOT|ACQ|GUI/ && defined $c->{"GS_ASPQ$i"} && $c->{"GS_ASPQ$i"} != 0);

        my $obs_min_cnt = 2;
        my $obs_bad_frac = 0.3;
        # Bad Acquisition Star
        if ($type =~ /BOT|ACQ|GUI/){
        my $n_obs = $bad_acqs{$sid}{n_obs};
            my $n_noids = $bad_acqs{$sid}{n_noids};
            if (defined $db_stats->{acq}){
                $n_obs = $db_stats->{acq};
                $n_noids = $db_stats->{acq_noid};
            }
            if ($n_noids && $n_obs > $obs_min_cnt && $n_noids/$n_obs > $obs_bad_frac){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @yellow_warn, sprintf
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            "$alarm [%2d] Bad Acquisition Star. %s has %2d failed out of %2d attempts\n",
            $i, $sid, $n_noids, $n_obs;
            }
        }

        # Bad Guide Star
        if ($type =~ /BOT|GUI/){
            my $n_obs = $bad_gui{$sid}{n_obs};
            my $n_nbad = $bad_gui{$sid}{n_nbad};
            if (defined $db_stats->{gui}){
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1187
  id: 068
  line_number: 1187
  text: |-
    push @yellow_warn, sprintf
    "$alarm [%2d] Bad Acquisition Star. %s has %2d failed out of %2d attempts\n",
    $i, $sid, $n_noids, $n_obs;
  title: Acquisition star has failed N out of M attempts
  type: aca_check
- context: |2-
                push @yellow_warn, sprintf
            "$alarm [%2d] Bad Acquisition Star. %s has %2d failed out of %2d attempts\n",
            $i, $sid, $n_noids, $n_obs;
            }
        }

        # Bad Guide Star
        if ($type =~ /BOT|GUI/){
            my $n_obs = $bad_gui{$sid}{n_obs};
            my $n_nbad = $bad_gui{$sid}{n_nbad};
            if (defined $db_stats->{gui}){
                $n_obs = $db_stats->{gui};
                $n_nbad = $db_stats->{gui_bad};
            }
            if ($n_nbad && $n_obs > $obs_min_cnt && $n_nbad/$n_obs > $obs_bad_frac){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @yellow_warn, sprintf
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            "$alarm [%2d] Bad Guide Star. %s has bad data %2d of %2d attempts\n",
            $i, $sid, $n_nbad, $n_obs;
            }
        }

        # Bad AGASC ID ACA-031
        push @yellow_warn,sprintf "$alarm [%2d] Non-numeric AGASC ID.  %s\n",$i,$sid if ($sid ne '---' && $sid =~ /\D/);
        push @warn,sprintf "$alarm [%2d] Bad AGASC ID.  %s\n",$i,$sid if ($bad_id{$sid});

        # Set NOTES variable for marginal or bad star based on AGASC info
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1202
  id: 069
  line_number: 1202
  text: |-
    push @yellow_warn, sprintf
    "$alarm [%2d] Bad Guide Star. %s has bad data %2d of %2d attempts\n",
    $i, $sid, $n_nbad, $n_obs;
  title: Guide star has had bad data N out of M attempts
  type: aca_check
- context: |2-
        if ($type =~ /BOT|GUI/){
            my $n_obs = $bad_gui{$sid}{n_obs};
            my $n_nbad = $bad_gui{$sid}{n_nbad};
            if (defined $db_stats->{gui}){
                $n_obs = $db_stats->{gui};
                $n_nbad = $db_stats->{gui_bad};
            }
            if ($n_nbad && $n_obs > $obs_min_cnt && $n_nbad/$n_obs > $obs_bad_frac){
                push @yellow_warn, sprintf
            "$alarm [%2d] Bad Guide Star. %s has bad data %2d of %2d attempts\n",
            $i, $sid, $n_nbad, $n_obs;
            }
        }

        # Bad AGASC ID ACA-031
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @yellow_warn,sprintf "$alarm [%2d] Non-numeric AGASC ID.  %s\n",$i,$sid if ($sid ne '---' && $sid =~ /\D/);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,sprintf "$alarm [%2d] Bad AGASC ID.  %s\n",$i,$sid if ($bad_id{$sid});

        # Set NOTES variable for marginal or bad star based on AGASC info
        $c->{"GS_NOTES$i"} = '';
        my $note = '';
        my $marginal_note = '';
        if (defined $c->{"GS_CLASS$i"}) {
            $c->{"GS_NOTES$i"} .= 'b' if ($c->{"GS_CLASS$i"} != 0);
            # ignore precision errors in color
            my $color = sprintf('%.7f', $c->{"GS_BV$i"});
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1209
  id: '070'
  line_number: 1209
  severity: yellow
  text: |-
    push @yellow_warn,sprintf "$alarm [%2d] Non-numeric AGASC ID.  %s\n",$i,$sid if ($sid ne '---' && $sid =~ /\D/);
  title: AGASC ID is non-numeric
  type: aca_check
- context: |2-
            my $n_obs = $bad_gui{$sid}{n_obs};
            my $n_nbad = $bad_gui{$sid}{n_nbad};
            if (defined $db_stats->{gui}){
                $n_obs = $db_stats->{gui};
                $n_nbad = $db_stats->{gui_bad};
            }
            if ($n_nbad && $n_obs > $obs_min_cnt && $n_nbad/$n_obs > $obs_bad_frac){
                push @yellow_warn, sprintf
            "$alarm [%2d] Bad Guide Star. %s has bad data %2d of %2d attempts\n",
            $i, $sid, $n_nbad, $n_obs;
            }
        }

        # Bad AGASC ID ACA-031
        push @yellow_warn,sprintf "$alarm [%2d] Non-numeric AGASC ID.  %s\n",$i,$sid if ($sid ne '---' && $sid =~ /\D/);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn,sprintf "$alarm [%2d] Bad AGASC ID.  %s\n",$i,$sid if ($bad_id{$sid});
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX

        # Set NOTES variable for marginal or bad star based on AGASC info
        $c->{"GS_NOTES$i"} = '';
        my $note = '';
        my $marginal_note = '';
        if (defined $c->{"GS_CLASS$i"}) {
            $c->{"GS_NOTES$i"} .= 'b' if ($c->{"GS_CLASS$i"} != 0);
            # ignore precision errors in color
            my $color = sprintf('%.7f', $c->{"GS_BV$i"});
            $c->{"GS_NOTES$i"} .= 'c' if ($color eq '0.7000000'); # ACA-033
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1210
  id: '071'
  line_number: 1210
  note: Fix the warning text since it is misleading.
  text: |-
    push @warn,sprintf "$alarm [%2d] Bad AGASC ID.  %s\n",$i,$sid if ($bad_id{$sid});
  title: Star is in bad star list
  type: aca_check
- context: |2-
            $c->{"GS_NOTES$i"} .= 'b' if ($c->{"GS_CLASS$i"} != 0);
            # ignore precision errors in color
            my $color = sprintf('%.7f', $c->{"GS_BV$i"});
            $c->{"GS_NOTES$i"} .= 'c' if ($color eq '0.7000000'); # ACA-033
                $c->{"GS_NOTES$i"} .= 'C' if ($color eq '1.5000000') && ($mag > 10.0);
            $c->{"GS_NOTES$i"} .= 'm' if ($c->{"GS_MAGERR$i"} > 99);
            $c->{"GS_NOTES$i"} .= 'p' if ($c->{"GS_POSERR$i"} > 399);
            $note = sprintf("B-V = %.3f, Mag_Err = %.2f, Pos_Err = %.2f",
                                $c->{"GS_BV$i"}, ($c->{"GS_MAGERR$i"})/100, ($c->{"GS_POSERR$i"})/1000)
                    if ($c->{"GS_NOTES$i"} =~ /[Ccmp]/);
            $marginal_note = sprintf("$alarm [%2d] Marginal star. %s\n",$i,$note) if ($c->{"GS_NOTES$i"} =~ /[^b]/);
                # for B-V = 0.7 and guide, red warnings
                # for all others, including (B-V = 1.5 and guide), yellow warning
                if ( $marginal_note ){
                    if ($color eq '0.7000000' && $type =~ /BOT|GUI/ ) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @warn, $marginal_note;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                    else{
                        push @yellow_warn, $marginal_note;
                    }
                }
            push @warn, sprintf("$alarm [%2d] Bad star.  Class = %s %s\n", $i,$c->{"GS_CLASS$i"},$note) if ($c->{"GS_NOTES$i"} =~ /b/);
        }

        # Star/fid outside of CCD boundaries
            # ACA-019 ACA-020 ACA-021
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1232
  id: '072'
  line_number: 1232
  severity: red
  text: |-
    push @warn, $marginal_note;
  title: Marginal star (0.7 color on BOT or GUI)
  type: aca_check
- context: |2-
            $c->{"GS_NOTES$i"} .= 'c' if ($color eq '0.7000000'); # ACA-033
                $c->{"GS_NOTES$i"} .= 'C' if ($color eq '1.5000000') && ($mag > 10.0);
            $c->{"GS_NOTES$i"} .= 'm' if ($c->{"GS_MAGERR$i"} > 99);
            $c->{"GS_NOTES$i"} .= 'p' if ($c->{"GS_POSERR$i"} > 399);
            $note = sprintf("B-V = %.3f, Mag_Err = %.2f, Pos_Err = %.2f",
                                $c->{"GS_BV$i"}, ($c->{"GS_MAGERR$i"})/100, ($c->{"GS_POSERR$i"})/1000)
                    if ($c->{"GS_NOTES$i"} =~ /[Ccmp]/);
            $marginal_note = sprintf("$alarm [%2d] Marginal star. %s\n",$i,$note) if ($c->{"GS_NOTES$i"} =~ /[^b]/);
                # for B-V = 0.7 and guide, red warnings
                # for all others, including (B-V = 1.5 and guide), yellow warning
                if ( $marginal_note ){
                    if ($color eq '0.7000000' && $type =~ /BOT|GUI/ ) {
                        push @warn, $marginal_note;
                    }
                    else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        push @yellow_warn, $marginal_note;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                    }
                }
            push @warn, sprintf("$alarm [%2d] Bad star.  Class = %s %s\n", $i,$c->{"GS_CLASS$i"},$note) if ($c->{"GS_NOTES$i"} =~ /b/);
        }

        # Star/fid outside of CCD boundaries
            # ACA-019 ACA-020 ACA-021
        my ($pixel_row, $pixel_col);
        eval{
            ($pixel_row, $pixel_col) = toPixels( $yag, $zag);
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1235
  id: '073'
  line_number: 1235
  severity: yellow
  text: |-
    push @yellow_warn, $marginal_note;
  title: Marginal star (1.5 color or bad poserr or magerr)
  type: aca_check
- context: |2-
            $c->{"GS_NOTES$i"} .= 'p' if ($c->{"GS_POSERR$i"} > 399);
            $note = sprintf("B-V = %.3f, Mag_Err = %.2f, Pos_Err = %.2f",
                                $c->{"GS_BV$i"}, ($c->{"GS_MAGERR$i"})/100, ($c->{"GS_POSERR$i"})/1000)
                    if ($c->{"GS_NOTES$i"} =~ /[Ccmp]/);
            $marginal_note = sprintf("$alarm [%2d] Marginal star. %s\n",$i,$note) if ($c->{"GS_NOTES$i"} =~ /[^b]/);
                # for B-V = 0.7 and guide, red warnings
                # for all others, including (B-V = 1.5 and guide), yellow warning
                if ( $marginal_note ){
                    if ($color eq '0.7000000' && $type =~ /BOT|GUI/ ) {
                        push @warn, $marginal_note;
                    }
                    else{
                        push @yellow_warn, $marginal_note;
                    }
                }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf("$alarm [%2d] Bad star.  Class = %s %s\n", $i,$c->{"GS_CLASS$i"},$note) if ($c->{"GS_NOTES$i"} =~ /b/);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

        # Star/fid outside of CCD boundaries
            # ACA-019 ACA-020 ACA-021
        my ($pixel_row, $pixel_col);
        eval{
            ($pixel_row, $pixel_col) = toPixels( $yag, $zag);
            };

        # toPixels throws exception if angle off the CCD altogether
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1238
  id: '074'
  line_number: 1238
  severity: red
  text: |-
    push @warn, sprintf("$alarm [%2d] Bad star.  Class = %s %s\n", $i,$c->{"GS_CLASS$i"},$note) if ($c->{"GS_NOTES$i"} =~ /b/);
  title: Bad star class
  type: aca_check
- context: |2-
                }
            push @warn, sprintf("$alarm [%2d] Bad star.  Class = %s %s\n", $i,$c->{"GS_CLASS$i"},$note) if ($c->{"GS_NOTES$i"} =~ /b/);
        }

        # Star/fid outside of CCD boundaries
            # ACA-019 ACA-020 ACA-021
        my ($pixel_row, $pixel_col);
        eval{
            ($pixel_row, $pixel_col) = toPixels( $yag, $zag);
            };

        # toPixels throws exception if angle off the CCD altogether
        # respond to that one and warn on all others
        if ($@) {
            if ($@ =~ /.*Coordinate off of CCD.*/ ){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf "$alarm [%2d] Angle Off CCD.\n",$i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            else {
            push @warn, sprintf "$alarm [%2d] Boundary Checks failed. toPixels() said: $@ \n",$i,$i;
            }
        }
        else{
            if (   $pixel_row > $row_max - $pix_slot_dither || $pixel_row < $row_min + $pix_slot_dither
               || $pixel_col > $col_max - $pix_slot_dither || $pixel_col < $col_min + $pix_slot_dither) {
                push @warn,sprintf "$alarm [%2d] Angle Too Large.\n",$i;
            }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1252
  id: '075'
  line_number: 1252
  severity: red
  text: |-
    push @warn, sprintf "$alarm [%2d] Angle Off CCD.\n",$i;
  title: Star or Fid off CCD
  type: aca_check
- context: |2-

        # Star/fid outside of CCD boundaries
            # ACA-019 ACA-020 ACA-021
        my ($pixel_row, $pixel_col);
        eval{
            ($pixel_row, $pixel_col) = toPixels( $yag, $zag);
            };

        # toPixels throws exception if angle off the CCD altogether
        # respond to that one and warn on all others
        if ($@) {
            if ($@ =~ /.*Coordinate off of CCD.*/ ){
            push @warn, sprintf "$alarm [%2d] Angle Off CCD.\n",$i;
            }
            else {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf "$alarm [%2d] Boundary Checks failed. toPixels() said: $@ \n",$i,$i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
        }
        else{
            if (   $pixel_row > $row_max - $pix_slot_dither || $pixel_row < $row_min + $pix_slot_dither
               || $pixel_col > $col_max - $pix_slot_dither || $pixel_col < $col_min + $pix_slot_dither) {
                push @warn,sprintf "$alarm [%2d] Angle Too Large.\n",$i;
            }
        }

            # Quandrant boundary interference ACA-013 ACA-014 (and ACA-012 if it were actually a check)
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1255
  id: '076'
  line_number: 1255
  text: |-
    push @warn, sprintf "$alarm [%2d] Boundary Checks failed. toPixels() said: $@ \n",$i,$i;
  title: Code to calculate CCD position failed
  type: code
- context: |2-
            };

        # toPixels throws exception if angle off the CCD altogether
        # respond to that one and warn on all others
        if ($@) {
            if ($@ =~ /.*Coordinate off of CCD.*/ ){
            push @warn, sprintf "$alarm [%2d] Angle Off CCD.\n",$i;
            }
            else {
            push @warn, sprintf "$alarm [%2d] Boundary Checks failed. toPixels() said: $@ \n",$i,$i;
            }
        }
        else{
            if (   $pixel_row > $row_max - $pix_slot_dither || $pixel_row < $row_min + $pix_slot_dither
               || $pixel_col > $col_max - $pix_slot_dither || $pixel_col < $col_min + $pix_slot_dither) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @warn,sprintf "$alarm [%2d] Angle Too Large.\n",$i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
        }

            # Quandrant boundary interference ACA-013 ACA-014 (and ACA-012 if it were actually a check)
        push @yellow_warn, sprintf "$alarm [%2d] Quadrant Boundary. \n",$i
            unless ($type eq 'ACQ' or $type eq 'MON' or
                (abs($yag-$y0) > $qb_dist + $slot_dither and abs($zag-$z0) > $qb_dist + $slot_dither ));

        # Faint and bright limits ~ACA-009 ACA-010
        if ($type ne 'MON' and $mag ne '---') {
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1261
  id: '077'
  line_number: 1261
  text: |-
    push @warn,sprintf "$alarm [%2d] Angle Too Large.\n",$i;
  title: Star or fid outside allowed CCD region
  type: aca_check
- context: |2-
            if ($@ =~ /.*Coordinate off of CCD.*/ ){
            push @warn, sprintf "$alarm [%2d] Angle Off CCD.\n",$i;
            }
            else {
            push @warn, sprintf "$alarm [%2d] Boundary Checks failed. toPixels() said: $@ \n",$i,$i;
            }
        }
        else{
            if (   $pixel_row > $row_max - $pix_slot_dither || $pixel_row < $row_min + $pix_slot_dither
               || $pixel_col > $col_max - $pix_slot_dither || $pixel_col < $col_min + $pix_slot_dither) {
                push @warn,sprintf "$alarm [%2d] Angle Too Large.\n",$i;
            }
        }

            # Quandrant boundary interference ACA-013 ACA-014 (and ACA-012 if it were actually a check)
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @yellow_warn, sprintf "$alarm [%2d] Quadrant Boundary. \n",$i
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            unless ($type eq 'ACQ' or $type eq 'MON' or
                (abs($yag-$y0) > $qb_dist + $slot_dither and abs($zag-$z0) > $qb_dist + $slot_dither ));

        # Faint and bright limits ~ACA-009 ACA-010
        if ($type ne 'MON' and $mag ne '---') {

            if ($mag < $mag_bright or $mag > $self->{mag_faint_red}) {
            push @warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i,$mag;
            }
            elsif ($mag > $self->{mag_faint_yellow}) {
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1266
  id: 078
  line_number: 1266
  text: |-
    push @yellow_warn, sprintf "$alarm [%2d] Quadrant Boundary. \n",$i
    unless ($type eq 'ACQ' or $type eq 'MON' or
    (abs($yag-$y0) > $qb_dist + $slot_dither and abs($zag-$z0) > $qb_dist + $slot_dither ));
  title: Guide star or fid too close to quadrant boundary
  type: aca_check
- context: |2-
            if (   $pixel_row > $row_max - $pix_slot_dither || $pixel_row < $row_min + $pix_slot_dither
               || $pixel_col > $col_max - $pix_slot_dither || $pixel_col < $col_min + $pix_slot_dither) {
                push @warn,sprintf "$alarm [%2d] Angle Too Large.\n",$i;
            }
        }

            # Quandrant boundary interference ACA-013 ACA-014 (and ACA-012 if it were actually a check)
        push @yellow_warn, sprintf "$alarm [%2d] Quadrant Boundary. \n",$i
            unless ($type eq 'ACQ' or $type eq 'MON' or
                (abs($yag-$y0) > $qb_dist + $slot_dither and abs($zag-$z0) > $qb_dist + $slot_dither ));

        # Faint and bright limits ~ACA-009 ACA-010
        if ($type ne 'MON' and $mag ne '---') {

            if ($mag < $mag_bright or $mag > $self->{mag_faint_red}) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i,$mag;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            elsif ($mag > $self->{mag_faint_yellow}) {
            push @yellow_warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i,$mag;
            }

        }

        # FID magnitude limits ACA-011
        if ($type eq 'FID') {
            if ($mag =~ /---/ or $mag < $fid_bright or $mag > $fid_faint) {
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1274
  id: 079
  line_number: 1274
  severity: red
  text: |-
    push @warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i,$mag;
  title: Star too bright or too faint (red limit)
  type: aca_check
- context: |2-
            }
        }

            # Quandrant boundary interference ACA-013 ACA-014 (and ACA-012 if it were actually a check)
        push @yellow_warn, sprintf "$alarm [%2d] Quadrant Boundary. \n",$i
            unless ($type eq 'ACQ' or $type eq 'MON' or
                (abs($yag-$y0) > $qb_dist + $slot_dither and abs($zag-$z0) > $qb_dist + $slot_dither ));

        # Faint and bright limits ~ACA-009 ACA-010
        if ($type ne 'MON' and $mag ne '---') {

            if ($mag < $mag_bright or $mag > $self->{mag_faint_red}) {
            push @warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i,$mag;
            }
            elsif ($mag > $self->{mag_faint_yellow}) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @yellow_warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i,$mag;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }

        }

        # FID magnitude limits ACA-011
        if ($type eq 'FID') {
            if ($mag =~ /---/ or $mag < $fid_bright or $mag > $fid_faint) {
            push @warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i, $mag =~ /---/ ? 0 : $mag;
            }
        }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1277
  id: 080
  line_number: 1277
  severity: yellow
  text: |-
    push @yellow_warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i,$mag;
  title: Star too faint (yellow limit)
  type: aca_check
- context: |2-
        # Faint and bright limits ~ACA-009 ACA-010
        if ($type ne 'MON' and $mag ne '---') {

            if ($mag < $mag_bright or $mag > $self->{mag_faint_red}) {
            push @warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i,$mag;
            }
            elsif ($mag > $self->{mag_faint_yellow}) {
            push @yellow_warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i,$mag;
            }

        }

        # FID magnitude limits ACA-011
        if ($type eq 'FID') {
            if ($mag =~ /---/ or $mag < $fid_bright or $mag > $fid_faint) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i, $mag =~ /---/ ? 0 : $mag;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
        }

            # Check for situation that occurred for obsid 14577 with a fid light
            # inside the search box (PR #50).
            if ($type =~ /BOT|ACQ/){
                for my $fpos (@fid_positions){
                    if (abs($fpos->{y} - $yag) < $halfw and abs($fpos->{z} - $zag) < $halfw){
                        if ($type =~ /ACQ/){
                            push @yellow_warn, sprintf "$alarm [%2d] Fid light in search box\n", $i;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1285
  id: 081
  line_number: 1285
  text: |-
    push @warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i, $mag =~ /---/ ? 0 : $mag;
  title: Fid magnitude limit violation
  type: aca_check
- context: |2-
        }

        # FID magnitude limits ACA-011
        if ($type eq 'FID') {
            if ($mag =~ /---/ or $mag < $fid_bright or $mag > $fid_faint) {
            push @warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i, $mag =~ /---/ ? 0 : $mag;
            }
        }

            # Check for situation that occurred for obsid 14577 with a fid light
            # inside the search box (PR #50).
            if ($type =~ /BOT|ACQ/){
                for my $fpos (@fid_positions){
                    if (abs($fpos->{y} - $yag) < $halfw and abs($fpos->{z} - $zag) < $halfw){
                        if ($type =~ /ACQ/){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                            push @yellow_warn, sprintf "$alarm [%2d] Fid light in search box\n", $i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        }
                        else{
                            push @warn, sprintf "$alarm [%2d] Fid light in search box\n", $i;
                        }
                    }
                }
            }

            # ACA-041
        if ($type =~ /BOT|GUI|ACQ/){
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1295
  id: 082
  line_number: 1295
  severity: yellow
  text: |-
    push @yellow_warn, sprintf "$alarm [%2d] Fid light in search box\n", $i;
  title: Fid light in search box (acquisition star)
  type: aca_check
- context: |2-
        if ($type eq 'FID') {
            if ($mag =~ /---/ or $mag < $fid_bright or $mag > $fid_faint) {
            push @warn, sprintf "$alarm [%2d] Magnitude.  %6.3f\n",$i, $mag =~ /---/ ? 0 : $mag;
            }
        }

            # Check for situation that occurred for obsid 14577 with a fid light
            # inside the search box (PR #50).
            if ($type =~ /BOT|ACQ/){
                for my $fpos (@fid_positions){
                    if (abs($fpos->{y} - $yag) < $halfw and abs($fpos->{z} - $zag) < $halfw){
                        if ($type =~ /ACQ/){
                            push @yellow_warn, sprintf "$alarm [%2d] Fid light in search box\n", $i;
                        }
                        else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                            push @warn, sprintf "$alarm [%2d] Fid light in search box\n", $i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        }
                    }
                }
            }

            # ACA-041
        if ($type =~ /BOT|GUI|ACQ/){
            if (( $maxmag =~ /---/) or ($mag =~ /---/)){
            push @warn, sprintf "$alarm [%2d] Magnitude.  MAG or MAGMAX not defined \n",$i;
            }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1298
  id: 083
  line_number: 1298
  severity: red
  text: |-
    push @warn, sprintf "$alarm [%2d] Fid light in search box\n", $i;
  title: Fid light in search box (BOT)
  type: aca_check
- context: |2+
                for my $fpos (@fid_positions){
                    if (abs($fpos->{y} - $yag) < $halfw and abs($fpos->{z} - $zag) < $halfw){
                        if ($type =~ /ACQ/){
                            push @yellow_warn, sprintf "$alarm [%2d] Fid light in search box\n", $i;
                        }
                        else{
                            push @warn, sprintf "$alarm [%2d] Fid light in search box\n", $i;
                        }
                    }
                }
            }

            # ACA-041
        if ($type =~ /BOT|GUI|ACQ/){
            if (( $maxmag =~ /---/) or ($mag =~ /---/)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf "$alarm [%2d] Magnitude.  MAG or MAGMAX not defined \n",$i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            else{
            if (($maxmag - $mag) < $mag_faint_slot_diff){
                my $slot_diff = $maxmag - $mag;
                push @warn, sprintf "$alarm [%2d] Magnitude.  MAXMAG - MAG = %1.2f < $mag_faint_slot_diff \n",$i,$slot_diff;
            }
            }
        }

  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1307
  id: 084
  line_number: 1307
  text: |-
    push @warn, sprintf "$alarm [%2d] Magnitude.  MAG or MAGMAX not defined \n",$i;
  title: Star magnitude error.  MAG or MAXMAG not defined
  type: aca_check
- context: |2
                        else{
                            push @warn, sprintf "$alarm [%2d] Fid light in search box\n", $i;
                        }
                    }
                }
            }

            # ACA-041
        if ($type =~ /BOT|GUI|ACQ/){
            if (( $maxmag =~ /---/) or ($mag =~ /---/)){
            push @warn, sprintf "$alarm [%2d] Magnitude.  MAG or MAGMAX not defined \n",$i;
            }
            else{
            if (($maxmag - $mag) < $mag_faint_slot_diff){
                my $slot_diff = $maxmag - $mag;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @warn, sprintf "$alarm [%2d] Magnitude.  MAXMAG - MAG = %1.2f < $mag_faint_slot_diff \n",$i,$slot_diff;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            }
        }


        # Search box too large ACA-018
        if ($type ne 'MON' and $c->{"HALFW$i"} > 200) {
            push @warn, sprintf "$alarm [%2d] Search Box Size. Search Box Too Large. \n",$i;
        }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1312
  id: 085
  line_number: 1312
  text: |-
    push @warn, sprintf "$alarm [%2d] Magnitude.  MAXMAG - MAG = %1.2f < $mag_faint_slot_diff \n",$i,$slot_diff;
  title: Magnitude error.  MAXMAG - MAG < required amount
  type: aca_check
- context: |2-
        if ($type =~ /BOT|GUI|ACQ/){
            if (( $maxmag =~ /---/) or ($mag =~ /---/)){
            push @warn, sprintf "$alarm [%2d] Magnitude.  MAG or MAGMAX not defined \n",$i;
            }
            else{
            if (($maxmag - $mag) < $mag_faint_slot_diff){
                my $slot_diff = $maxmag - $mag;
                push @warn, sprintf "$alarm [%2d] Magnitude.  MAXMAG - MAG = %1.2f < $mag_faint_slot_diff \n",$i,$slot_diff;
            }
            }
        }


        # Search box too large ACA-018
        if ($type ne 'MON' and $c->{"HALFW$i"} > 200) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf "$alarm [%2d] Search Box Size. Search Box Too Large. \n",$i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

        # ACQ/BOTH search box smaller than slew error ACA-015
        if (($type =~ /BOT|ACQ/) and $c->{"HALFW$i"} < $slew_err) {
            push @warn, sprintf "$alarm [%2d] Search Box Size. Search Box smaller than slew error \n",$i;
        }


        # Check that readout sizes are all 6x6 for science observations ACA-027
        if ($is_science && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "6x6"){
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1320
  id: 086
  line_number: 1320
  text: |-
    push @warn, sprintf "$alarm [%2d] Search Box Size. Search Box Too Large. \n",$i;
  title: Search box too large
  type: aca_check
- context: |2-
            if (($maxmag - $mag) < $mag_faint_slot_diff){
                my $slot_diff = $maxmag - $mag;
                push @warn, sprintf "$alarm [%2d] Magnitude.  MAXMAG - MAG = %1.2f < $mag_faint_slot_diff \n",$i,$slot_diff;
            }
            }
        }


        # Search box too large ACA-018
        if ($type ne 'MON' and $c->{"HALFW$i"} > 200) {
            push @warn, sprintf "$alarm [%2d] Search Box Size. Search Box Too Large. \n",$i;
        }

        # ACQ/BOTH search box smaller than slew error ACA-015
        if (($type =~ /BOT|ACQ/) and $c->{"HALFW$i"} < $slew_err) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf "$alarm [%2d] Search Box Size. Search Box smaller than slew error \n",$i;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }


        # Check that readout sizes are all 6x6 for science observations ACA-027
        if ($is_science && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "6x6"){
          if (($c->{"SIZE$i"} eq "8x8") and ($or->{HAS_MON}) and ($c->{"IMNUM$i"} == 7 )){
            push @{$self->{fyi}}, sprintf("$info [%2d] Readout Size. 8x8 Stealth MON?", $i);
          }
          else{
            push @warn, sprintf("$alarm [%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1325
  id: 087
  line_number: 1325
  text: |-
    push @warn, sprintf "$alarm [%2d] Search Box Size. Search Box smaller than slew error \n",$i;
  title: Search box smaller than maneuver error
  type: aca_check
- context: |2-

        # Search box too large ACA-018
        if ($type ne 'MON' and $c->{"HALFW$i"} > 200) {
            push @warn, sprintf "$alarm [%2d] Search Box Size. Search Box Too Large. \n",$i;
        }

        # ACQ/BOTH search box smaller than slew error ACA-015
        if (($type =~ /BOT|ACQ/) and $c->{"HALFW$i"} < $slew_err) {
            push @warn, sprintf "$alarm [%2d] Search Box Size. Search Box smaller than slew error \n",$i;
        }


        # Check that readout sizes are all 6x6 for science observations ACA-027
        if ($is_science && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "6x6"){
          if (($c->{"SIZE$i"} eq "8x8") and ($or->{HAS_MON}) and ($c->{"IMNUM$i"} == 7 )){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}}, sprintf("$info [%2d] Readout Size. 8x8 Stealth MON?", $i);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          }
          else{
            push @warn, sprintf("$alarm [%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
          }
        }

        # Check that readout sizes are all 8x8 for engineering observations ACA-028
        if ($is_er && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "8x8"){
            push @warn, sprintf("$alarm [%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
        }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1332
  id: 088
  line_number: 1332
  text: |-
    push @{$self->{fyi}}, sprintf("$info [%2d] Readout Size. 8x8 Stealth MON?", $i);
  title: Unexpected 8x8 readout size, MON in OR. GUI as MON?
  type: aca_check
- context: |2-
            push @warn, sprintf "$alarm [%2d] Search Box Size. Search Box Too Large. \n",$i;
        }

        # ACQ/BOTH search box smaller than slew error ACA-015
        if (($type =~ /BOT|ACQ/) and $c->{"HALFW$i"} < $slew_err) {
            push @warn, sprintf "$alarm [%2d] Search Box Size. Search Box smaller than slew error \n",$i;
        }


        # Check that readout sizes are all 6x6 for science observations ACA-027
        if ($is_science && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "6x6"){
          if (($c->{"SIZE$i"} eq "8x8") and ($or->{HAS_MON}) and ($c->{"IMNUM$i"} == 7 )){
            push @{$self->{fyi}}, sprintf("$info [%2d] Readout Size. 8x8 Stealth MON?", $i);
          }
          else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf("$alarm [%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          }
        }

        # Check that readout sizes are all 8x8 for engineering observations ACA-028
        if ($is_er && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "8x8"){
            push @warn, sprintf("$alarm [%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
        }

        # Check that readout sizes are all 8x8 for FID lights ACA-029
        push @warn, sprintf("$alarm [%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"})
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1335
  id: 089
  line_number: 1335
  text: |-
    push @warn, sprintf("$alarm [%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
  title: Readout size should be 6x6 (OR BOT/GUI/ACQ)
  type: aca_check
- context: |2
        }


        # Check that readout sizes are all 6x6 for science observations ACA-027
        if ($is_science && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "6x6"){
          if (($c->{"SIZE$i"} eq "8x8") and ($or->{HAS_MON}) and ($c->{"IMNUM$i"} == 7 )){
            push @{$self->{fyi}}, sprintf("$info [%2d] Readout Size. 8x8 Stealth MON?", $i);
          }
          else{
            push @warn, sprintf("$alarm [%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
          }
        }

        # Check that readout sizes are all 8x8 for engineering observations ACA-028
        if ($is_er && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "8x8"){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, sprintf("$alarm [%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

        # Check that readout sizes are all 8x8 for FID lights ACA-029
        push @warn, sprintf("$alarm [%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"})
            if ($type =~ /FID/  && $c->{"SIZE$i"} ne "8x8");

        # Check that readout size is 8x8 for monitor windows ACA-030
        push @warn, sprintf("$alarm [%2d] Readout Size. %s Should be 8x8\n", $i, $c->{"SIZE$i"})
            if ($type =~ /MON/  && $c->{"SIZE$i"} ne "8x8");
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1341
  id: 090
  line_number: 1341
  text: |-
    push @warn, sprintf("$alarm [%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
  title: Readout size should be 8x8 (ER BOT/GUI/ACQ)
  type: aca_check
- context: |2-
        if ($is_science && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "6x6"){
          if (($c->{"SIZE$i"} eq "8x8") and ($or->{HAS_MON}) and ($c->{"IMNUM$i"} == 7 )){
            push @{$self->{fyi}}, sprintf("$info [%2d] Readout Size. 8x8 Stealth MON?", $i);
          }
          else{
            push @warn, sprintf("$alarm [%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
          }
        }

        # Check that readout sizes are all 8x8 for engineering observations ACA-028
        if ($is_er && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "8x8"){
            push @warn, sprintf("$alarm [%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
        }

        # Check that readout sizes are all 8x8 for FID lights ACA-029
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn, sprintf("$alarm [%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"})
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            if ($type =~ /FID/  && $c->{"SIZE$i"} ne "8x8");

        # Check that readout size is 8x8 for monitor windows ACA-030
        push @warn, sprintf("$alarm [%2d] Readout Size. %s Should be 8x8\n", $i, $c->{"SIZE$i"})
            if ($type =~ /MON/  && $c->{"SIZE$i"} ne "8x8");


        # Bad Pixels ACA-025
            my @close_pixels;
            my @dr;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1345
  id: 091
  line_number: 1345
  text: |-
    push @warn, sprintf("$alarm [%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"})
    if ($type =~ /FID/  && $c->{"SIZE$i"} ne "8x8");
  title: Readout size should be 8x8 (FID)
  type: aca_check
- context: |2-
          else{
            push @warn, sprintf("$alarm [%2d] Readout Size. %s Should be 6x6\n", $i, $c->{"SIZE$i"});
          }
        }

        # Check that readout sizes are all 8x8 for engineering observations ACA-028
        if ($is_er && $type =~ /BOT|GUI|ACQ/  && $c->{"SIZE$i"} ne "8x8"){
            push @warn, sprintf("$alarm [%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"});
        }

        # Check that readout sizes are all 8x8 for FID lights ACA-029
        push @warn, sprintf("$alarm [%2d] Readout Size.  %s Should be 8x8\n", $i, $c->{"SIZE$i"})
            if ($type =~ /FID/  && $c->{"SIZE$i"} ne "8x8");

        # Check that readout size is 8x8 for monitor windows ACA-030
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @warn, sprintf("$alarm [%2d] Readout Size. %s Should be 8x8\n", $i, $c->{"SIZE$i"})
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            if ($type =~ /MON/  && $c->{"SIZE$i"} ne "8x8");


        # Bad Pixels ACA-025
            my @close_pixels;
            my @dr;
        if ($type ne 'ACQ' and $c->{"GS_PASS$i"} =~ /^1|\s+|g[1-2]/) {
            foreach my $pixel (@bad_pixels) {
            my $dy = abs($yag-$pixel->{yag});
            my $dz = abs($zag-$pixel->{zag});
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1349
  id: 092
  line_number: 1349
  text: |-
    push @warn, sprintf("$alarm [%2d] Readout Size. %s Should be 8x8\n", $i, $c->{"SIZE$i"})
    if ($type =~ /MON/  && $c->{"SIZE$i"} ne "8x8");
  title: Readout size should be 8x8 (MON)
  type: aca_check
- context: |2-

        # Bad Pixels ACA-025
            my @close_pixels;
            my @dr;
        if ($type ne 'ACQ' and $c->{"GS_PASS$i"} =~ /^1|\s+|g[1-2]/) {
            foreach my $pixel (@bad_pixels) {
            my $dy = abs($yag-$pixel->{yag});
            my $dz = abs($zag-$pixel->{zag});
            my $dr = sqrt($dy**2 + $dz**2);
            next unless ( $dz < $dither+25 and $dy < $dither+25 );
            push @close_pixels, sprintf("%3d, %3d, %3d\n", $dy, $dz, $dr);
            push @dr, $dr;
            }
            if ( @close_pixels > 0 ) {
            my ($closest) = sort { $dr[$a] <=> $dr[$b] } (0 .. $#dr);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            my $warn = sprintf("$alarm [%2d] Nearby ACA bad pixel. " .
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                       "Y,Z,Radial seps: " . $close_pixels[$closest],
                       $i); #Only warn for the closest pixel
            push @warn, $warn;
            }
        }

        # Spoiler star (for search) and common column

        foreach my $star (values %{$self->{agasc_hash}}) {
                # Skip tests if $star is the same as the catalog star
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1367
  id: 093
  line_number: 1367
  text: |-
    my $warn = sprintf("$alarm [%2d] Nearby ACA bad pixel. " .
    "Y,Z,Radial seps: " . $close_pixels[$closest],
    $i); #Only warn for the closest pixel
  title: Nearby ACA bad pixel
  type: aca_check
- context: |2-
            my @dr;
        if ($type ne 'ACQ' and $c->{"GS_PASS$i"} =~ /^1|\s+|g[1-2]/) {
            foreach my $pixel (@bad_pixels) {
            my $dy = abs($yag-$pixel->{yag});
            my $dz = abs($zag-$pixel->{zag});
            my $dr = sqrt($dy**2 + $dz**2);
            next unless ( $dz < $dither+25 and $dy < $dither+25 );
            push @close_pixels, sprintf("%3d, %3d, %3d\n", $dy, $dz, $dr);
            push @dr, $dr;
            }
            if ( @close_pixels > 0 ) {
            my ($closest) = sort { $dr[$a] <=> $dr[$b] } (0 .. $#dr);
            my $warn = sprintf("$alarm [%2d] Nearby ACA bad pixel. " .
                       "Y,Z,Radial seps: " . $close_pixels[$closest],
                       $i); #Only warn for the closest pixel
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn, $warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
        }

        # Spoiler star (for search) and common column

        foreach my $star (values %{$self->{agasc_hash}}) {
                # Skip tests if $star is the same as the catalog star
            next if (  $star->{id} eq $sid ||
                   ( abs($star->{yag} - $yag) < $ID_DIST_LIMIT
                 && abs($star->{zag} - $zag) < $ID_DIST_LIMIT
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1370
  id: 094
  line_number: 1370
  text: |-
    push @warn, $warn;
  title: Really part of '093'
  type: code
- context: |2-
                # Skip tests if $star is the same as the catalog star
            next if (  $star->{id} eq $sid ||
                   ( abs($star->{yag} - $yag) < $ID_DIST_LIMIT
                 && abs($star->{zag} - $zag) < $ID_DIST_LIMIT
                 && abs($star->{mag_aca} - $mag) < 0.1 ) );
            my $dy = abs($yag-$star->{yag});
            my $dz = abs($zag-$star->{zag});
            my $dr = sqrt($dz**2 + $dy**2);
            my $dm = $mag ne '---' ? $mag - $star->{mag_aca} : 0.0;
            my $dm_string = $mag ne '---' ? sprintf("%4.1f", $mag - $star->{mag_aca}) : '?';

            # Fid within $dither + 25 arcsec of a star (yellow) and within 4 mags (red) ACA-024
            if ($type eq 'FID'
            and $dz < $dither+25 and $dy < $dither+25
            and $dm > -5.0) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            my $warn = sprintf("$alarm [%2d] Fid spoiler.  %10d: " .
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -4.0)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
            }

            # Star within search box + search error and within 1.0 mags
            if ($type ne 'MON' and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("$alarm [%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn } # ACA-022 ACA-023
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1392
  id: 095
  line_number: 1392
  text: |-
    my $warn = sprintf("$alarm [%2d] Fid spoiler.  %10d: " .
    "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
  title: Text for warning that is used in '096' or '097'
  type: code
- context: |2-
                   ( abs($star->{yag} - $yag) < $ID_DIST_LIMIT
                 && abs($star->{zag} - $zag) < $ID_DIST_LIMIT
                 && abs($star->{mag_aca} - $mag) < 0.1 ) );
            my $dy = abs($yag-$star->{yag});
            my $dz = abs($zag-$star->{zag});
            my $dr = sqrt($dz**2 + $dy**2);
            my $dm = $mag ne '---' ? $mag - $star->{mag_aca} : 0.0;
            my $dm_string = $mag ne '---' ? sprintf("%4.1f", $mag - $star->{mag_aca}) : '?';

            # Fid within $dither + 25 arcsec of a star (yellow) and within 4 mags (red) ACA-024
            if ($type eq 'FID'
            and $dz < $dither+25 and $dy < $dither+25
            and $dm > -5.0) {
            my $warn = sprintf("$alarm [%2d] Fid spoiler.  %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            if ($dm > -4.0)  { push @warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            else { push @yellow_warn, $warn }
            }

            # Star within search box + search error and within 1.0 mags
            if ($type ne 'MON' and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("$alarm [%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn } # ACA-022 ACA-023
            else { push @yellow_warn, $warn }
            }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1394
  id: 096
  line_number: 1394
  severity: red
  text: |-
    if ($dm > -4.0)  { push @warn, $warn }
    else { push @yellow_warn, $warn }
    }

    # Star within search box + search error and within 1.0 mags
    if ($type ne 'MON' and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
    my $warn = sprintf("$alarm [%2d] Search spoiler. %10d: " .
    "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
  title: Fid spoiler
  type: aca_check
- context: |2-
                 && abs($star->{zag} - $zag) < $ID_DIST_LIMIT
                 && abs($star->{mag_aca} - $mag) < 0.1 ) );
            my $dy = abs($yag-$star->{yag});
            my $dz = abs($zag-$star->{zag});
            my $dr = sqrt($dz**2 + $dy**2);
            my $dm = $mag ne '---' ? $mag - $star->{mag_aca} : 0.0;
            my $dm_string = $mag ne '---' ? sprintf("%4.1f", $mag - $star->{mag_aca}) : '?';

            # Fid within $dither + 25 arcsec of a star (yellow) and within 4 mags (red) ACA-024
            if ($type eq 'FID'
            and $dz < $dither+25 and $dy < $dither+25
            and $dm > -5.0) {
            my $warn = sprintf("$alarm [%2d] Fid spoiler.  %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -4.0)  { push @warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            else { push @yellow_warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }

            # Star within search box + search error and within 1.0 mags
            if ($type ne 'MON' and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("$alarm [%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn } # ACA-022 ACA-023
            else { push @yellow_warn, $warn }
            }
            # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1395
  id: 097
  line_number: 1395
  severity: yellow
  text: |-
    else { push @yellow_warn, $warn }
    }

    # Star within search box + search error and within 1.0 mags
    if ($type ne 'MON' and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
    my $warn = sprintf("$alarm [%2d] Search spoiler. %10d: " .
    "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
  title: Fid spoiler
  type: aca_check
- context: |2-
            my $dm = $mag ne '---' ? $mag - $star->{mag_aca} : 0.0;
            my $dm_string = $mag ne '---' ? sprintf("%4.1f", $mag - $star->{mag_aca}) : '?';

            # Fid within $dither + 25 arcsec of a star (yellow) and within 4 mags (red) ACA-024
            if ($type eq 'FID'
            and $dz < $dither+25 and $dy < $dither+25
            and $dm > -5.0) {
            my $warn = sprintf("$alarm [%2d] Fid spoiler.  %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -4.0)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
            }

            # Star within search box + search error and within 1.0 mags
            if ($type ne 'MON' and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            my $warn = sprintf("$alarm [%2d] Search spoiler. %10d: " .
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn } # ACA-022 ACA-023
            else { push @yellow_warn, $warn }
            }
            # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
            # and spoiler is located between star and readout ACA-026
            if ($type ne 'MON'
            and $dz < $col_sep_dist
            and $dm > $col_sep_mag
            and ($star->{yag}/$yag) > 1.0
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1400
  id: 098
  line_number: 1400
  text: |-
    my $warn = sprintf("$alarm [%2d] Search spoiler. %10d: " .
    "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
  title: Warning text for '099' and '100'
  type: code
- context: |2-

            # Fid within $dither + 25 arcsec of a star (yellow) and within 4 mags (red) ACA-024
            if ($type eq 'FID'
            and $dz < $dither+25 and $dy < $dither+25
            and $dm > -5.0) {
            my $warn = sprintf("$alarm [%2d] Fid spoiler.  %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -4.0)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
            }

            # Star within search box + search error and within 1.0 mags
            if ($type ne 'MON' and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("$alarm [%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            if ($dm > -0.2)  { push @warn, $warn } # ACA-022 ACA-023
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            else { push @yellow_warn, $warn }
            }
            # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
            # and spoiler is located between star and readout ACA-026
            if ($type ne 'MON'
            and $dz < $col_sep_dist
            and $dm > $col_sep_mag
            and ($star->{yag}/$yag) > 1.0
            and abs($star->{yag}) < 2500) {
            push @warn,sprintf("$alarm [%2d] Common Column. %10d " .
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1402
  id: 099
  line_number: 1402
  severity: red
  text: |-
    if ($dm > -0.2)  { push @warn, $warn } # ACA-022 ACA-023
    else { push @yellow_warn, $warn }
    }
    # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
    # and spoiler is located between star and readout ACA-026
    if ($type ne 'MON'
    and $dz < $col_sep_dist
    and $dm > $col_sep_mag
    and ($star->{yag}/$yag) > 1.0
    and abs($star->{yag}) < 2500) {
    push @warn,sprintf("$alarm [%2d] Common Column. %10d " .
    "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
  title: Search spoiler
  type: aca_check
- context: |2-
            # Fid within $dither + 25 arcsec of a star (yellow) and within 4 mags (red) ACA-024
            if ($type eq 'FID'
            and $dz < $dither+25 and $dy < $dither+25
            and $dm > -5.0) {
            my $warn = sprintf("$alarm [%2d] Fid spoiler.  %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -4.0)  { push @warn, $warn }
            else { push @yellow_warn, $warn }
            }

            # Star within search box + search error and within 1.0 mags
            if ($type ne 'MON' and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("$alarm [%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn } # ACA-022 ACA-023
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            else { push @yellow_warn, $warn }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            }
            # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
            # and spoiler is located between star and readout ACA-026
            if ($type ne 'MON'
            and $dz < $col_sep_dist
            and $dm > $col_sep_mag
            and ($star->{yag}/$yag) > 1.0
            and abs($star->{yag}) < 2500) {
            push @warn,sprintf("$alarm [%2d] Common Column. %10d " .
                       "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1403
  id: '100'
  line_number: 1403
  severity: yellow
  text: |-
    else { push @yellow_warn, $warn }
    }
    # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
    # and spoiler is located between star and readout ACA-026
    if ($type ne 'MON'
    and $dz < $col_sep_dist
    and $dm > $col_sep_mag
    and ($star->{yag}/$yag) > 1.0
    and abs($star->{yag}) < 2500) {
    push @warn,sprintf("$alarm [%2d] Common Column. %10d " .
    "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
  title: Search spoiler
  type: aca_check
- context: |2-

            # Star within search box + search error and within 1.0 mags
            if ($type ne 'MON' and $dz < $halfw + $search_err and $dy < $halfw + $search_err and $dm > -1.0) {
            my $warn = sprintf("$alarm [%2d] Search spoiler. %10d: " .
                       "Y,Z,Radial,Mag seps: %3d %3d %3d %4s\n",$i,$star->{id},$dy,$dz,$dr,$dm_string);
            if ($dm > -0.2)  { push @warn, $warn } # ACA-022 ACA-023
            else { push @yellow_warn, $warn }
            }
            # Common column: dz within limit, spoiler is $col_sep_mag brighter than star,
            # and spoiler is located between star and readout ACA-026
            if ($type ne 'MON'
            and $dz < $col_sep_dist
            and $dm > $col_sep_mag
            and ($star->{yag}/$yag) > 1.0
            and abs($star->{yag}) < 2500) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @warn,sprintf("$alarm [%2d] Common Column. %10d " .
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                       "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
            }
        }
        }



    # Find the smallest rectangle size that all acq stars fit in
        my $y_side = sprintf( "%.0f", $max_y - $min_y );
        my $z_side = sprintf( "%.0f", $max_z - $min_z );
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1412
  id: '101'
  line_number: 1412
  severity: red
  text: |-
    push @warn,sprintf("$alarm [%2d] Common Column. %10d " .
    "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
  title: Common column
  type: aca_check
- context: |2-
            and $dz < $col_sep_dist
            and $dm > $col_sep_mag
            and ($star->{yag}/$yag) > 1.0
            and abs($star->{yag}) < 2500) {
            push @warn,sprintf("$alarm [%2d] Common Column. %10d " .
                       "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
            }
        }
        }



    # Find the smallest rectangle size that all acq stars fit in
        my $y_side = sprintf( "%.0f", $max_y - $min_y );
        my $z_side = sprintf( "%.0f", $max_z - $min_z );
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @yellow_warn, "$alarm Guide stars fit in $y_side x $z_side square arc-second box\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        if $y_side < $min_y_side && $z_side < $min_z_side;

        # Collect warnings
        push @{$self->{warn}}, @warn;
        push @{$self->{yellow_warn}}, @yellow_warn;
    }

    #############################################################################################
    sub check_flick_pix_mon {
    #############################################################################################
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1423
  id: '102'
  line_number: 1423
  severity: yellow
  text: |-
    push @yellow_warn, "$alarm Guide stars fit in $y_side x $z_side square arc-second box\n"
    if $y_side < $min_y_side && $z_side < $min_z_side;
  title: Small box warning for checks '103' and '104'
  type: code
- context: |2-
            push @warn,sprintf("$alarm [%2d] Common Column. %10d " .
                       "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
            }
        }
        }



    # Find the smallest rectangle size that all acq stars fit in
        my $y_side = sprintf( "%.0f", $max_y - $min_y );
        my $z_side = sprintf( "%.0f", $max_z - $min_z );
        push @yellow_warn, "$alarm Guide stars fit in $y_side x $z_side square arc-second box\n"
        if $y_side < $min_y_side && $z_side < $min_z_side;

        # Collect warnings
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, @warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{yellow_warn}}, @yellow_warn;
    }

    #############################################################################################
    sub check_flick_pix_mon {
    #############################################################################################
        my $self = shift;

        # this only applies to ERs (and they should have numeric obsids)
        return unless ( $self->{obsid} =~ /^\d+$/ and $self->{obsid} > 50000 );
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1427
  id: '103'
  line_number: 1427
  severity: red
  text: |-
    push @{$self->{warn}}, @warn;
  title: Guide stars fit in small box (red warning)
  type: aca_check
- context: |2
                       "at Y,Z,Mag: %5d %5d %5.2f\n",$i,$star->{id},$star->{yag},$star->{zag},$star->{mag_aca});
            }
        }
        }



    # Find the smallest rectangle size that all acq stars fit in
        my $y_side = sprintf( "%.0f", $max_y - $min_y );
        my $z_side = sprintf( "%.0f", $max_z - $min_z );
        push @yellow_warn, "$alarm Guide stars fit in $y_side x $z_side square arc-second box\n"
        if $y_side < $min_y_side && $z_side < $min_z_side;

        # Collect warnings
        push @{$self->{warn}}, @warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{yellow_warn}}, @yellow_warn;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
    }

    #############################################################################################
    sub check_flick_pix_mon {
    #############################################################################################
        my $self = shift;

        # this only applies to ERs (and they should have numeric obsids)
        return unless ( $self->{obsid} =~ /^\d+$/ and $self->{obsid} > 50000 );
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1428
  id: '104'
  line_number: 1428
  severity: yellow
  text: |-
    push @{$self->{yellow_warn}}, @yellow_warn;
  title: Guide stars fit in small box (yellow warning)
  type: code
- context: |2-
        my $self = shift;

        # this only applies to ERs (and they should have numeric obsids)
        return unless ( $self->{obsid} =~ /^\d+$/ and $self->{obsid} > 50000 );

        my $c;
        # Check for existence of a star catalog
        return unless ($c = find_command($self, "MP_STARCAT"));

        # See if there are any monitor stars.  Return if not.
        my @mon_stars = grep { $c->{"TYPE$_"} eq 'MON' } (1..16);
        return unless (@mon_stars);

        for my $mon_star (@mon_stars){

    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{fyi}}, sprintf("$info Obsid contains flickering pixel MON\n", $mon_star);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX


        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Size is not 8x8\n", $mon_star)
            unless $c->{"SIZE${mon_star}"} eq "8x8";

        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window RESTRK should be 0\n", $mon_star)
            unless $c->{"RESTRK${mon_star}"} == 0;

            # Verify the DTS is set to self
        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. DTS should be set to self\n", $mon_star)
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1449
  id: '105'
  line_number: 1449
  severity: info
  text: |-
    push @{$self->{fyi}}, sprintf("$info Obsid contains flickering pixel MON\n", $mon_star);
  title: Obsid has flickering pixel MON window
  type: aca_check
- context: |2-
        return unless ( $self->{obsid} =~ /^\d+$/ and $self->{obsid} > 50000 );

        my $c;
        # Check for existence of a star catalog
        return unless ($c = find_command($self, "MP_STARCAT"));

        # See if there are any monitor stars.  Return if not.
        my @mon_stars = grep { $c->{"TYPE$_"} eq 'MON' } (1..16);
        return unless (@mon_stars);

        for my $mon_star (@mon_stars){

        push @{$self->{fyi}}, sprintf("$info Obsid contains flickering pixel MON\n", $mon_star);


    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Size is not 8x8\n", $mon_star)
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            unless $c->{"SIZE${mon_star}"} eq "8x8";

        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window RESTRK should be 0\n", $mon_star)
            unless $c->{"RESTRK${mon_star}"} == 0;

            # Verify the DTS is set to self
        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. DTS should be set to self\n", $mon_star)
            unless $c->{"DIMDTS${mon_star}"} == $c->{"IMNUM${mon_star}"};

        }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1452
  id: '106'
  line_number: 1452
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Size is not 8x8\n", $mon_star)
    unless $c->{"SIZE${mon_star}"} eq "8x8";
  title: Flickering Pixel Monitor window not 8x8
  type: aca_check
- context: |2-
        # Check for existence of a star catalog
        return unless ($c = find_command($self, "MP_STARCAT"));

        # See if there are any monitor stars.  Return if not.
        my @mon_stars = grep { $c->{"TYPE$_"} eq 'MON' } (1..16);
        return unless (@mon_stars);

        for my $mon_star (@mon_stars){

        push @{$self->{fyi}}, sprintf("$info Obsid contains flickering pixel MON\n", $mon_star);


        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Size is not 8x8\n", $mon_star)
            unless $c->{"SIZE${mon_star}"} eq "8x8";

    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window RESTRK should be 0\n", $mon_star)
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            unless $c->{"RESTRK${mon_star}"} == 0;

            # Verify the DTS is set to self
        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. DTS should be set to self\n", $mon_star)
            unless $c->{"DIMDTS${mon_star}"} == $c->{"IMNUM${mon_star}"};

        }


    }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1455
  id: '107'
  line_number: 1455
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window RESTRK should be 0\n", $mon_star)
    unless $c->{"RESTRK${mon_star}"} == 0;
  title: Flickering Pixel Monitor Window RESTRK should be 0
  type: aca_check
- context: |2-
        my @mon_stars = grep { $c->{"TYPE$_"} eq 'MON' } (1..16);
        return unless (@mon_stars);

        for my $mon_star (@mon_stars){

        push @{$self->{fyi}}, sprintf("$info Obsid contains flickering pixel MON\n", $mon_star);


        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Size is not 8x8\n", $mon_star)
            unless $c->{"SIZE${mon_star}"} eq "8x8";

        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window RESTRK should be 0\n", $mon_star)
            unless $c->{"RESTRK${mon_star}"} == 0;

            # Verify the DTS is set to self
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. DTS should be set to self\n", $mon_star)
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            unless $c->{"DIMDTS${mon_star}"} == $c->{"IMNUM${mon_star}"};

        }


    }


    #############################################################################################
    sub check_monitor_commanding {
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1459
  id: '108'
  line_number: 1459
  text: |-
    push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. DTS should be set to self\n", $mon_star)
    unless $c->{"DIMDTS${mon_star}"} == $c->{"IMNUM${mon_star}"};
  title: Flickering Pixel Monitor DTS should be set to self
  type: aca_check
- context: |2-


        # See if there are any monitor stars requested in the OR
        my $or_has_mon = ( defined $or->{HAS_MON} ) ? 1 : 0;

        my @mon_stars = grep { $c->{"TYPE$_"} eq 'MON' } (1..16);

        # if there are no requests in the OR and there are no MON stars, exit
        return unless $or_has_mon or scalar(@mon_stars);


        my $found_mon = scalar(@mon_stars);
        my $stealth_mon = 0;

        if (($found_mon) and (not $or_has_mon)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("$alarm MON not in OR, but in catalog. Position not checked.\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

        # Where is the requested OR?
        my $q_aca = Quat->new($self->{ra}, $self->{dec}, $self->{roll});
        my ($or_yang, $or_zang);
        if ($or_has_mon){
          ($or_yang, $or_zang) = Quat::radec2yagzag($or->{MON_RA}, $or->{MON_DEC}, $q_aca) if ($or_has_mon) ;
        }

        # Check all indices
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1506
  id: '109'
  line_number: 1506
  orvdot: Include monitor window commanding
  text: |-
    push @{$self->{warn}}, sprintf("$alarm MON not in OR, but in catalog. Position not checked.\n");
  title: Monitor not in OR but in catalog
  type: aca_check
- context: |2-
            = map { $c->{"$_${idx}"} } qw(
                           TYPE
                           IMNUM
                           RESTRK
                           YANG
                           ZANG
                           DIMDTS
                           SIZE);
        my $y_sep = $or_yang*$r2a - $idx_hash{yang};
        my $z_sep = $or_zang*$r2a - $idx_hash{zang};
        $idx_hash{sep} = sqrt($y_sep**2 + $z_sep**2);

        # if this is a plain commanded MON
        if ($idx_hash{type} =~ /MON/ ){
          # if it doesn't match the requested location ACA-037
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;
        # if it isn't 8x8
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Size is not 8x8\n", $idx_hash{idx})
            unless $idx_hash{size} eq "8x8";

        # if it isn't in slot 7 ACA-036
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is in slot %2d and should be in slot 7.\n"
                         , $idx_hash{idx}, $idx_hash{imnum})
            if $idx_hash{imnum} != 7;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1542
  id: '110'
  line_number: 1542
  orvdot: Include monitor window commanding
  text: |-
    push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
    , $idx_hash{idx}, $idx_hash{sep})
    if $idx_hash{sep} > 2.5;
  title: Monitor window off of OR specification
  type: aca_check
- context: |2
                           YANG
                           ZANG
                           DIMDTS
                           SIZE);
        my $y_sep = $or_yang*$r2a - $idx_hash{yang};
        my $z_sep = $or_zang*$r2a - $idx_hash{zang};
        $idx_hash{sep} = sqrt($y_sep**2 + $z_sep**2);

        # if this is a plain commanded MON
        if ($idx_hash{type} =~ /MON/ ){
          # if it doesn't match the requested location ACA-037
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;
        # if it isn't 8x8
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Size is not 8x8\n", $idx_hash{idx})
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            unless $idx_hash{size} eq "8x8";

        # if it isn't in slot 7 ACA-036
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is in slot %2d and should be in slot 7.\n"
                         , $idx_hash{idx}, $idx_hash{imnum})
            if $idx_hash{imnum} != 7;
        # ACA-038
        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is set to Convert-to-Track\n", $idx_hash{idx})
          if $idx_hash{restrk} == 1;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1546
  id: '111'
  line_number: 1546
  orvdot: Include monitor window commanding
  text: |-
    push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Size is not 8x8\n", $idx_hash{idx})
    unless $idx_hash{size} eq "8x8";
  title: Monitor window not 8x8
  type: aca_check
- context: |2-
        my $y_sep = $or_yang*$r2a - $idx_hash{yang};
        my $z_sep = $or_zang*$r2a - $idx_hash{zang};
        $idx_hash{sep} = sqrt($y_sep**2 + $z_sep**2);

        # if this is a plain commanded MON
        if ($idx_hash{type} =~ /MON/ ){
          # if it doesn't match the requested location ACA-037
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;
        # if it isn't 8x8
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Size is not 8x8\n", $idx_hash{idx})
            unless $idx_hash{size} eq "8x8";

        # if it isn't in slot 7 ACA-036
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is in slot %2d and should be in slot 7.\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                         , $idx_hash{idx}, $idx_hash{imnum})
            if $idx_hash{imnum} != 7;
        # ACA-038
        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is set to Convert-to-Track\n", $idx_hash{idx})
          if $idx_hash{restrk} == 1;


        # Verify the the designated track star is indeed a guide star. ACA-039
          my $dts_slot = $idx_hash{dimdts};
          my $dts_type = "NULL";
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1550
  id: '112'
  line_number: 1550
  orvdot: Include monitor window commanding
  text: |-
    push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is in slot %2d and should be in slot 7.\n"
    , $idx_hash{idx}, $idx_hash{imnum})
    if $idx_hash{imnum} != 7;
  title: Monitor window in wrong slot
  type: aca_check
- context: |2-
        # if this is a plain commanded MON
        if ($idx_hash{type} =~ /MON/ ){
          # if it doesn't match the requested location ACA-037
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;
        # if it isn't 8x8
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Size is not 8x8\n", $idx_hash{idx})
            unless $idx_hash{size} eq "8x8";

        # if it isn't in slot 7 ACA-036
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is in slot %2d and should be in slot 7.\n"
                         , $idx_hash{idx}, $idx_hash{imnum})
            if $idx_hash{imnum} != 7;
        # ACA-038
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is set to Convert-to-Track\n", $idx_hash{idx})
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          if $idx_hash{restrk} == 1;


        # Verify the the designated track star is indeed a guide star. ACA-039
          my $dts_slot = $idx_hash{dimdts};
          my $dts_type = "NULL";
          foreach my $dts_index (1..16) {
            next unless $c->{"IMNUM$dts_index"} == $dts_slot and $c->{"TYPE$dts_index"} =~ /GUI|BOT/;
            $dts_type = $c->{"TYPE$dts_index"};
            last;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1554
  id: '113'
  line_number: 1554
  orvdot: Include monitor window commanding
  text: |-
    push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is set to Convert-to-Track\n", $idx_hash{idx})
    if $idx_hash{restrk} == 1;
  title: Monitor window is set to convert-to-track
  type: aca_check
- context: |2-
                         , $idx_hash{idx}, $idx_hash{imnum})
            if $idx_hash{imnum} != 7;
        # ACA-038
        push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is set to Convert-to-Track\n", $idx_hash{idx})
          if $idx_hash{restrk} == 1;


        # Verify the the designated track star is indeed a guide star. ACA-039
          my $dts_slot = $idx_hash{dimdts};
          my $dts_type = "NULL";
          foreach my $dts_index (1..16) {
            next unless $c->{"IMNUM$dts_index"} == $dts_slot and $c->{"TYPE$dts_index"} =~ /GUI|BOT/;
            $dts_type = $c->{"TYPE$dts_index"};
            last;
          }
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. DTS for [%2d] is set to slot %2d which does not contain a guide star.\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                         $idx_hash{idx}, $idx_hash{idx}, $dts_slot)
            if $dts_type =~ /NULL/;
          next IDX;
        }

        if (($idx_hash{type} =~ /GUI|BOT/) and ($idx_hash{size} eq '8x8') and ($idx_hash{imnum} == 7)){
          $stealth_mon = 1;
          push @{$self->{fyi}}, sprintf("$info [%2d] Appears to be MON used as GUI/BOT.  Has Magnitude been checked?\n",
                        $idx);
          # if it doesn't match the requested location
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1566
  id: '114'
  line_number: 1566
  orvdot: Include monitor window commanding
  text: |-
    push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. DTS for [%2d] is set to slot %2d which does not contain a guide star.\n",
    $idx_hash{idx}, $idx_hash{idx}, $dts_slot)
    if $dts_type =~ /NULL/;
  title: Monitor window DTS is set to slot without guide star
  type: aca_check
- context: |2-
          my $dts_slot = $idx_hash{dimdts};
          my $dts_type = "NULL";
          foreach my $dts_index (1..16) {
            next unless $c->{"IMNUM$dts_index"} == $dts_slot and $c->{"TYPE$dts_index"} =~ /GUI|BOT/;
            $dts_type = $c->{"TYPE$dts_index"};
            last;
          }
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. DTS for [%2d] is set to slot %2d which does not contain a guide star.\n",
                         $idx_hash{idx}, $idx_hash{idx}, $dts_slot)
            if $dts_type =~ /NULL/;
          next IDX;
        }

        if (($idx_hash{type} =~ /GUI|BOT/) and ($idx_hash{size} eq '8x8') and ($idx_hash{imnum} == 7)){
          $stealth_mon = 1;
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{fyi}}, sprintf("$info [%2d] Appears to be MON used as GUI/BOT.  Has Magnitude been checked?\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        $idx);
          # if it doesn't match the requested location
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;

          next IDX;
        }
        if ((not $found_mon) and ($idx_hash{sep} < 2.5)){
          # if there *should* be one there...
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1574
  id: '115'
  line_number: 1574
  orvdot: Would require MON converted to GUI/BOT.
  text: |-
    push @{$self->{fyi}}, sprintf("$info [%2d] Appears to be MON used as GUI/BOT.  Has Magnitude been checked?\n",
    $idx);
  title: Slot appears to have MON used as GUI/BOT
  type: aca_check
- context: |2
        }

        if (($idx_hash{type} =~ /GUI|BOT/) and ($idx_hash{size} eq '8x8') and ($idx_hash{imnum} == 7)){
          $stealth_mon = 1;
          push @{$self->{fyi}}, sprintf("$info [%2d] Appears to be MON used as GUI/BOT.  Has Magnitude been checked?\n",
                        $idx);
          # if it doesn't match the requested location
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;

          next IDX;
        }
        if ((not $found_mon) and ($idx_hash{sep} < 2.5)){
          # if there *should* be one there...
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{fyi}}, sprintf("$info [%2d] Commanded at intended OR MON position; but not configured for MON\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                        $idx);
        }

          }


        # if I don't have a plain MON or a "stealth" MON, throw a warning
        push @{$self->{warn}}, sprintf("$alarm MON requested in OR, but none found in catalog\n")
          unless ( $found_mon or $stealth_mon );
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1585
  id: '117'
  line_number: 1585
  text: |-
    push @{$self->{fyi}}, sprintf("$info [%2d] Commanded at intended OR MON position; but not configured for MON\n",
  title: Slot has star at OR MON position but not configured correctly
  type: aca_check
- context: |2-
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;

          next IDX;
        }
        if ((not $found_mon) and ($idx_hash{sep} < 2.5)){
          # if there *should* be one there...
          push @{$self->{fyi}}, sprintf("$info [%2d] Commanded at intended OR MON position; but not configured for MON\n",
                        $idx);
        }

          }


        # if I don't have a plain MON or a "stealth" MON, throw a warning
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, sprintf("$alarm MON requested in OR, but none found in catalog\n")
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          unless ( $found_mon or $stealth_mon );

        # if we're using a guide star, we don't need the rest of the dither setup
        if ($stealth_mon and not $found_mon){
          return;
        }

        # Find the associated maneuver command for this obsid.  Need this to get the
        # exact time of the end of maneuver
        my $manv;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1593
  id: '118'
  line_number: 1593
  orvdot: Include monitor window commanding
  text: |-
    push @{$self->{warn}}, sprintf("$alarm MON requested in OR, but none found in catalog\n")
    unless ( $found_mon or $stealth_mon );
  title: MON in OR but not found in catalog
  type: aca_check
- context: |2-


        # if I don't have a plain MON or a "stealth" MON, throw a warning
        push @{$self->{warn}}, sprintf("$alarm MON requested in OR, but none found in catalog\n")
          unless ( $found_mon or $stealth_mon );

        # if we're using a guide star, we don't need the rest of the dither setup
        if ($stealth_mon and not $found_mon){
          return;
        }

        # Find the associated maneuver command for this obsid.  Need this to get the
        # exact time of the end of maneuver
        my $manv;
        unless ($manv = find_command($self, "MP_TARGQUAT", -1)) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("$alarm Cannot find maneuver for checking monitor commanding\n");
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          return;
        }


        # Now check in backstop commands for :
        #  Dither is disabled (AODSDITH) 1 min prior to the end of the maneuver (EOM)
        #    to the target attitude.
        #  The OFP Aspect Camera Process is restarted (AOACRSET) 3 minutes after EOM.
        #  Dither is enabled (AOENDITH) 5 min after EOM
        # ACA-040
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1605
  id: '119'
  line_number: 1605
  orvdot: Include monitor window commanding
  text: |-
    push @{$self->{warn}}, sprintf("$alarm Cannot find maneuver for checking monitor commanding\n");
  title: No MP_TARGQUAT to check maneuver for MON commanding
  type: process
- context: |2
        my %param = Ska::Parse_CM_File::parse_params($bs->{params});
        next unless ($param{TLMSID} =~ /^AO/);
        foreach $cmd (keys %dt) {
            if ($cmd =~ /$param{TLMSID}/){
            if ( abs($bs->{time} - ($t_manv+$dt{$cmd})) < $time_tol){
                $cnt{$cmd}++;
            }
            }
        }
        }

        # Add warning messages unless exactly one of each command was found at the right time
        foreach $cmd (qw (AODSDITH AOACRSET AOENDITH)) {
        next if ($cnt{$cmd} == 1);
        $cnt{$cmd} = 'no' if ($cnt{$cmd} == 0);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, "$alarm Found $cnt{$cmd} $cmd commands near " . time2date($t_manv+$dt{$cmd}) . "\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
    }

    #############################################################################################
    sub check_fids {
    #############################################################################################
        my $self = shift;
        my $c = shift;        # Star catalog command
        my $warn = shift;        # Array ref to warnings for this obsid
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1636
  id: '120'
  line_number: 1636
  orvdot: Include monitor window commanding
  text: |-
    push @{$self->{warn}}, "$alarm Found $cnt{$cmd} $cmd commands near " . time2date($t_manv+$dt{$cmd}) . "\n";
  title: Monitor window setup does not have expected dither commands
  type: aca_check
- context: |2-
        }

        # Add warning messages unless exactly one of each command was found at the right time
        foreach $cmd (qw (AODSDITH AOACRSET AOENDITH)) {
        next if ($cnt{$cmd} == 1);
        $cnt{$cmd} = 'no' if ($cnt{$cmd} == 0);
        push @{$self->{warn}}, "$alarm Found $cnt{$cmd} $cmd commands near " . time2date($t_manv+$dt{$cmd}) . "\n";
        }
    }

    #############################################################################################
    sub check_fids {
    #############################################################################################
        my $self = shift;
        my $c = shift;        # Star catalog command
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        my $warn = shift;        # Array ref to warnings for this obsid
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX

        my (@fid_ok, @fidsel_ok);
        my ($i, $i_fid);

        # If no star cat fids and no commanded fids, then return
        my $fid_number = @{$self->{fid}};
        return if ($fid_number == 0 && @{$self->{fidsel}} == 0);

        # Make sure we have SI and SIM_OFFSET_Z to be able to calculate fid yang and zang
        unless (defined $self->{SI}) {
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1645
  id: '121'
  line_number: 1645
  text: "my $warn = shift;\t\t# Array ref to warnings for this obsid"
  title: Code to pass the warnings array by reference to this check function
  type: code
- context: |-
    sub check_fids {
    #############################################################################################
        my $self = shift;
        my $c = shift;        # Star catalog command
        my $warn = shift;        # Array ref to warnings for this obsid

        my (@fid_ok, @fidsel_ok);
        my ($i, $i_fid);

        # If no star cat fids and no commanded fids, then return
        my $fid_number = @{$self->{fid}};
        return if ($fid_number == 0 && @{$self->{fidsel}} == 0);

        # Make sure we have SI and SIM_OFFSET_Z to be able to calculate fid yang and zang
        unless (defined $self->{SI}) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$warn}, "$alarm Unable to check fids because SI undefined\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }
        unless (defined $self->{SIM_OFFSET_Z}){
        push @{$warn}, "$alarm Unable to check fids because SIM_OFFSET_Z undefined\n";
        return;
        }

        @fid_ok = map { 0 } @{$self->{fid}};

        # Calculate yang and zang for each commanded fid, then cross-correlate with
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1656
  id: '122'
  line_number: 1656
  text: |-
    push @{$warn}, "$alarm Unable to check fids because SI undefined\n";
  title: Unable to check fids because SI undefined
  type: aca_check
- context: |2-
        my $warn = shift;        # Array ref to warnings for this obsid

        my (@fid_ok, @fidsel_ok);
        my ($i, $i_fid);

        # If no star cat fids and no commanded fids, then return
        my $fid_number = @{$self->{fid}};
        return if ($fid_number == 0 && @{$self->{fidsel}} == 0);

        # Make sure we have SI and SIM_OFFSET_Z to be able to calculate fid yang and zang
        unless (defined $self->{SI}) {
        push @{$warn}, "$alarm Unable to check fids because SI undefined\n";
        return;
        }
        unless (defined $self->{SIM_OFFSET_Z}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$warn}, "$alarm Unable to check fids because SIM_OFFSET_Z undefined\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        return;
        }

        @fid_ok = map { 0 } @{$self->{fid}};

        # Calculate yang and zang for each commanded fid, then cross-correlate with
        # all commanded fids.
        foreach my $fid (@{$self->{fidsel}}) {

        my ($yag, $zag, $error) = calc_fid_ang($fid, $self->{SI}, $self->{SIM_OFFSET_Z}, $self->{obsid});
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1660
  id: '123'
  line_number: 1660
  text: |-
    push @{$warn}, "$alarm Unable to check fids because SIM_OFFSET_Z undefined\n";
  title: Unable to check fids because SIM_OFFSET_Z undefined
  type: aca_check
- context: |2-
        }
        unless (defined $self->{SIM_OFFSET_Z}){
        push @{$warn}, "$alarm Unable to check fids because SIM_OFFSET_Z undefined\n";
        return;
        }

        @fid_ok = map { 0 } @{$self->{fid}};

        # Calculate yang and zang for each commanded fid, then cross-correlate with
        # all commanded fids.
        foreach my $fid (@{$self->{fidsel}}) {

        my ($yag, $zag, $error) = calc_fid_ang($fid, $self->{SI}, $self->{SIM_OFFSET_Z}, $self->{obsid});

        if ($error) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$warn}, "$alarm $error\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            next;
        }
        my $fidsel_ok = 0;

        # Cross-correlate with all star cat fids
        for  $i_fid (0 .. $#fid_ok) {
            $i = $self->{fid}[$i_fid]; # Index into star catalog entries

            # Check if starcat fid matches fidsel fid position to within 10 arcsec
            if (abs($yag - $c->{"YANG$i"}) < 10.0 && abs($zag - $c->{"ZANG$i"}) < 10.0) {
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1673
  id: '124'
  line_number: 1673
  notes: This is really at https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1731
  text: |-
    push @{$warn}, "$alarm $error\n";
  title: Commanded fid light does not correspond to detector
  type: aca_check
- context: |2
        my $fidsel_ok = 0;

        # Cross-correlate with all star cat fids
        for  $i_fid (0 .. $#fid_ok) {
            $i = $self->{fid}[$i_fid]; # Index into star catalog entries

            # Check if starcat fid matches fidsel fid position to within 10 arcsec
            if (abs($yag - $c->{"YANG$i"}) < 10.0 && abs($zag - $c->{"ZANG$i"}) < 10.0) {
            $fidsel_ok = 1;
            $fid_ok[$i_fid] = 1;
            last;
            }
        }

            # ACA-034
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$warn}, sprintf("$alarm Fid $self->{SI} FIDSEL $fid not found within 10 arcsec of (%.1f, %.1f)\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                       $yag, $zag)
            unless ($fidsel_ok);
        }
        # ACA-035
        for $i_fid (0 .. $#fid_ok) {
        push @{$warn}, "$alarm Fid with IDX=\[$self->{fid}[$i_fid]\] is in star catalog but is not turned on via FIDSEL\n"
            unless ($fid_ok[$i_fid]);
        }
    }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1691
  id: '125'
  line_number: 1691
  text: |-
    push @{$warn}, sprintf("$alarm Fid $self->{SI} FIDSEL $fid not found within 10 arcsec of (%.1f, %.1f)\n",
    $yag, $zag)
    unless ($fidsel_ok);
  title: Fid light from FIDSEL not found within 10 arcsec of yag,zag
  type: aca_check
- context: |2-
            # Check if starcat fid matches fidsel fid position to within 10 arcsec
            if (abs($yag - $c->{"YANG$i"}) < 10.0 && abs($zag - $c->{"ZANG$i"}) < 10.0) {
            $fidsel_ok = 1;
            $fid_ok[$i_fid] = 1;
            last;
            }
        }

            # ACA-034
        push @{$warn}, sprintf("$alarm Fid $self->{SI} FIDSEL $fid not found within 10 arcsec of (%.1f, %.1f)\n",
                       $yag, $zag)
            unless ($fidsel_ok);
        }
        # ACA-035
        for $i_fid (0 .. $#fid_ok) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$warn}, "$alarm Fid with IDX=\[$self->{fid}[$i_fid]\] is in star catalog but is not turned on via FIDSEL\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            unless ($fid_ok[$i_fid]);
        }
    }

    ##############################################################################
    sub calc_fid_ang {
    #   From OFLS SDS:
    #   Y_ang = fid position angle measured about the ACA z-axis as shown in
    #           Fig. 4.3-5.  In that figure, Y_ang corresponds to the ACA
    #           y angle, or "yag".
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1697
  id: '126'
  line_number: 1697
  text: |-
    push @{$warn}, "$alarm Fid with IDX=\[$self->{fid}[$i_fid]\] is in star catalog but is not turned on via FIDSEL\n"
    unless ($fid_ok[$i_fid]);
  title: Fid in star catalog but not FIDSEL
  type: aca_check
- context: |2-
            $c->{"GS_PASS$j"} = defined $f[7] ? ($f[7] =~ /\*+/ ? length $f[7] : $f[7]) : ' ';
            $c->{"GS_PASS$j"} =~ s/[agf]1//g;
        }
        else {
            # if the position of the line item in the guide summary doesn't match
            # set the variable once (so we don't have a warning for all the remaining lines
            # if there is one missing...)
            $bad_idx_match = 1;
        }

        }

        # if the position of an item didn't match, warn that the guide summary does not match
        # the backstop commanded catalog
        if ($bad_idx_match == 1){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        push @{$self->{warn}}, ">> WARNING: Guide summary does not match commanded catalog.\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
    }

    #############################################################################################
    sub get_agasc_stars {
    #############################################################################################

        my $self = shift;
        my $AGASC_DIR = shift;
        my $c;
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L2108
  id: '127'
  line_number: 2108
  text: |-
    push @{$self->{warn}}, ">> WARNING: Guide summary does not match commanded catalog.\n";
  title: Guide star summary does not match commanded catalog
  type: process
- context: |2-
        }

        my $q_aca = Quat->new($self->{ra}, $self->{dec}, $self->{roll});

        for my $id ($agasc_region->list_ids() )  {

        my $star = $agasc_region->get_star($id);

        my ($yag, $zag) = Quat::radec2yagzag(
                             $star->ra_pmcorrected(),
                             $star->dec_pmcorrected(),
                             $q_aca);
        $yag *= $r2a;
        $zag *= $r2a;
        if ($star->mag_aca() < -10 or $star->mag_aca_err() < -10) {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, sprintf("$alarm Star with bad mag %.1f or magerr %.1f at (yag,zag)=%.1f,%.1f\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                           $star->mag_aca(), $star->mag_aca_err(), $yag, $zag);
        }
        $self->{agasc_hash}{$id} = {
            id=> $id,
            class => $star->class(),
            ra  => $star->ra_pmcorrected(),
            dec => $star->dec_pmcorrected(),
            mag_aca => $star->mag_aca(),
            bv  => $star->color1(),
            mag_aca_err => $star->mag_aca_err(),
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L2149
  id: '128'
  line_number: 2149
  text: |-
    push @{$self->{warn}}, sprintf("$alarm Star with bad mag %.1f or magerr %.1f at (yag,zag)=%.1f,%.1f\n",
    $star->mag_aca(), $star->mag_aca_err(), $yag, $zag);
  title: Star in field has very bad mag or magerr
  type: aca_check
- context: |2
        next if ($type eq 'NUL');
        next if ($type eq 'FID');

        my $yag = $c->{"YANG$i"};
        my $zag = $c->{"ZANG$i"};
        my $gs_id = $c->{"GS_ID$i"};
        my $gs_ra = $c->{"GS_RA$i"};
        my $gs_dec = $c->{"GS_DEC$i"};

        # strip * off gs_id if present
        $gs_id =~ s/^\*/^/;

        # if the star is defined in the guide summary but doesn't seem to be present in the
        # agasc hash for this ra and dec, throw a warning
        unless ((defined $self->{agasc_hash}{$gs_id}) or ($gs_id eq '---')){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                  sprintf("$alarm [%2d] Star $gs_id is not in retrieved AGASC region by RA and DEC! \n", $i);
        }


        # if the star is defined in the agasc hash, copy
        # the information from the agasc to the catalog

        if (defined $self->{agasc_hash}{$gs_id}){
            my $star = $self->{agasc_hash}{$gs_id};
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L2199
  id: '129'
  line_number: 2199
  text: |-
    push @{$self->{warn}},
    sprintf("$alarm [%2d] Star $gs_id is not in retrieved AGASC region by RA and DEC! \n", $i);
  title: Guide star not found in AGASC by RA/Dec
  type: aca_check
- context: |2
        # the information from the agasc to the catalog

        if (defined $self->{agasc_hash}{$gs_id}){
            my $star = $self->{agasc_hash}{$gs_id};

            # let's still confirm that the backstop yag zag is what we expect
            # from agasc and ra,dec,roll ACA-043

            if (abs($star->{yag} - $yag) > ($ID_DIST_LIMIT)
            || abs($star->{zag} - $zag) > ($ID_DIST_LIMIT)){
            my $dyag = abs($star->{yag} - $yag);
            my $dzag = abs($star->{zag} - $zag);

            if (abs($star->{yag} - $yag) > (2 * $ID_DIST_LIMIT) ||
                abs($star->{zag} - $zag) > (2 * $ID_DIST_LIMIT)){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                     sprintf("$alarm [%2d] Backstop YAG,ZAG differs from AGASC by > 3 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
            }
            else{
                push @{$self->{yellow_warn}},
                     sprintf("$alarm [%2d] Backstop YAG,ZAG differs from AGASC by > 1.5 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
            }
            }

            # should I put this in an else statement, or let it stand alone?
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L2220
  id: '130'
  line_number: 2220
  severity: red
  text: |-
    push @{$self->{warn}},
    sprintf("$alarm [%2d] Backstop YAG,ZAG differs from AGASC by > 3 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
  title: Star position in AGASC off from backstop by > 3 arcsecs
  type: aca_check
- context: |2-

            # let's still confirm that the backstop yag zag is what we expect
            # from agasc and ra,dec,roll ACA-043

            if (abs($star->{yag} - $yag) > ($ID_DIST_LIMIT)
            || abs($star->{zag} - $zag) > ($ID_DIST_LIMIT)){
            my $dyag = abs($star->{yag} - $yag);
            my $dzag = abs($star->{zag} - $zag);

            if (abs($star->{yag} - $yag) > (2 * $ID_DIST_LIMIT) ||
                abs($star->{zag} - $zag) > (2 * $ID_DIST_LIMIT)){
                push @{$self->{warn}},
                     sprintf("$alarm [%2d] Backstop YAG,ZAG differs from AGASC by > 3 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
            }
            else{
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                push @{$self->{yellow_warn}},
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                     sprintf("$alarm [%2d] Backstop YAG,ZAG differs from AGASC by > 1.5 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
            }
            }

            # should I put this in an else statement, or let it stand alone?

            $c->{"GS_IDENTIFIED$i"} = 1;
            $c->{"GS_BV$i"} = $star->{bv};
            $c->{"GS_MAGERR$i"} = $star->{mag_aca_err};
            $c->{"GS_POSERR$i"} = $star->{poserr};
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L2224
  id: '131'
  line_number: 2224
  severity: yellow
  text: |-
    push @{$self->{yellow_warn}},
    sprintf("$alarm [%2d] Backstop YAG,ZAG differs from AGASC by > 1.5 arcsec: dyag = %2.2f dzag = %2.2f \n", $i, $dyag, $dzag);
  title: Star position in AGASC off from backstop by > 1.5 arcsecs (and less than
    3)
  type: aca_check
- context: |2-
            last;
        }
        }

        return $warn_boolean;
    }

    ###################################################################################
    sub set_ccd_temps{
    ###################################################################################
        my $self = shift;
        my $obsid_temps = shift;
        # if no temperature data, just return
        if ((not defined $obsid_temps->{$self->{obsid}})
            or (not defined $obsid_temps->{$self->{obsid}}->{ccd_temp})){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, "$alarm No CCD temperature prediction for obsid\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, sprintf("$alarm Using %s (planning limit) for t_ccd for mag limits\n",
                                           $config{ccd_temp_red_limit});
            $self->{ccd_temp} = $config{ccd_temp_red_limit};
            return;
        }
        # set the temperature to the value for the current obsid
        $self->{ccd_temp} = $obsid_temps->{$self->{obsid}}->{ccd_temp};
        $self->{n100_warm_frac} = $obsid_temps->{$self->{obsid}}->{n100_warm_frac};
        # add warnings for limit violations
        if ($self->{ccd_temp} > $config{ccd_temp_red_limit}){
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L2558
  id: '132'
  line_number: 2558
  text: |-
    push @{$self->{warn}}, "$alarm No CCD temperature prediction for obsid\n";
  title: No CCD temperature prediction for obsid
  type: process
- context: |2-
        }
        }

        return $warn_boolean;
    }

    ###################################################################################
    sub set_ccd_temps{
    ###################################################################################
        my $self = shift;
        my $obsid_temps = shift;
        # if no temperature data, just return
        if ((not defined $obsid_temps->{$self->{obsid}})
            or (not defined $obsid_temps->{$self->{obsid}}->{ccd_temp})){
            push @{$self->{warn}}, "$alarm No CCD temperature prediction for obsid\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, sprintf("$alarm Using %s (planning limit) for t_ccd for mag limits\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                           $config{ccd_temp_red_limit});
            $self->{ccd_temp} = $config{ccd_temp_red_limit};
            return;
        }
        # set the temperature to the value for the current obsid
        $self->{ccd_temp} = $obsid_temps->{$self->{obsid}}->{ccd_temp};
        $self->{n100_warm_frac} = $obsid_temps->{$self->{obsid}}->{n100_warm_frac};
        # add warnings for limit violations
        if ($self->{ccd_temp} > $config{ccd_temp_red_limit}){
            push @{$self->{warn}}, sprintf("$alarm CCD temperature exceeds %.1f C\n",
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L2559
  id: '133'
  line_number: 2559
  text: |-
    push @{$self->{warn}}, sprintf("$alarm Using %s (planning limit) for t_ccd for mag limits\n",
    $config{ccd_temp_red_limit});
  title: Using default/planning limit for CCD temperature
  type: process
- context: |2-
        my $obsid_temps = shift;
        # if no temperature data, just return
        if ((not defined $obsid_temps->{$self->{obsid}})
            or (not defined $obsid_temps->{$self->{obsid}}->{ccd_temp})){
            push @{$self->{warn}}, "$alarm No CCD temperature prediction for obsid\n";
            push @{$self->{warn}}, sprintf("$alarm Using %s (planning limit) for t_ccd for mag limits\n",
                                           $config{ccd_temp_red_limit});
            $self->{ccd_temp} = $config{ccd_temp_red_limit};
            return;
        }
        # set the temperature to the value for the current obsid
        $self->{ccd_temp} = $obsid_temps->{$self->{obsid}}->{ccd_temp};
        $self->{n100_warm_frac} = $obsid_temps->{$self->{obsid}}->{n100_warm_frac};
        # add warnings for limit violations
        if ($self->{ccd_temp} > $config{ccd_temp_red_limit}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, sprintf("$alarm CCD temperature exceeds %.1f C\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                           $config{ccd_temp_red_limit});
        }
        elsif ($self->{ccd_temp} > $config{ccd_temp_yellow_limit}){
            push @{$self->{fyi}}, sprintf("$info CCD temperature exceeds %.1f C\n",
                                                  $config{ccd_temp_yellow_limit});
        }
    }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L2569
  id: '134'
  line_number: 2569
  severity: red
  text: |-
    push @{$self->{warn}}, sprintf("$alarm CCD temperature exceeds %.1f C\n",
    $config{ccd_temp_red_limit});
  title: CCD temperature prediction exceeds red limit
  type: process
- context: |2-
            push @{$self->{warn}}, "$alarm No CCD temperature prediction for obsid\n";
            push @{$self->{warn}}, sprintf("$alarm Using %s (planning limit) for t_ccd for mag limits\n",
                                           $config{ccd_temp_red_limit});
            $self->{ccd_temp} = $config{ccd_temp_red_limit};
            return;
        }
        # set the temperature to the value for the current obsid
        $self->{ccd_temp} = $obsid_temps->{$self->{obsid}}->{ccd_temp};
        $self->{n100_warm_frac} = $obsid_temps->{$self->{obsid}}->{n100_warm_frac};
        # add warnings for limit violations
        if ($self->{ccd_temp} > $config{ccd_temp_red_limit}){
            push @{$self->{warn}}, sprintf("$alarm CCD temperature exceeds %.1f C\n",
                                           $config{ccd_temp_red_limit});
        }
        elsif ($self->{ccd_temp} > $config{ccd_temp_yellow_limit}){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{fyi}}, sprintf("$info CCD temperature exceeds %.1f C\n",
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                                                  $config{ccd_temp_yellow_limit});
        }
    }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L2573
  id: '135'
  line_number: 2573
  severity: yellow
  text: |-
    push @{$self->{fyi}}, sprintf("$info CCD temperature exceeds %.1f C\n",
    $config{ccd_temp_yellow_limit});
  title: CCD temperature prediction exceeds yellow limit
  type: process
- context: |2
            push @probs, $star_prob;
                $slot_probs{$c->{"IMNUM$i"}} = $star_prob;
                $c->{"P_ACQ$i"} = $star_prob;
        }
        }
        $self->{acq_probs} = \%slot_probs;

        # Calculate the probability of acquiring n stars
        my ($n_acq_probs, $n_or_fewer_probs) = _prob_n_acq(\@probs);

        $self->{figure_of_merit} = {expected => substr(sum(@probs), 0, 4),
                                    cum_prob => [map { log($_) / log(10.0) } @{$n_or_fewer_probs}],
                                    cum_prob_bad => ($n_or_fewer_probs->[2] > $CUM_PROB_LIMIT)
                                    };
        if ($n_or_fewer_probs->[2] > $CUM_PROB_LIMIT){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$self->{warn}}, ">> WARNING: Probability of 2 or fewer stars > $CUM_PROB_LIMIT\n";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }

    }


    sub set_dynamic_mag_limits{
        my $c;
        my $self = shift;
        return unless ($c = $self->find_command("MP_STARCAT"));
  filename: src/lib/Ska/Starcheck/FigureOfMerit.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/FigureOfMerit.pm#L76
  id: '136'
  line_number: 76
  text: |-
    push @{$self->{warn}}, ">> WARNING: Probability of 2 or fewer stars > $CUM_PROB_LIMIT\n";
  title: Overall acquisition probability is poor
  type: aca_check
- context: |2-
        if (($mag < 8.5) or ($prob > $max_star_prob)){
            $prob = $max_star_prob;
        }

        foreach my $warning (@warnings) {
        if ($warning =~ /B-V = 0.700/) {
            $prob *= $p_0p7color;
        }
            if ($warning =~ /B-V = 1.500/) {
                $prob *= $p_1p5color;
            }
        if ($warning =~ /Search Spoiler/) {
            $prob *= $p_seaspo;
        }
        if ($warning =~ /Bad Acquisition Star/){
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            my ($failed, $total) = parse_bad_acq_warning($warning);
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            $prob = ($total - $failed) / $total;
                last;
        }
        }
        return $prob;
    }


    ##*****************************************************************************************
    sub parse_bad_acq_warning {
  filename: src/lib/Ska/Starcheck/FigureOfMerit.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/FigureOfMerit.pm#L133
  id: '137'
  line_number: 133
  text: |-
    my ($failed, $total) = parse_bad_acq_warning($warning);
  title: Spurious check entry due to unexpected regex match
  type: spurious
- context: |2-

        for (my $i = 0; $i <= $#{$times}; $i++) {
        # If command contains RESET, then turn off (i.e. set tstop) any
        # fid light that is on
        if ($actions->[$i] =~ /RESET/) {
            foreach my $fid (1 .. 14) {
            foreach my $fid_interval (@{$fs[$fid]}) {
                $fid_interval->{tstop} = $times->[$i] unless ($fid_interval->{tstop});
            }
            }
        }
        # Otherwise turn fid on by adding a new entry with tstart=time
        elsif ((my $fid) = ($actions->[$i] =~ /FID\s+(\d+)\s+ON/)) {
            push @{$fs[$fid]}, { tstart => $times->[$i] };
        } else {
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
            push @{$error}, "Parse_cm_file::fidsel: WARNING - Could not parse $actions->[$i]";
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
        }
        }

        return ($fid_time_violation, $error, \@fs);
    }

    ###############################################################
    sub get_fid_actions {
    ###############################################################
        my $fs_file = shift;    # Fidsel file name
  filename: src/lib/Ska/Parse_CM_File.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Parse_CM_File.pm#L262
  id: '138'
  line_number: 262
  text: |-
    push @{$error}, "Parse_cm_file::fidsel: WARNING - Could not parse $actions->[$i]";
  title: Could not parse fidsel file
  type: process
- context: |2-
            next unless $c->{"IMNUM$dts_index"} == $dts_slot and $c->{"TYPE$dts_index"} =~ /GUI|BOT/;
            $dts_type = $c->{"TYPE$dts_index"};
            last;
          }
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. DTS for [%2d] is set to slot %2d which does not contain a guide star.\n",
                         $idx_hash{idx}, $idx_hash{idx}, $dts_slot)
            if $dts_type =~ /NULL/;
          next IDX;
        }

        if (($idx_hash{type} =~ /GUI|BOT/) and ($idx_hash{size} eq '8x8') and ($idx_hash{imnum} == 7)){
          $stealth_mon = 1;
          push @{$self->{fyi}}, sprintf("$info [%2d] Appears to be MON used as GUI/BOT.  Has Magnitude been checked?\n",
                        $idx);
          # if it doesn't match the requested location
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
          push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
    # XXXXXXXXXXXXX MARKED WARNING XXXXXXXXXXXXX
                         , $idx_hash{idx}, $idx_hash{sep})
            if $idx_hash{sep} > 2.5;

          next IDX;
        }
        if ((not $found_mon) and ($idx_hash{sep} < 2.5)){
          # if there *should* be one there...
          push @{$self->{fyi}}, sprintf("$info [%2d] Commanded at intended OR MON position; but not configured for MON\n",
                        $idx);
        }
  filename: src/lib/Ska/Starcheck/Obsid.pm
  github_url: https://github.com/sot/starcheck/blob/cef8d8482300904b9335f968a8f852a6ae72b435/src/lib/Ska/Starcheck/Obsid.pm#L1577
  id: '139'
  line_number: 1577
  orvdot: Would require MON converted to GUI/BOT.
  text: |-
    push @{$self->{warn}}, sprintf("$alarm [%2d] Monitor Commanding. Monitor Window is %6.2f arc-seconds off of OR specification\n"
    , $idx_hash{idx}, $idx_hash{sep})
    if $idx_hash{sep} > 2.5;
  title: Monitor window off from OR specification (guide star version)
  type: aca_check
- aca_cl_id: '045'
  id: m001
  orvdot: Include a split dark cal observation
  title: Dark cal commanding is incorrect
  type: aca_check
info:
  starcheck_commit: cef8d8482300904b9335f968a8f852a6ae72b435
  tags:
  - '11.11'
